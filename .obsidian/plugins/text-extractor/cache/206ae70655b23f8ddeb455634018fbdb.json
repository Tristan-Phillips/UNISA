{"path":"UNISA/98906 - BSc Science in Computing/COS3761 - Formal Logic III/Unsorted/COS 3761/Assignments/c376b202sem1-18.pdf","text":"COS3761/202/1/2018 Formal logic 3 Tutorial letter 202 (first semester) for COS3761 Solutions to Assignment 2 School of Computing COS3761/202/1/2018 TUTORIAL MATTER You should already have received the material listed below. If any of it is missing, please contact the Department of Despatch. You may also download it from the Internet – see tutorial letter COSALLF/301/4/2011.  The prescribed book for Formal Logic 2 (module COS2661or COS261C) is Language, proof and logic by Barwise, J. & J. Etchemendy. Stanford: Center for the Study of Language and Information. 1999, 2000, 2002, 2003. ISBN: 1-57586-374-X.  The prescribed book for Formal Logic 3 (module COS3761or COS361F) is Logic in Computer Science: Modelling and Reasoning about Systems by Michael Huth and Mark Ryan. 2004. ISBN: 0 521 54310 X paperback. Second edition. SEMESTER MARK The first two assignments contribute towards your semester mark for this module. Assignment 1 carries a weight of 30% and the second assignment a weight of 70%. The semester mark contributes 10% to the final mark for this module. Suppose a student gets 60% for Assignment 1 and 50% for Assignment 2. In order to calculate the semester mark, the mark obtained for the specific assignment is multiplied by the weight. This then forms part of the 10% that the semester mark contributes to the final mark. Therefore: Assignment Marks obtained Weight Contribution to semester mark 1 60% 30% 60/100 x 30/100 x 10 1.80 2 50% 70% 50/100 x 70/100 x 10 3.50 TOTAL 5.30 Hence, in this example the semester mark is 5.30. Note that the semester mark will not form part of the final mark if the supplementary examination is written. COS3761/202/1/2018 SOLUTION TO ASSIGNMENT 2 QUESTION 1 If you encountered major difficulties with this question, we suggest that you work through the relevant chapters of the prescribed book of Formal Logic 2 again. Also keep in mind that in most cases  the implication connective  needs to be involved when  occurs in a sentence, and that  the conjunction connective  needs to be involved when  occurs in a sentence. Question 1.1 x (J(x)  y (R(y)  T(x, y))) We also accepted x (J(x)  y T(x, y)) The x operator is needed because the sentence applies to all serious joggers. Also note how “only if” is implemented. Question 1.2 T(a, c)  (W(a, c)  T(b, c)) The  operator is needed because of “but” in the English sentence. Again note how “only if” is translated. Question 1.3 x [R(x)  T(a, x)  T(b, x)  y (T(y, x)  ¬ E(y, a)  ¬ E(y, b))] Question 1.4 ¬ W(a, c)  ¬ W(b, c) Question 1.5 x y ((R(y)  W(x, y))  T(x, c)) We also accepted x y (W(x, y)  T(x, c)) Question 1.6 x (R(x)  W(y, c)  ¬ W(y, x)) Note that y is a free variable in the formula. COS3761/202/1/2018 QUESTION 2 Question 2.1 Aggie never wins a race. Question 2.2 Aggie and Ben take part in every race. Question 2.3 Ben does not win if Aggie participates in the race. Question 2.4 There is a race that is not won by a serious jogger. Question 2.5 Aggie wins a race and Ben wins another. QUESTION 3 Terms and formulas are defined in your textbook on pages 99 and 100, respectively. 3.1 Not a term or wff. The quantifier  should be followed by a variable, not a constant. 3.2 A wff. 3.3 Not a term or a wff. A predicate symbol (Q in this case) cannot have a predicate symbol (P in this case) as argument. 3.4 A term. 3.5 Not a term or a wff. A function (f in this case) cannot have a predicate symbol as argument. 3.6 Not a term or a wff. The predicate symbol Q should have two arguments. 3.7 A wff. COS3761/202/1/2018 QUESTION 4 Question 4.1 Bound Free Free Bound Free Free Bound Question 4.2 4.2.1 φ[f(y) / z] There are three free occurrences of z in φ. No problem occurs if we replace the first (free) occurrence of z by f(y), but if we replace the other two (free) occurrences of z in φ by f(y), we are in the scope of y and the argument y of f will become bound by that. We should first rename all the bound occurrences of y in φ before doing the substitution. Suppose we rename y by u. Then the first step would be x [Q(x, y, z)  u (P(u, z)  P(z, x))] and the substitution step would be x [Q(x, y, f(y))  u (P(u, f(y))  P(f(y), x))] 4.2.2 φ[f(z) / y] No problem is created here. Note that there is only one free occurrence of y in φ. The substituted formula is x [Q(x, f(z), z)  y (P(y, z)  P(z, x))] 4.2.3 φ[f(x) / y] There is only one free occurrence of y in φ, but it occurs within the scope of x. Its substitution by f(x) will therefore create a problem because the argument x of f will become bound by x. We should first rename all the bound occurrences of x in φ before doing the substitution. Suppose we rename x by u. Then the first step would be u [Q(u, y, z)  y (P(y, z)  P(z, u))] and the substitution step would be u [Q(u, f(x), z)  y (P(y, z)  P(z, u))] QUESTION 5 x  Q y  x z P P x z z y y COS3761/202/1/2018 We give three examples of a model M where both formulas are true. First example: A = {a, b, c} S M = {(a, b), (b, c), (a, c)} Second example: A = {Tom, Dick, Harry} S M : We interpret S as “are full (not half- or step-) brothers”. Third example: A : the set of positive integers S M : We interpret S(x, y) as “x is greater than y”. QUESTION 6 We give one example of each. Model M where the sentence is true: A : the set of natural numbers R M : We interpret R(x, y) as “x is equal to 2 times y”. Model M where the sentence is false: A : the set of natural numbers R M : We interpret R(x, y) as “x is equal to y”. QUESTION 7 We want to find out whether the sentence x y ((R(x, y)  ¬ R(y, x))  R(y, y)) is true in the model M: A = {a, b, c, d} R M = {(a, a), (a, b), (a, c), (a, d), (b, a)} We investigate all the elements of the universe because of the occurrence of x y in the sentence. a: The tuple (a, a) is in the set R M, making the second disjunct and thus the sentence true. b: The tuple (b, b) is not in the set R M, making the second disjunct false. Let us investigate the first disjunct: The tuple (a, b) is in the set, but the tuple (b, a) is also in the set R M, thus the first disjunct of the sentence is false. Because both disjuncts are false when x = a and y = b, the sentence is false. We need not investigate any other tuples, because we already found an instance where the model does not satisfy the sentence. This means that the given model does not satisfy the sentence. COS3761/202/1/2018 QUESTION 8 We have to show that the validity of the given sequents cannot be proved by finding for each of them a model where all formulas to the left of ├ evaluate to T but the formula to the right of ├ evaluates to F. We give one example in each case. Question 8.1 Let the universe be the integers and interpret R(x) as “x is an even number” and Q(x) as “x is an odd number”. Question 8.2 Let the universe be the integers and interpret R(x) as “x is an even number” and Q(x) as “x is a multiple of 3”. QUESTION 9 If you encountered major difficulties with this question, we suggest that you work through the relevant chapters of the prescribed book of Formal Logic 2 again. You could also use the Fitch software to help you. Note that some of the rules are named differently and that premises should be explicitly indicated here, but the application of the rules is exactly the same, of course. Question 9.1 Here the rule where x is introduced (namely x i) should be used. Note how it should be done: choose x0 inside the subproof and cite the rule outside the subproof. 1 x (P(x)  Q(x)) premise 2 x0 3 P(x0)  Q(x0) x e 1 4 P(x0) e 3 5 x P(x) x i 2 - 4 6 x0 7 P(x0)  Q(x0) x e 1 8 Q(x0) e 7 9 x Q(x) x i 6 - 8 10 x P(x)  x Q(x) i 5, 9 COS3761/202/1/2018 Question 9.2 In this solution we have two nested subproofs. The x i rule is used again: x0 is chosen at the start of a subproof and the rule is cited once the subproof has been exited (line 6). Furthermore, we have a sub-subproof where P(x0) is assumed in line 3 and  is deduced in line 5. Then the sub-subproof is exited and P(x) is derived by using the i in line 7 x P(x) ├ xP(x) 1 x P(x) premise 2 x0 3 4 5 P (x0) assumption x P(x) x i 3  ¬e 4, 1 6 P(x0) i 3-5 7 xP(x) x i 2-6 Question 9.3 Many students have difficulty with the application of the x elimination rule. In many cases when the premise starts with x, i.e. when the premise is x , we need to use the x elimination rule. That means that we need to introduce a fresh variable and then assume  with x substituted by the fresh variable. Below this is done in line 2. The x elimination rule is cited in line 9. Note the subproof starting in line 4 with the assumption of P(x0)  Q(x0). We actually want to prove a formula that is the negation of P(x)  Q(x), so we try to derive  (line 6) and then use the ¬ i rule (line 7). Also note the line where the x introduction rule is used, namely line 8. We are still inside the subproof that started in line 2. 1 x (¬ P(x)  ¬ Q(x)) premise 2 x0 ¬ P(x0)  ¬ Q(x0) assumption [x0/x] 3 ¬ P(x0) e 2 4 P(x0)  Q(x0) assumption 5 P(x0) e 4 6  ¬e 3, 5 7 ¬ (P(x0)  Q(x0)) ¬i 4 – 6 8 x (¬ [P(x)  Q(x)]) x i 7 9 x (¬ [P(x)  Q(x)]) x e 1, 2 - 8 COS3761/202/1/2018 Question 9.4 1 x y z (S(x, y)  S(y, z)  S(x, z)) premise 2 x ¬ S(x, x) premise 3 x0 4 y z (S(x0, y)  S(y, z)  S(x0, z)) x e 1 5 ¬ S(x0, x0) x e 2 6 y0 7 z (S(x0, y0)  S(y0, z)  S(x0, z)) y e 4 8 S(x0, y0)  S(y0, x0)  S(x0, x0) z e 7 9 S(x0, y0) assumption 10 S(y0, x0) assumption 11 S(x0, y0)  S(y0, x0) i 9, 10 12 S(x0, x0) e 8, 11 13  ¬e 5, 12 14 ¬ S(y0, x0) ¬i 10 – 13 15 S(x0, y0)  ¬ S(y0, x0) i 9 – 14 16 y (S(x0, y)  ¬ S(y, x0)) y i 6 – 15 17 x y (S(x, y)  ¬ S(y, x)) x i 3 – 16 This proof looks more complicated than it is. We use two nested subproofs in order to introduce two free variables so that we may use the x and y elimination rules and later, outside the subproofs, the x and y introduction rules. (There is no need to introduce a third free variable to eliminate z.) Then we assume S(x0, y0) in line 9 at the beginning of a subproof so that we may have S(x0, y0)  ... directly outside the subproof in line 15. We have a further nested subproof starting with the assumption of S(y0, x0) in line 10 so that we may deduce  inside the subproof (line 13) and then have ¬ S(y0, x0) outside the subproof in line 14. COS3761/202/1/2018 Question 9.5 The proof is very similar to the solution to question 9.3 above, but note the two sub-subproofs (6 – 7 and 8 – 9) that are necessary so that the e rule may be cited in line 10. 1 x (¬ P(x)  Q(x)) premise 2 x0 ¬ P(x0)  Q(x0) assumption [x0/x] 3 P(x0)  ¬ Q(x0) assumption 4 P(x0) e 3 5 ¬ Q(x0) e 3 6 ¬ P(x0) assumption 7  ¬e 4, 6 8 Q(x0) assumption 9  ¬e 5, 8 10  e 2, 6 – 7, 8 – 9 11 ¬ (P(x0)  ¬ Q(x0)) ¬i 3 – 10 12 x (¬ (P(x)  ¬ Q(x))) x i 11 13 x (¬ (P(x)  ¬ Q(x))) x e 1, 2 - 12 © UNISA 2018","libVersion":"0.2.3","langs":""}