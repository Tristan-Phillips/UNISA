{"path":"UNISA/98906 - BSc Science in Computing/COS3711 - Advanced Programming/Unsorted/Open Book Exam Files/Code Examples/A2/COS3711 2022 Assignment 2.pdf","text":"COS3711/Assignment 2/2022 1 Assignment Tutorial Letter 2022 Advanced Programming COS3711 Year module Computer Science Department Assignment 2 - Questions BARCODE COS3711/Assignment 2/2022 2 Assignment 2 1. Introduction There are two parts to this assignment.  Part A is to be submitted for marking.  Part B is for extra practice of examinable concepts and should not be submitted. Please note that Qt Designer should not be used, and you are expected to manually set up GUIs to ensure that you properly handle memory using Qt’s parent-child functionality. Marks will also be awarded for following good programming practice, for example, naming conventions, code layout, using forward class declarations and initialiser lists in constructors, and GUI handling like setting focus, tabbing and clearing input widgets (like text input fields being cleared and spin boxes being returned to some default value), and providing appropriate user feedback. Your code should build and run without any warnings. 2. Part A (To be submitted) Question 1 Write a GUI program that will parse an XML file to check whether each start tag (such as <name>) has an end tag (such as </name>); empty element tags (such as <br/>, where you may assume that such tags have / before >) should also be identified, but declaration tags (such as <?xml version=\"1.0\" encoding=\"UTF-8\"?>) can be ignored. You may assume that all the tags are all well-formed, and that there are no tags that are both end and empty element tags. Allow the user to select the file to be checked and use regular expressions to identify tags in the file (try to use just one regular expression to identify both start and end tags). Ensure that the program does not end abruptly if no file is selected, a blank file is selected, or no tags are found for displaying. You are required to use the QRegularExpression class (and not the older QRegExp class). Once the file has been checked, display the following (in order):  Cases where there is a start tag with no end tag.  Cases where there is an end tag with no start tag.  All empty element tags. Tags may contain alphanumeric characters, underscores, or hyphens; you may assume that there are no spaces in the tags. You are not expected to ensure that the tags are correctly nested but are simply checking that each start tag has an end tag and vice versa. Use appropriate OOP design principles when designing your solution. COS3711/Assignment 2/2022 3 Below is an example of the output. Question 2 Study the GuestHouse project, a console application provided on myUnisa under Additional Resources. Modify GuestHouse so that it becomes a graphical user interface (GUI) application, where a user can add a booking, check whether there is a vacancy in the guest house during a specified time period and find out how many rooms are available on a given date. Thus, the user interface should have appropriate widgets to enable the user to achieve these three tasks. To support serialization of bookings, expand the GuestHouse GUI project so that the list of Bookings managed by BookingList can be written to a file in an XML format and a BookingList object can be re-created with a list of Bookings read from an XML file. You should use DOM in both cases (that is, to read from and write to XML). Given below is an XML format that should be used for saving a BookingList object. The XML format should have the same number of elements for booking and attributes for booking, contact, guest but the order of the elements and attributes can be different from the format given below: <bookinglist> <booking type=\"sharing\"> <contact telnumber=\"082 280 2882\" name=\"A Balone\" email=\"ab@agent.com\"/> <arrivaldate>2015/07/08</arrivaldate> <departuredate>2015/07/12</departuredate> <guest telnumber=\"073 527 3492\" name=\"B Eater\" email=\"be@holliday.com\"/> <guest telnumber=\"012 345 6789\" name=\"C Locanth\" email=\"cl@holliday.com\"/> </booking> <booking type=\"single\"> <contact telnumber=\"082 280 2882\" name=\"A Balone\" email=\"ab@agent.com\"/> <arrivaldate>2015/07/08</arrivaldate> COS3711/Assignment 2/2022 4 <departuredate>2015/07/12</departuredate> <guest telnumber=\"082 280 2882\" name=\"A Balone\" email=\"ab@agent.com\"/> </bookinglist> The BookingList object should be written to XML automatically when the GUI is closed, to a file chosen by the user. Similarly, when the application starts it should give the user an option to read from an XML file chosen by the user. Make use of the standard file dialog to assist the user in selecting files. You are allowed to modify the classes in the given project. You should also be adding new classes to answer this question. You are expected to follow good programming design and principles. You can decide on the design of the GUI and it should be done manually (not using Qt Designer). Question 3 In this exercise, you will design a simple calculator with four basic operations, namely addition, subtraction, multiplication, and division. Implementation of this simple calculator should separate the code for user interface and mathematical operations. The code for performing mathematical operations should be designed using the following class hierarchy: The Operation class hierarchy contains the logic for performing various mathematical operations. A concrete class in this hierarchy represents one mathematical operation, which is performed in its compute() function that returns the result of an operation. Implement the Factory method design pattern using one factory class named OperationFactory so that an instance of a class in the Operation class hierarchy can be created based on the requested operation (+, -, *, /). Additionally, OperationFactory should also be an implementation of Singleton. The user interface for the calculator should make use of five QPushbuttons, two QDoubleSpinBoxes and one QLCDNumber as shown below: COS3711/Assignment 2/2022 5 QDoubleSpinBoxes allow user to enter numbers and QLCDNumber is for displaying the result of the calculation. To use the calculator, the user should first enter two numbers and then select one of the four (+, -, *, /) buttons. The result of the operation is displayed in QLCDNumber. The button clear is used to clear QDoubleSpinBoxes and QLCDNumber. Note the following:  The signals emitted by the four buttons (+, -, *, /) should be handled in a single slot.  The user interface code should make use of the Operation class hierarchy to get the result of the requested operation.  Handle overflow in QLCDNumber display appropriately.  Handle division by 0 appropriately. 3. PART B (For self-assessment; not to be submitted) Question 4 Write an application that uses regular expressions to check for problems in a text file (.txt) provided by a user. The following functionality should be included.  The user should be able to select the file to check using a standard file open dialog box.  There should be some way of indicating that the file has been loaded.  Problematic words should be displayed, giving the line number and the word number in the line as well. The following problematic words should be flagged (using regular expressions to identify such words):  Words with a number anywhere in the word  Words with a capital letter in any position apart from at the start of the word.  Words that have any special characters (like #, *, /, @, ^, and so on) as part of the word. Note that a – is acceptable. The screenshot below gives examples of words that should be flagged. COS3711/Assignment 2/2022 6 Question 5 Modify the solution to Question 2 so that QXMLStreamReader and QXMLStreamWriter are used to read and write the XML file respectively. Question 6 It is said that the pseudo-random number generator of Qt generates a deterministic sequence of numbers based on the seed value passed to the constructor (refer to QRandomGenerator). In other words, you can generate the same sequence of numbers if the seed value is the same. Write a class named RandomNumberGenerator that has a data member seed that is used to seed the random number generator. The value of seed is set and managed by the class itself and it cannot be accessed outside the class. It also has a member function, generateRandomNumbers(), to generate and return n random numbers within a specified range of numbers. Implement a memento class for RandomNumberGenerator that so that the value of the seed can be saved at a given time. Implement a Caretaker that is in charge of requesting the list of random numbers from a RandomNumberGenerator instance as well as requesting and maintaining a number of mementos of RandomNumberGenerator. Of course, the Caretaker can request the instance of RandomNumberGenerator to roll back to a previous seed value using a memento. To make it fun use RandomNumberGenerator to simulate the rolling of a dice n number of times. The values of a dice are between 1 and 6. The Caretaker should present the values of the dice (for every roll) to the user graphically as well as let the user choose a previous sequence to demonstrate that the function generateRandomNumbers() produces the same sequence of numbers for a given seed value passed to the random number generator using the mementos saved in the Caretaker. COS3711/Assignment 2/2022 7 Note that you have the flexibility in designing the classes taking into account the requirements stated above. You can also decide how you want to represent the values of the dice graphically. © Unisa 2022","libVersion":"0.2.3","langs":""}