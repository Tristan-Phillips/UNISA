{"path":"Subjects/COS3711 - Advanced Programming/Unsorted/SORT/Prev Sem/COS3711/Drive/COS3711/Exam Papers/October2013.pdf","text":"October / November 2013 exam Question 1 1.2 Timer.h 01 Class Timer : public QObject { 05 Timer (int secs); 06 void startCountDown (int secs); 07 public signals: 08 void time (int s); 09. Void finished ( ); Private: int seconds; }; Timer.cpp void Timer::startCountDown (int secs) { for (int i = secs; i >=0; i--) emit time (i); } main.cpp 11 QMutex mutex; 12 mutex.lock ( ); 13 Timer timer; 14 Timer.startCountDown ( ); 15 mutex.unlock ( ); emit finished ( ); Question 3.2 //to listen for incoming connections tcpServer = new QTcpServer (this); if (! tcpServer->listen ( )) { QMessageBox::critical (this, tr(\"unable to start the server\")); connect (tcpServer, SIGNAL, ( newConnection( )), this, SLOT, (incomingConnection ( ))); //to read data client = new QTcpSocket (this); connect (client, SIGNAL, (readyRead ( )),this, SLOT , (readMessage ( ))); In the readMessage slot, I would encode port (the quint16) into QDataStream inorder to transfer binary data using QTcpSocket as follows: quint16 port; QDataStream in (&port, QIODevice::ReadOnly);","libVersion":"0.2.3","langs":""}