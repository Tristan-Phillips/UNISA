{"path":"UNISA/98906 - BSc Science in Computing/INF3707 - Database Design and Implementation/Unsorted/INF3707/INF3707 Exam pack/Exam Shit/Materials/INF3707-202-Assignment 1 and 2 MEMO.pdf","text":"INF3707/202/02/2020 Tutorial Letter 202/02/2020 Database Design and Implementation INF3707 Semesters 2: Assignment 01 and 02 School of Computing This tutorial letter contains important information about your module. BARCODE 2 Semester 02 Assignment 01 solutions Assignment 1 Total marks Due date Unique number 25 marks (100%) Note that this is a COMPULSORY assignment! If you do not complete this assignment and submit it by the due date, you will not gain examination entry! Assignment 01 semester 02 solutions Question No Answer 1. 1 2. 2 3. 4 4. 2 5. 4 6. 3 7. 2 8. 4 9. 2 10. 4 11. 2 12. 3 13. 3 14. 1 15. 2 16. 3 17. 1 18. 4 19. 2 20. 1 21. 4 22. 2 23. 3 24. 4 25. 3 INF3707 3 Assignment 02 Assignment 2 Total marks Due date Unique number: see TUT 101 marks (100%) See TUT 101 Note that this is a COMPULSORY assignment! If you do not complete this assignment and submit it by the due date, you will not gain examination entry! Please note that if the SQL solution that you provided produced a wrong answer or the code failed to run, you were given a zero mark for that. On question 2, you were asked to create a table. If you failed to create the table, that means you could not successfully do the rest of the questions on Question 2, a mark of zero was awarded. If the table does not exist, how can you insert data into the table or alter the table. All students were allocated to an e-tutor and were expected to get help from the tutors on aspect of Database design and implementation that they do not understand. By providing SQL code that is wrong it means you did not ask for help. If any student finds that their Assignment 2 was not fairly marked, write me an email and identify the question that require remarking. I admit that as markers, we sometimes make mistakes. For fairness, we accept remarking student assignments. However, if you were awarded marks wrongly, if discovered during remarking, they will be deducted as well. Principle of fairness. Question 1 [40 marks] 1.1 List the customer number from the ORDERS table for each customer who has placed an order with the JustLee Books. List each customer only once. (2 marks) SELECT distinct(customer#) from orders or SELECT UNIQUE customer# FROM orders; 1.2 Use the JOIN operator (Join ….using ()) to determine the orders that have not been shipped yet and the names of the customers who placed the orders. Sort the results by the date on which the order was placed. (5 marks) // the question specified Join ….Using(). If you used any other form of join, you were wrong. Learn to follow instructions SELECT c.firstname, c.lastname, o.order# FROM customers c JOIN orders o USING (customer#) 4 WHERE o.shipdate IS NULL ORDER BY o.orderdate; 1.3 Use the single row functions SUBSTR and INSTR to produce a list of each customer’s number, and the third and fourth digits of the customer’s zip code. The query should also display the position of the first occurrence of a 3 in the customer number if it exists. (5 marks) //if you failed to specify the correct indexes(numbers) for SUBSTR and INSTR, you were wrong SELECT customer#, SUBSTR(zip, 3, 2), INSTR(customer#, 3) FROM customers; 1.4 What is the retail price of the most expensive book written by Lisa White? Use the BOOKS, BOOKAUTHOR and AUTHOR tables to create the query. Use the (Join….Using()) statement to create the query. (5 marks) //question specified that use Join…….Using(). Any other join statements you were wrong SELECT title, MAX(retail) FROM books JOIN bookauthor USING (isbn) JOIN author USING(authorid) WHERE lname = 'WHITE' AND fname = 'LISA Group by title; 1.5 Suppose the management of JustLee Books wants to compare the price of each book in the inventory against the average price of all books in the inventory. Use an inline subquery to show each book’s price and the amount above or below the average price of all the books. (5 marks) //use inline subquery. Note that the price of a product is the retail price not the cost. If you said cost, you were wrong. select title, retail, retail - (select to_char(avg(retail), 99.9) from books) as diff from books; INF3707 5 1.6 Suppose you need a list of all books in the BOOKS table that have a higher than average selling price compared with other books in the same category. For each book, you need to display the title, retail price, category and average selling price of books in that category. Because the average selling price is based on grouped data, use multiple column subquery to create the query. (5 marks) Select b.title, b.retail, a.category, a.cataverage From books b, (select category, avg(retail) catavaerage From books Group by category) a Where b.category = a.category And b.retail > a.cataverage Or Select title, retail, category, cataverage From books join (select category, avg(retail) cataverage From books Group by category) Using(category) Where retail > cataverage; 1.7 Using today’s date, determine the age in months of each book that JustLee Books sells. Make sure only whole months are displayed. Ignore any fractions of the month. Display the book title, publication date, current date and age of the book. (5 marks) //The question said calculate age in months. SELECT title, pubdate, SYSDATE, TRUNC(MONTHS_BETWEEN(SYSDATE, pubdate),0) Age FROM books; 6 1.8 Create a list of all customers’ last names of the JUSTLee Books. Precede each first name with an asterisks (*) so that the width of the displayed first name field has a length of 15 characters. The output of your query should look like this. (3 marks) LASTNAME Asterisked Last Name ---------- -------------------- MORALES *********BONITA THOMPSON ***********RYAN SMITH **********LEILA PIERSON *********THOMAS GIRARD **********CINDY SELECT lastname, LPAD(firstname, 15, '*') FROM customers; 1.9 Create a view that lists the ISBN and title for each book in inventory along with the name and phone number of the person to contact if the book need to be reordered. Name the view REORDERINFO. (5 marks) CREATE VIEW reorderinfo AS SELECT isbn, title, contact, phone FROM books JOIN publisher USING (pubid); Question 2 [40 marks] 2.1 Create a table based on the following instance table. The table allows the JustLee bookstore to capture client information when buying books. Choose appropriate data types and be sure to add integrity constraints when creating the table. (10 marks) Client_Data Table Column_Name Member_ID Last_Name Address City Phone Join Date Key Type PK Null/Unique Not Null, Unique Not Null Not Null Default Value Data Type NUMBER VARCHAR2 VARCHAR2 VARCHAR2 VARCHAR 2 Date Length 10 25 100 30 15 INF3707 7 //If you failed to create the table, that means the table does not exist in the database. You cannot insert or alter the table if it is not there. Therefore, the rest of questions in this section becomes wrong. This is a practical module and should be done practically. I saw that some students never used Oracle 18c XE or the Apex to do their assignments. They never attempted to test their code. This is not how you do a practical module. Create Table Client_Data (member_id number(10) Constraint Client_Data_id_pk Primary Key, last_name varchar(25) constraints Client_Data_last_name_nn Not Null, address varchar(100), city varchar(30), phone varchar(15), join_date Date default Sysdate constraint Client_Data_join_date_nn Not Null); 2.2 Change the name of the column “Address” to “Street_Name” (4 marks) //Client_Data table was not created in 2.1, wrong Alter table Client_Data rename column address TO Street_Name; 2.3 Create a sequence for populating the Member_ID column of the Client _Data table. Name the sequence Client_Data_ID_Seq. Start the sequence at 101, increment the sequence by 1, have a maximum value of 5000 and do not allow caching. (5 marks) Create Sequence Client_Data_ID_Seq Start with 101 Increment by 1 Maxvalue 5000 Nocache; 8 2.4 Add the following data to the Client_Data table. Use the Client_Data_ID_Seq sequence to populate the member_id column. (5 marks) Member_id Last_Name Street_Name City Phone Join_Date Brown 283 King Street Pretoria 012 429 7101 08 June 2016 Blue 100 Long Street Cape Town None 10 May 2020 Black 200 Madiba Avenue Durban None 10 November 2018 //Client_Data table was not created in 2.1, wrong. //this is how you insert the data into a table. Only one row is inserted, you can do the rest in the same manner. Insert into Client_Data(Member_ID, Last_Name, Street_Name, City, Phone, Join_Date) values(Client_Data_ID_seq.NEXTVAL, 'Brown', '283 King street', 'Pretoria', '012-429-7102', To_Date('08-June-2016', 'DD- MM-YYYY')) or Insert into Client_Data values(Client_Data_ID_seq.NEXTVAL, 'Brown', '283 King street', 'Pretoria', '012-429-7102', To_Date('08-June-2016', 'DD-MM-YYYY')) 2.5. Make a modification to the Client_Data table by adding the column “Next of kin”. Verify your modification. (3 marks) Answer Alter Table Client_Data Add (Next_Of_Kin varchar2 (30)); //if you modify a table, you check its structure Describe Client_Data 2.6 Drop the Next_Of_Kin column from the Client_Data table. Confirm your modification by checking the description of the table. (3 marks) Answer alter table Client_Data drop column Next_Of_Kin; INF3707 9 describe Client_Data 2.7 Create a B-tree index on the client’s Last_name column. Verify that the index exists by querying the data dictionary. Remove the index from data dictionary. (5 marks) CREATE INDEX Last_name_idx ON client_data(lastname); SELECT index_name FROM user_indexes; DROP INDEX customers_last_idx; 2.8 Temba is a newly appointed trainee in the database administration department. As the manager of the department, provide Temba with access to the Client_Data table, with a password that expire. Temba is expected to query, add rows to the table and also give other users the same priviledges. (5 marks) Answer: Create user Temba identified password password expire; GRANT select, insert ON Client_Data TO Temba WITH GRANT OPTION;","libVersion":"0.2.3","langs":""}