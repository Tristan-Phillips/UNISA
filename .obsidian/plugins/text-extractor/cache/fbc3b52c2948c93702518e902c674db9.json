{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Tutorial Letters/document.pdf","text":"BAR CODE Learn without limits. COS3751/202 1 Assignment 02 model Solutions ASSIGNMENT 02 Solution Total Marks: 70 UNIQUE ASSIGNMENT NUMBER: 245426 (a) (9)Provide the minimax values for all the nodes. A = 9✓, B = 5✓, C = 1✓, D = 7✓, E = 5✓, F = 7✓, G = 8✓, H = 8✓, I = 9✓ (b) (2)Which move should MAX make? Explain your answer. MAX should make move C✓. C has a higher minimax than B✓. (c) (8)Write down the minimax values for all the nodes if alpha/beta pruning is applied to the tree. A = (5, ∞)✓2, B = (−∞, 5)✓, C = (5, ∞)✓, D = (7, infty )✓, E = (5, 7)✓, F = (−∞, 5)✓, G = (5, ∞)✓ (d) (4)Write down which nodes were cut (if any), and if so, what type of cut was made (alpha, or beta). M (β-cut)✓, O (β-cut)✓, H (α-cut)✓, I (α-cut)✓ Question 2: 8 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (2.1) (2)Explain what backtracking for a CSP is. When an inconsistency is found✓, we trace back to the last legal variable assign- ments✓. (2.2) (2)Why is arc consisteny such an important part of solving CSPs? Arc consistency allows us to determine the legal values✓for variables✓. (2.3) (2)Deﬁne the Most Remaining Values (MRV) heuristic. The minimum-remaining-values✓heuristic chooses the variables with the least num- ber of legal remaining values hoping to cause a failure (or ﬁnd a solution soon)✓. (2.4) (2)If no legal assignments for a variable remain during a solution to a CSP, does it mean that the problem is not solvable? Explain your answer. No✓, using backtracking one may be able to trace back to a state from which a solution can be found✓. Question 3: 19 Marks Consider the following cryptarithmetic puzzle: GOLLUM + SMEAGOL = SARUMAN Each letter represents a speciﬁc digit and each digit can only be represented by a speciﬁc letter. (3.1) (15)Re-write the puzzle in terms of a Constraint Satisfaction Problem (CSP) by 1. Deﬁning the variables and their domains, and 2. Deﬁning the constraints on the variables. 4 COS3751/202 1. Variables: X = {G, O, L, U, M, S, E, A, R, N}✓ 5 1. alldiff(G,O,L,U,M,S,E,A,R,N)✓ 2 2. M + L = C1 × 10 + N✓ 3. C1 + U + O = C2 × 10 + A✓ 4. C2 + L + G = C3 × 10 + M✓ 5. C3 + L + A = C4 × 10 + U✓ 6. C4 + O + E = C5 × 10 + R✓ 7. C5 + G + M = C6 × 10 + A ✓ 8. C6 + S = A✓2 Using aux vars is also acceptable. We only provide the `shortcut' constraints here. A full enumeration would take too much space. (< M, L, C1, N >, {(2, 3, 0, 5), (1, 2, 10, 4), ...} > (3.2) (4)Provide the solution to this cryptarithmetic puzzle. GOLLUM+SMEAGOL=SARUMAN (127768✓+4809127✓=4936895✓2) Question 4: 11 Marks Consider the problem of assigning aircraft to ﬂights (assume that the airline uses the same model for all of its ﬂights). Obviously an airline does not own an inﬁnite number of aircraft – so part of the problem is determining how to do the assignment of aircraft to ﬂights correctly. Consider the following ﬂight schedule (for a particular 24-hour period): 1. Flight 1: 09:30 - 11:30 2. Flight 2: 08:30 - 09:30 3. Flight 3: 05:00 - 06:00 4. Flight 4: 12:00 - 14:00 5. Flight 5: 11:00 - 13:00 6. Flight 6: 14:30 - 15:00 7. Flight 7: 16:00 - 17:00 8. Flight 8: 12:00 - 12:45 9. Flight 9: 12:46 - 13:15 10. Flight 10: 05:30 - 06:30 11. Flight 11: 15:30 - 17:00 5 12. Flight 12: 19:00 - 20:00 Now answer these questions. (4.1) (3)Deﬁne the variables for this scheduling problem. Explain your choice. The limited amount of information is by design – actual scheduling would involve the location of a ﬂight, return times, crew and so on – so we are dealing with a toy problem. However, the simplest way to think about this is to realise that, we have 12 ﬂights, and no two airplanes can be assigned to the same ﬂight✓2. It is thus a graph-colouring problem with the ﬂights as variables: X = {ﬂight1, ﬂight2, ﬂight3, ...}✓. (4.2) (4)Provide the constraint-graph for this problem. flight1 flight2 flight5 flight3 flight10 flight4 flight8 flight9 flight6 flight7 flight11 flight12 ✓ 4 (4.3) (2)Deﬁne the domains for the variables. Explain your choice. The domain for each variable is the aircraft: DX = {A1, A2, ... , An} for n number of aircraft.✓ 2 (4.4) (2)Provide the solution to the problem. ﬂight1,ﬂight3,ﬂight4,ﬂight6,ﬂight7,ﬂight12 can all make use of the same aircraft (red colour). ﬂight2, ﬂight5, ﬂight10, and ﬂight11 can make use of the same aircraft (blue colour). ﬂight8 and ﬂight9 can make use of the same aircraft (green) (any similar solution✓2. if some constraints are not met only 1 mark) 6","libVersion":"0.2.3","langs":""}