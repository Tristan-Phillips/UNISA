{"path":"Subjects/COS1512 - Introduction to Programming II/Unsorted/An array as member variable of a class.pdf","text":"An array as member variable of a class This is a simple program to illustrate an array as a data member of a class. The class RainData keeps the rainfall data for one month, and has two data members, rainMonth (an array of 31 integers) and month (for the name of the month). All the program does, is to read the monthâ€™s name and the rainfall for each day of the month. Then the month and the rainfall for reach day is displayed on the screen. Of course it can be refined a lot more, but this just serves to illustrate how to work with an array as a data member of a class. Study the green highlighted sections to see how we work with an array data member in a class. #include <iostream> #include <cstdlib> using namespace std; //class declaration class RainData { public: RainData();//constructor RainData(string m); //overloaded constructor string getMonth(); //accessor for month int getRainfall(int i); // accessor for rainfall on a //specific day of the month void setMonth(string m); //mutator for month void setRainfall(int day, int rainfall);//mutator to set the // rainfall for a specific day of the month private: int rainMonth[31];//rainfall for one month string month; //the month for which the data is kept }; //class implementation RainData::RainData() { for(int i = 0; i < 31; i++) rainMonth[i] = 0; month = \"\"; } RainData::RainData(string m) { for(int i = 0; i < 31; i++) rainMonth[i] = 0; month = m; } string RainData::getMonth() { return month; } int RainData::getRainfall(int i) { return rainMonth[i]; } void RainData::setMonth(string m) { month = m; } void RainData::setRainfall(int day, int rainfall) { rainMonth[day] = rainfall; } //main program int main() { RainData oneMonth; string mo; int rf; cout << \"Enter month:\" << endl; cin >> mo; oneMonth.setMonth(mo); for (int i = 0; i <31; i++) { cout << \"Enter rainfall for day \" << i+1 <<\" :\"; cin >> rf; oneMonth.setRainfall(i,rf); } cout << endl << \"Display rainfall for month:\" << oneMonth.getMonth() << endl; for (int i = 0; i < 31; i++) { cout << \"Rainfall for day \" << i+1 <<\" :\" << oneMonth.getRainfall(i) << endl; } return 0; } Output Enter month: January Enter rainfall for day 1 :1 Enter rainfall for day 2 :2 Enter rainfall for day 3 :0 Enter rainfall for day 4 :3 Enter rainfall for day 5 :2 Enter rainfall for day 6 :1 Enter rainfall for day 7 :0 Enter rainfall for day 8 :0 Enter rainfall for day 9 :0 Enter rainfall for day 10 :0 Enter rainfall for day 11 :0 Enter rainfall for day 12 :0 Enter rainfall for day 13 :12 Enter rainfall for day 14 :11 Enter rainfall for day 15 :2 Enter rainfall for day 16 :0 Enter rainfall for day 17 :0 Enter rainfall for day 18 :0 Enter rainfall for day 19 :0 Enter rainfall for day 20 :22 Enter rainfall for day 21 :12 Enter rainfall for day 22 :3 Enter rainfall for day 23 :0 Enter rainfall for day 24 :0 Enter rainfall for day 25 :0 Enter rainfall for day 26 :0 Enter rainfall for day 27 :0 Enter rainfall for day 28 :0 Enter rainfall for day 29 :0 Enter rainfall for day 30 :0 Enter rainfall for day 31 :0 Display rainfall for month:January Rainfall for day 1 :1 Rainfall for day 2 :2 Rainfall for day 3 :0 Rainfall for day 4 :3 Rainfall for day 5 :2 Rainfall for day 6 :1 Rainfall for day 7 :0 Rainfall for day 8 :0 Rainfall for day 9 :0 Rainfall for day 10 :0 Rainfall for day 11 :0 Rainfall for day 12 :0 Rainfall for day 13 :12 Rainfall for day 14 :11 Rainfall for day 15 :2 Rainfall for day 16 :0 Rainfall for day 17 :0 Rainfall for day 18 :0 Rainfall for day 19 :0 Rainfall for day 20 :22 Rainfall for day 21 :12 Rainfall for day 22 :3 Rainfall for day 23 :0 Rainfall for day 24 :0 Rainfall for day 25 :0 Rainfall for day 26 :0 Rainfall for day 27 :0 Rainfall for day 28 :0 Rainfall for day 29 :0 Rainfall for day 30 :0 Rainfall for day 31 :0 Process returned 0 (0x0) execution time : 34.230 s Press any key to continue.","libVersion":"0.2.3","langs":""}