{"path":"UNISA/98906 - BSc Science in Computing/INF3707 - Database Design and Implementation/Unsorted/INF3707/Examsss/Exams/Exam_answers_combined.pdf","text":"OCT/NOV 2021 QUESTION 2 2.1 DESC MYCUSTOMERS 2.2 2.3 SELECT TABLE_NAME FROM USER_TABLES WHERE TABLE_NAME = 'MYCUSTOMERS' 2.4 ALTER TABLE MYCUSTOMERS ADD CONSTRAINT SA_CUSTOMER_PK PRIMARY KEY (COL#) 2.5 ALTER TABLE MYCUSTOMERS SET UNUSED(COL2); ALTER TABLE MYCUSTOMERS DROP UNUSED COLUMNS; 2.6 TRUNCATE TABLE MYCUSTOMERS 2.7 ALTER TABLE MYCUSTOMERS MODIFY (COL1 VARCHAR2(25) , COL2 VARCHAR2(25)) 2.8 ALTER TABLE MYCUSTOMERS ADD ( COL3 VARCHAR2(25), COL4 VARCHAR2(25) ) 2.9 QUESTION 3 3.1 CREATE VIEW BOOKS_ABOVE_AVERAGE_PRICE AS SELECT * FROM BOOKS WHERE RETAIL > (SELECT AVG(RETAIL) FROM BOOKS) 3.2 SELECT ISBN , TITLE , RETAIL FROM BOOKS ORDER BY RETAIL DESC FETCH FIRST 5 PERCENT ROWS ONLY QUESTION 4 4.1 4.2 SELECT TITLE , (RETAIL - COST) AS PROFIT FROM BOOKS WHERE (RETAIL - COST) > 10 ORDER BY (RETAIL - COST) 4.3 SELECT TITLE FROM BOOKS JOIN(PUBLISHER) USING(PUBID) WHERE PUBID = 1 OR PUBID =3 AND CATEGORY IN ('COMPUTER' , 'FAMILY LIFE') AND RETAIL >= 45 4.4 SELECT TITLE FROM CUSTOMERS JOIN(ORDERS) USING(CUSTOMER#) JOIN ORDERITEMS USING(ORDER#) JOIN(BOOKS) USING(ISBN) WHERE FIRSTNAME = 'JAKE' AND LASTNAME = 'LUCAS' 4.5 SELECT TITLE FROM BOOKS JOIN(BOOKAUTHOR) USING(ISBN) JOIN(AUTHOR) USING(AUTHORID) WHERE LNAME = 'ADAMS' 4.6 SELECT TO_CHAR (SYSDATE, 'MM-DD-YYYY HH24:MI:SS') FROM DUAL 4.7 JAN/FEB 2021 QUESTION 1 1.1 2 1.2 1.3 4 1.4 3 1.5 3 1.6 1 1.7 2 1.8 3 1.9 4 1.10 2 1.11 3 1.12 3 1.13 4 QUESTION 2 2.1 CREATE TABLE CATEGORY ( CATCODE VARCHAR2(3) PRIMARY KEY, CATDESC VARCHAR2(11) NOT NULL ) 2.2 SELECT OBJECT_NAME , CREATED FROM USER_OBJECTS WHERE OBJECT_NAME='CATEGORY'; DESC CATEGORY; 2.3 ALTER TABLE CATEGORY MODIFY CATDESC VARCHAR2(20) 2.4 INSERT ALL INTO CATEGORY (CATCODE,CATDESC) VALUES('BUS','BUSINESS') INTO CATEGORY (CATCODE,CATDESC) VALUES('CHN','CHILDREN') INTO CATEGORY (CATCODE,CATDESC) VALUES('COK','COOKING') INTO CATEGORY (CATCODE,CATDESC) VALUES('COM','COMPUTER') SELECT 1 FROM dual; 2.5 ALTER TABLE BOOKS ADD CATCODE VARCHAR2(3) CONSTRAINT BOOKS_CATCODE_FK REFERENCES CATEGORY(CATCODE) 2.6 2.7 2.8 ALTER TABLE BOOKS DROP COLUMN CATEGORY 2.9 CREATE USER Jabulani IDENTIFIED BY 1234 PASSWORD EXPIRE WITH GRANT OPTION GRANT SELECT,INSERT ON CATEGORY TO Jabulani QUESTION 3 3.1 SELECT TITLE , ISBN FROM BOOKS WHERE TITLE LIKE '_A_N%' ORDER BY TITLE DESC 3.2 SELECT CATEGORY , NAME, AVG(RETAIL) AS \"AVERAGE COST\" FROM BOOKS JOIN(PUBLISHER) USING(PUBID) WHERE CATEGORY IN ('CHILDREN', 'COMPUTER') GROUP BY NAME, CATEGORY HAVING AVG(RETAIL) > 50 3.3 SELECT TITLE , ORDERDATE ,(PAIDEACH - COST) AS \"BOOK PROFIT\" FROM BOOKS JOIN(ORDERITEMS) USING(ISBN) JOIN(ORDERS) USING(ORDER#) JOIN(CUSTOMERS) USING(CUSTOMER#) WHERE FIRSTNAME = 'JAKE' AND LASTNAME = 'LUCAS' ORDER BY ORDERDATE , \"BOOK PROFIT\" DESC 3.4 CREATE VIEW CONTACT AS SELECT CONTACT , PHONE FROM PUBLISHER 3.5 CREATE OR REPLACE VIEW CONTACT AS SELECT CONTACT , PHONE FROM PUBLISHER WITH READ ONLY OR DROP VIEW CONTACT; CREATE VIEW CONTACT AS SELECT CONTACT , PHONE FROM PUBLISHER WITH READ ONLY; 3.6 SELECT CUSTOMER# ,SUM((RETAIL - COST)*QUANTITY) AS \"TOTAL PROFIT\" FROM ORDERS JOIN(ORDERITEMS) USING(ORDER#) JOIN(BOOKS) USING(ISBN) WHERE CUSTOMER# = 1017 GROUP BY CUSTOMER# 3.7 SELECT A.TITLE , A.CATEGORY , A.COST , ROUND(B.AVG_COST,2) AS \"AVG COST\" FROM BOOKS A , (SELECT CATEGORY , AVG(COST)AS AVG_COST FROM BOOKS GROUP BY CATEGORY ) B WHERE A.CATEGORY = B.CATEGORY AND A.COST < B.AVG_COST OCT/NOV 2020 QUESTION 1 When you run the code, it gives an error. (i) What causes the error? (2 marks) (ii) Briefly explain how you can correct the error (3 marks) (I) - You cant use sysdate in a check constraint (ii) - remove sys and replace it with a date expiry_date DATE CHECK(expiry_date > '01-JAN- 2010'), 1.2 Create an SQL statement that inserts the following data into the MyCustomer01 table. The details ofthe customer are as follows: Customer# is 1000; First_name is Jan; Last_name is Zwane. 1.2 INSERT INTO MYCUSTOMER01 VALUES ( 1000, 'JAN', 'ZWANE' ) 1.3 Question 1.3 The Database Administrator wants to grant all users with query privileges on the MyCustomer01 table (see Question 1.2). Write an SQL statement that accomplishes this? GRANT previleges SELECT ON MyCustomer01 TO PUBLIC; 1.4 Question 1.4 Write an SQL statement that would display the value 2090.55 as $2,090.55? 1.4 SELECT TO_CHAR(2090.55 , '$99G999D99') FROM DUAL 1.5 Question 1.5 What does the following query do? Briefly explain. (2 marks) SELECT isbn, title FROM books WHERE (pubid, category) IN (SELECT pubid, category FROM books WHERE title LIKE %ORACLE%’); use a subquery to display books that contain the word oracle in ther titles 1.6 SELECT SUBSTR(PHONE , 9,4) FROM PUBLISHER WHERE NAME = 'PUBLISH OUR WAY' 1.7 Question 1.7 Based on the data extracted from the Books table presented in the table below, write a query thatdisplays 5 percent of the books with the highest retail price. SELECT ISBN , TITLE , RETAIL FROM BOOKS ORDER BY RETAIL FETCH FIRST 5 PERCENT ROWS ONLY 1.8 Add a constraint that ensures that the LASTNAME column of the MyCustomers02 table always requires the last name to be entered ALTER TABLE MYCUSTOMERS02 MODIFY LASTNAME NOT NULL 1.9 SELECT to_char(orderdate, 'rr'),sum(shipcost) FROM orders GROUP by to_char(orderdate,'YY'); When you execute this piece of code it gives an error. (i). What causes the error? (2 marks) (ii). Write the debugged code to correct the error. (I) The datatype on select statement is not the same as group by statement( ‘rr’ and ‘yy’). Datatype mismatch. (II) SELECT to_char(orderdate, 'YY')AS YEAR , sum(shipcost) AS TOTAL_SHIP_COST FROM ORDERS GROUP by to_char(orderdate,'YY'); 1.10 Question 1.10 Examine the data extracted from the CUSTOMERS table of the JustLee books database. CUSTOMER# LASTNAME REFERRED 1012 MCKENZIE 1013 NGUYEN 1006 1014 LEE 1015 SCHELL 1016 DAUM 1010 1017 NELSON 1018 MONTIASA 1019 SMITH 1003 Write a query to determine the total number of customers who were referred by other customers? SELECT COUNT(CUSTOMER#) FROM CUSTOMERS WHERE REFERRED IS NOT NULL QUESTION 2 Question 2.1 Table Name: MyCustomers03 2.1 CREATE TABLE MYCUSTOMERS03 ( MYCUSTOMER# NUMBER(4), MYLASTNAME VARCHAR2(10) NOT NULL, MYFIRSTNAME VARCHAR2(10) NOT NULL, MYADDRESS VARCHAR2(20), MYCITY VARCHAR2(2), MYZIP VARCHAR2(5) ) Question 2.2 The MyCustomers03 table does not have a primary key, make CUSTOMER# the primary key. 2.2 ALTER TABLE MYCUSTOMERS03 ADD CONSTRAINT MY_CUSTOMERS03_MYCUSTOMER#_PK PRIMARY KEY(MYCUSTOMER#) Question 2.3 Insert data into all the columns of the MyCustomers03 table based on the data that is contained in CUSTOMERS table given below. Note that the CUSTOMERS table contain 1200 entries and you cannot insert them one by one. 2.3 INSERT INTO MYCUSTOMERS03 SELECT CUSTOMER# , FIRSTNAME , LASTNAME , ADDRESS , CITY , ZIP FROM CUSTOMERS Question 2.4 The MyCustomers03 table does not have the columns for capturing the client’s e_mail address as well as the the Province. Add the two columns to the MyCustomers03 table. 2.4 ALTER TABLE MYCUSTOMERS03 ADD (EMAIL_ADDRESS VARCHAR2(25) , PROVINCE VARCHAR2(10)) Question 2.5 Create a bitmap index and name it my_customers_state_idx on the MyCustomers03 table to speed up queries for searching customers based on their province of residence. Verify that the index is created and then delete the index. 2.5 CREATE BITMAP INDEX MY_CUSTOMER_STATE_IDX ON MYCUSTOMERS03(PROVINCE) SELECT * FROM all_indexes WHERE TABLE_NAME = 'MYCUSTOMERS03' DROP INDEX MY_CUSTOMER_STATE_IDX Question 2.6 Create a view based on the MyCustomers03 table that lists the customer last name, first name and email. Do not include the CUSTOMER# in the view. Name the view Contact. View the contents of the view. 2.6 CREATE VIEW CONTACT AS SELECT MYLASTNAME , MYFIRSTNAME , EMAIL_ADDRESS FROM MYCUSTOMERS03 SELECT * FROM CONTACT QUESTION 3 Question 3.1 Create a query that use right outer join to list all cities that have more than one customer along with the customer details that include CUSTOMER#, LASTNAME, AND CITY. 3.1 Question 3.2 Use the single row functions SUBSTR and INSTR to produce a list of each customer’s number (Customer#) in the CUSTOMERS table, and the third and fourth digits of the customer’s zip code. The query should also display the position of the first occurrence of a 3 in the customer number if it exists. 3.2 SELECT CUSTOMER# , SUBSTR(ZIP, 3,2) , INSTR(CUSTOMER#,'3') FROM CUSTOMERS QUESTION 4 Question 4.1 Refer to the Books and Publisher tables of the JustLee Books database to determine the average retail price of the books by publisher name and category. Include only the categories Children and Computer, and the groups with an average retail price greater than $50 ANSWER 4.1 SELECT NAME , AVG(RETAIL) AS AVG_RETAIL FROM BOOKS JOIN(PUBLISHER) USING(PUBID) WHERE CATEGORY IN ('CHILDREN' , 'COMPUTER') AND RETAIL > 50 GROUP BY NAME Question 4.2 Refer to the Books and Bookauthor tables of the JustLee Books database to determine the retail price of the least expensive book written by Sam Smith? ANSWER 4.2 SELECT NAME ,CATEGORY, AVG(RETAIL) AS AVG_RETAIL FROM BOOKS JOIN(PUBLISHER) USING(PUBID) WHERE (CATEGORY IN ('CHILDREN' , 'COMPUTER')) GROUP BY NAME , CATEGORY HAVING AVG(RETAIL) > 50 ORDER BY NAME Question 4.3 Suppose the management of JustLee Books wants to compare the price of each book in the inventory against the average price of all books in the inventory. Use an inline subquery to show each book’s price for prices that are above the average price of all the books. ANSWER 4.3 SELECT TITLE , RETAIL FROM BOOKS WHERE RETAIL > (SELECT AVG(RETAIL) FROM BOOKS) MAY/JUNE 2019 QUESTION 1 1.1 1.2 C 1.3 C 1.4 D 1.5 B 1.6 1.7 1.8 1.9 B ,C,D 1.10 A , C 1.11 B ,D QUESTION 2 2.1 2.2 SELECT AVG(SUM(((PAIDEACH - COST)*QUANTITY))) AS AVERAGE_PROFIT FROM ORDERS JOIN ORDERITEMS USING(ORDER#) JOIN BOOKS USING(ISBN) GROUP BY ORDER# 2.3 TEST_IDENT COL1 HAS A PRIMARY KEY THAT INSERTS ITS OWN VALUES THAT ARE UNIQUE INSERT INTO TEST_IDENT (COL1)VALUES(350) - CANNOT INSERT A VALUE INTO COL1 THIS DOES NOT RUN INSERT INTO TEST_IDENT (COL1,COL2) VALUES(222,255)- COLUMN 1 IS STILL USED. YOU CANNOT INSERT INTO AN IDENTITY GENERATED COLUM INSERT INTO TEST_IDENT (COL1,COL2) VALUES(DEFAULT,255) - THIS WORKS FINE SINCE DEFAULT IS USED WITH AN IDENTITY GENERATED COLUM QUESTION 3 3.1 CREATE TABLE DEPARTMENT ( DEPT_ID NUMBER(2) PRIMARY KEY, DEPT_NAME VARCHAR2(10), FAX VARCHAR2(25) ) CREATE TABLE EQUIPTYPE ( EQUIPTYPE_ID NUMBER(2) PRIMARY KEY, EQUIPTYPE_NAME VARCHAR2(10) ) CREATE TABLE EQUIPMENT ( EQUIP_ID NUMBER(5) PRIMARY KEY, EQUIP_DESC VARCHAR2(25), PURCHASE_DATE DATE, RATING VARCHAR2(2), DEPT_ID NUMBER(2), EQUIPTYPE_ID NUMBER(2), CONSTRAINT EQUIP_DEPT_ID_FK FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID), CONSTRAINT EQUIP_TYPE_ID_FK FOREIGN KEY(EQUIPTYPE_ID) REFERENCES EQUIPTYPE(EQUIPTYPE_ID), CONSTRAINT EQUIP_RAITING_CK CHECK(RATING IN ('A','B','C')) ) 3.2 SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EQUIPMENT' 3.3 CREATE SEQUENCE EQUIP_DATA_ID_SEQ START WITH 10 INCREMENT BY 2 MAXVALUE 1000 NOCACHE 3.4 INSERT INTO EQUIPMENT VALUES ( EQUIP_DATA_ID_SEQ.NEXTVAL, 'FORK LIFT', TO_DATE('21-JUNE-2018','DD-MM-YYYY'), 'A', 6, 10 ) 3.5 ALTER TABLE EQUIPMENT DISABLE CONSTRAINT EQUIP_RAITING_CK 3.6 ALTER TABLE EQUIPMENT DROP PRIMARY KEY 3.7 CREATE SYNONYM EQUIP_DATA FOR EQUIP_DATA_ID_SEQ 3.8 OCT/NOV 2019 QUESTION 1 1.1 1.2 C 1.3 B 1.4 D 1.5 A 1.6 B 1.7 B 1.8 B 1.9 D 1.10 B QUESTION 2 2.1 SELECT NAME , CONTACT AS \"CONTACT PERSON\", PHONE FROM PUBLISHER 2.2 SELECT TITLE , ROUND((((RETAIL-COST)/RETAIL)*100),2) AS \"% PROFIT\" FROM BOOKS 2.3 SELECT TITLE , (RETAIL-COST) AS PROFIT FROM BOOKS WHERE (RETAIL-COST) >= 10 ORDER BY PROFIT DESC 2.4 SELECT C1.FIRSTNAME , C1.LASTNAME , C2.LASTNAME FROM CUSTOMERS C1 , CUSTOMERS C2 WHERE C1.REFERRED = C2.CUSTOMER# 2.5 SELECT ISBN , TITLE ,ORDER# FROM ORDERITEMS RIGHT JOIN BOOKS USING(ISBN) WHERE ORDER# IS NULL ORDER BY TITLE 2.6 SELECT TITLE , CATEGORY , RETAIL AS \"CURRENT RETAIL PRICE\" , ROUND(DECODE( CATEGORY, 'COMPUTER' , RETAIL*1.1, 'FITNESS' , RETAIL*1.15, 'SELF-HELP', RETAIL*1.25, RETAIL*1.03 ),2) AS \"REVISED RETAIL PRICE\" FROM BOOKS 2.7 SELECT COUNT(DISTINCT CUSTOMER#) FROM ORDERITEMS JOIN(ORDERS) USING(ORDER#) WHERE ISBN IN ( SELECT ISBN FROM BOOKAUTHOR JOIN(AUTHOR) USING(AUTHORID) WHERE FNAME = 'JAMES' AND LNAME = 'AUSTIN') 2.8 CREATE VIEW REODERINGINFO AS SELECT ISBN, TITLE, NAME, CONTACT FROM BOOKS JOIN(PUBLISHER) USING(PUBID) QUESTION 3 3.1 3.2 SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'BOOKAUTHOR' 3.3 ALTER TABLE BOOKAUTHOR ENABLE CONSTRAINT BOOKAUTHOR_AUTHORID_FK MAY_JUNE 2018 QUESTION 1 1.1 C 1.2 D 1.3 1.4 1.5 C 1.6 B 1.7 D 1.8 D 1.9 A 1.10 1.11 1.12 1.13 1.14 B QUESTION 2 2.4 SELECT TITLE , ORDER# ,CUSTOMER# ,STATE FROM CUSTOMERS JOIN ORDERS USING(CUSTOMER#) JOIN ORDERITEMS USING(ORDER#) RIGHT OUTER JOIN BOOKS USING(ISBN) ORDER BY ORDER# NULLS FIRST 2.5 SELECT AVG(SUM((PAIDEACH - COST)*QUANTITY)) AS AVG_PROFIT FROM BOOKS JOIN ORDERITEMS USING(ISBN) GROUP BY ORDER# ORDER BY ORDER# QUESTION 3 3.1 3.2 MAY/JUNE 2016 QUESTION 3 3.1 QUESTION 4 4.1 CREATE VIEW DEPT50 (EMPNO , EMPLOYEE , DEPTNO) AS SELECT EMPNO , EMPLOYEE , DEPTNO FROM EMPLOYEES WHERE DEPARTMENET = 50 WITH READ ONLY 4.2 CREATE SEQUENCE DEPT_SEQ START WITH 200 MAXVALUE 1000 INCREMENT BY 10 4.3 QUESTION 5 5.1 (I) REGEXP_REPLACE -will allow you to replace a sequence of characters in a string with another set of characters using regular expression pattern matching (II) REGEXP_INSTR-This function allows you to find a substring in a string using regular expression pattern matching. If no match is found, then the function returns 0. (III) REGEXP_SUBSTR-function is an advanced version of the SUBSTR() function that allows you to search for substrings based on a regular expression 5.2 SELECT ( CASE REGEXP_INSTR(FIRSTNAME ,'^(Ki|Ko)') WHEN 1 THEN FIRSTNAME END ) AS FIRSTNAME FROM EMPLOYEES QUESTION 6 6.1 CREATE TABLE EMP_JOBCARD ( EMP_ID NUMBER(4) , J_DATE DATE NOT NULL, JOB_CARD_NUM NUMBER(4) UNIQUE, J_HOURS_WORKKED NUMBER(4), COMMENTS VARCHAR2(200), CONSTRAINT EMP_JOBCARD_EMP_ID_J_DATE_PK PRIMARY KEY(EMP_ID,J_DATE), CONSTRAINT EMP_JOBCARD_EMP_ID_FK FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID) ) 6.2 ALTER TABLE EMP_JOBCARD DROP COLUMN COMMENTS DESC EMP_JOBCARD 6.3 GRANT SELECT , INSERT ON EMP_JOBCARD TO SCOTT WITH GRANT OPTION","libVersion":"0.2.3","langs":""}