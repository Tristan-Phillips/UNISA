{"path":"UNISA/98906 - BSc Science in Computing/COS3721 - Operating Systems and Architecture/Unsorted/Assignment_2.pdf","text":"COS3721/102/0/2022 Tutorial Letter 102/0/2022 Assignment #2 Operating Systems and Architecture COS3721 Year module Computer Science Department School of Computing CONTENTS Assignment 2 Questions 2 Assignment 2 [Total marks 70] Important note: Please note that the questions are based on the exercises in the prescribed textbook but, are not the same. So, if you do the exercises in the textbook, you will not have the same answers and your work will not be given any mark. Question 1- (based on 6.8, p.305; 6.12, p.308) [12] (Ex0 6.8, p.305): The following program example can be used to sum the array values of size N elements in parallel on a system containing N computing cores (there is a separate processor for each array element): For j=1 to log_2(N){ For k=1 to N { If ((k+1) % pow (2, j) == 0) { Values[k] + = values[k – pow(2, (j-1))] } } } This has the effect of summing the elements in the array as a series of partial sums as shown in (Figure 6.16, P. 307). After the code has executed, the sums of all elements in the array is stored in the last array location. Are there any race conditions in the above code example? If so, identify where they occur and illustrate with an example. If not, demonstrate why this algorithm is free from race conditions. (6) (Exo 6.12, p.308): Assume that a system has multiple processing cores. For each of the following scenarios, describe which is a better locking mechanism – a spinlock or a mutex lock where waiting processes sleep while waiting for the lock to become available: • The lock is to be held for a short duration. (2) • The lock is to be held for a long duration. (2) • A thread may be put to sleep while holding the lock. (2) Question 2- (based on: 7.8, p.338; 7.10, p.338; 8.18, p.373) [20] (7.8, p.338): The Linux kernel has a policy that a process cannot hold a spinlock while attempting to acquire a semaphore. Explain why this policy is in place. (3) (7.10, p.338): Explain the difference between software and hardware transactional memory. (3) (8.18, p.373): Consider the following snapshot of a system: Allocation Max A B C D A B C D T0 1 0 2 2 4 1 3 6 T1 0 1 1 2 2 4 2 4 T2 1 4 2 0 3 5 6 1 T3 1 2 0 1 2 6 2 3 T4 1 0 0 1 3 1 1 2 3 2.1 What is the content of the matrix Need? (2) 2.2 Using the banker’s algorithm, determine whether each of the following states is unsafe. If the state is unsafe, illustrate the order in which the threads may complete. Otherwise, illustrate the state is unsafe. a. Available = (2, 2, 3, 2) (4) b. Available = (1, 4, 1, 4) (4) c. Available = (3, 1, 0, 4) (4) Question 3- (based on: 9.16, p. 419; 9.18, pp.419-420; 10.17, p.479) [38] (9.16, p. 419): Assuming a 2-KB page size, what are the page numbers and offsets for the following address references (provided as decimal numbers)? a. 21205 (2) b. 164250 (2) c. 121357 (2) d. 16479315 (2) e. 27253187 (2) (9.18, pp.419-420): Consider a computer system with a 64-bit logical address and 16-KB page size. The system supports up to 1GB of physical memory. How many entries are there in each of the following? a. A conventional, single-level page table (4) b. An inverted page table (4) (10.17, p.479): The following is a page table for a system with 12-bit virtual and physical addresses and 256-byte pages. Free page frames are to be allocated in the order 9, F, D. A dash for a page frame indicates that the page is not in memory. Page Page Frame 0 0x4 1 0xB 2 0xA 3 - 4 - 5 0x2 6 - 7 0x0 8 0xC 9 0x1 Convert the following virtual addresses to their equivalent physical addresses in hexadecimal. All numbers are given in hexadecimal. In the case of page fault, you must use one of the free frames to update the page table and resolve the logical address to its corresponding physical address. • 0x2A2 (2) • 0x5E6 (2) • 0x92A (2) • 0x216 (2) 4 (10.9, p.476): Consider the following page reference string: 7, 2, 3, 2, 1, 5, 7, 4, 6, 7, 7, 1, 0, 5, 4, 6, 2, 3, 0, 1. Assuming demand paging with three frames, how many page faults would occur for the following replacement algorithms? • LRU replacement (4) • FIFO replacement (4) • Optimal replacement (4) © Unisa 2022","libVersion":"0.2.3","langs":""}