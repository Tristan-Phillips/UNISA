{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Telegram Notes/2022_10_01 - COS3751 - Memo_A02.pdf","text":"COS3751/102/1/2022 Define Tomorrow. university of south africa CONTENTS Assignments 01 and 02, BAR CODE Tutorial Letter 102/1/2022 Techniques of Artificial Intelligence COS3751 Year Module Computer Science School of Computing 2 ASSIGNMENT 1 Due Date: Total Marks: 150 Unique Assignment Number: Study material: Chapters 1 - 4. Important: When we use the phrase ‘define’. we are looking for a formal definition using some form of formal notation, and not simply an English description or definition. For example: ‘Define the initial state for an agent would implies that you explain the action in available for the agent Each Question Carries equal Marks Question 1: 30 Marks (1.1) List the 5 components that can be used to define a problem. (1.2) Differentiate between search space and goal space. (1.3) What is the purpose of the explored set ? (1.4) List and discuss three types of queues that may be employed in a search. (1.5) List and explain the measures used to determine problem solving performance. The aims of these assignments are for you to have an honest attempt at solving sample problems. It is therefore a matter of personal learning, and growth. Please endeavor to study them and put in your best efforts when attempting the questions. Good luck always! COS3751/102/1/2022 3 Question 2: 30 Marks (2.1) Highlight the differences between a tree and graph search. (2.2) How does a Breadth First Search (BFS) differ from the general tree search algorithm? What is the major reason for implementing the algorithm in this way? Provide an example to aid your discussion. (2.3) Consider an example of a sliding-block puzzle game state provided below (Figure 1). How many distinct states are there for puzzles of this sort? How many search nodes? Explain how you reached your answer. I N L D E C K B H J O A F G M Figure 1: Sliding-block puzzle Question 3: 30 Marks (1.1) Explain the difference between a single and multi-agent environment. (1.2) Explain the difference between a Deterministic and Stochastic environment. (1.3) Consider a game of chess. Is this a fully observable, partially observable, or unobservable environment? Clearly explain your answer. 4 Question 4: 30 Marks Three (3) hikers (M oses, Elizabeth, and Wang) have just descended down a valley to find themselves confronted by a river they cannot get across. After walking downstream for a while, they find two young boys with a boat and ask them if they would help them get across the river. The boys agree, but inform the hikers that since their boat is so small, it can only hold only the two boys or one of the hikers at a time. We can assume that everyone knows how to row the boat. (3.1) Define a state using a mathematical notation (pictures or any form of graphical notation will not be accepted). Discuss the appropriateness of your choice, and provide an example to show that it will be suitable to be employed during a search. (3.2) Define the start and goal states using your representation. (3.3) Define an appropriate cost function or functions for this problem. (3.4) Provide a formal definition of a valid action function for this problem – you need not provide a formal definition for the operation of the function. Discuss the operation of the function and provide an example to illustrate its use. COS3751/102/1/20 22 5 O M E D C L B K I J H F G N A Question 5: 30 Marks Consider the search tree in Figure 2. Figure 2: Search Tree (Iterative Deepening Search (IDS)) (5.1) Show the order in which the nodes will be expanded (from limit 0 to limit 4) given that IDS is used. Assume the goal node is F, and that nodes are expanded from left to right. (5.2) Differentiate between an admissible and a consistent heuristic. 6 Study material: Chapters 5 (Adversarial Search) and 7 (Constraint Satisfaction Problems). Question 1: 30 Marks (1.1) Define the concept of a zero-sum game as we study it in AI. Answer: A situation in which one person gain is equivalent to another loss so that the net change in wealth or benefit is Zero in game theory (1.2) Clearly explain what a utility function is, and why it is used during adversarial searches. Answer: : A utility function provides an indication of the apparent numerical valueXof a state (either terminal or non-terminal)Xs for player p. It is used to find the best available move for a player (1.3) Define the utility function for a game of tic-tac-toe. Provide the algorithm for this utility function and provide an example of the result of applying your function to a terminal state in the game tree. (1.4) Explain how forward pruning works. Provide at least one approach to forward pruning in your explanation, as well as a problem that may be encountered with forward pruning. Answer: Forward pruning means that some nodes are pruned without even considering themX. Beam search [others are also considered] only considers a sample of the best moves at each plyX, but this may lead to the best move being pruned awayX. (1.5) Does the order in which nodes are examined in minimax matter? Explain your answer. Answer: Only if we pruneX. Otherwise minimax is an exhaustive searchX(for the parameters such as depth – plys – it is configured forX) and node orders do not matter. Question 2: 30 Marks (2.1) Consider Figure 3 and answer the questions that follow. (The utility value of the leaf nodes are provided in brackets in the leaf node.) (a) Provide the minimax values for all the nodes. (b) W h i c h m o v e s h o u l d M A X m a k e ? E x p l a i n y o u r a n s w e r . (c) W r i t e d o w n t h e α / β v a l u e s f o r a l l t h e n o ASSIGNMENT 2 Due Date: Total Marks: 150 Unique Assignment Number: COS3751/102/1/20 22 7 des (except the leaf nodes) if alpha/beta pruning is applied to the tree. (d) Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). (e) Suppose the tree in Figure 6 was traversed from right to left (instead of from left to right) would the same cuts have been made? Clearly explain your answer. You may use values from the tree to support your argument. (2.2) Explain what the horizon effect is. Provide an example that clearly explains this phe- nomenon. Use diagrams to assist your discussion. Answer 2 A: A = -7X, B = -7X, C = -8X, D = -7X, E = 0X, F = 5X, G = -8X, H = -3X, I = 3X Answer: 2B : The utility value for MAX for move B is higher than that of move C. Answer : C Provided below is < node >= (α, β): A = (-7, ∞)X2 , B = (−∞,-7)X2 , C = (- 7,∞)X2 , D = (-7, ∞)X2 , E = (−∞,-7)X2 , F = (-∞,-7)X2 , G = (-7, ∞)X2 . Answer 2 D : α-cutXbelow C (H and I is not expanded)X2 . β-cutXbelow F (M is not expanded)X2 Also note: if there were an additional node below E, there would have been a β-cut. This would have happened because after v = MAX(v, 0) = 0 (v = −∞), we have that v ≥ β (β = −7), which is the requirement for a β-cut. 8 -3 4 0 9 -4 -9 1 7 0 Figure 3 : Minimax, alpha/beta Question 3: 30 Marks Consider the following English sentences: 1. Anyone who passes their history exam, and wins the lottery is happy. 2. Anyone who studies, or who is lucky will pass their exam. 3. John did not study. 4. John is lucky. 5. Anybody who is lucky will win the lottery. (3.1) Provide a First-order Logic (FOL) vocabulary for the sentences. Answer: (5.1) Provide a First-order Logic (FOL) vocabulary for the sentences. 1. Lucky(p). A predicate (property). Person p is lucky. 2. Pass(p, s). A predicate. Person p, passes subject s. 3. Win(p, e). A predicate. Person p wins event e. 4. Study(p). A predicate. Person p studies. 5. Happy(p). A predicate. Person p is happy. A B C D E F G H I J K L M N O P Q R COS3751/102/1/20 22 9 6. John. A constant depicting people. 7. History. A constant depicting subjects. 8. Lottery. A constant depicting events. (3.2) Using your vocabulary, translate the sentences in FOL. Answer: 1. (∀x)[(Pass(x, History) ∧ Win(x, Lottery)) ⇒ Happy(x)] 2. (∀y)(∀z)[(Study(y) ∨ Lucky(y)) ⇒ Pass(y, z)] 3. ¬Study(john) 4. Lucky(john) 5. (∀w)[Lucky(w) ⇒ Win(w, Lottery)] It is important to standardise the variables (to use different variable names) to avoid confusion when dropping the universal quantifiers. (3.3) Convert the statements obtained in (5.2) into clausal form. Variables must be standard- ised. Answer: The statements are converted as follows to clause form: 1. ¬pass(x, history) ∨ ¬win(x, lottery) ∨ happy(x) 2. ¬study(y) ∨ pass(y, z) 3. ¬lucky(y) ∨ pass(y, z) 4. ¬study(john) 5. lucky(john) 6. ¬lucky(w) ∨ win(w, lottery) Note that universal quantifiers have been dropped because all variables were universally quantified. 10 − (3.4) Use resolution refutation to prove that John is happy. Answer: 7 ¬happy(john) negation of goal 8 ¬win(x, lottery) ∨ happy(x) ∨ ¬lucky(x), 1&3, {x/y}, {history/z} 9 ¬win(john, lottery) ∨ happy(john), 5&8, {john/x} 10 ¬win(john, lottery), 9&7 11 win(john, lottery), 5&6, {john/w} 12 ∅, 10&11 Question 4: 30 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) Define the Least Constraining Value (LCV) heuristic. Answer: The heuristic prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). (4.2) Explain why establishing strong k-consistency is a problem. Answer: This means we must show that the graph is k-consistent, k1-consistent and so on. This can only be done in exponential time which makes large problems intractable. (4.3) Define the degree heuristic. Answer: This heuristic attempts to reduce the branching factor on future choices. COS3751/102/1/20 22 11 (4.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to find a solution by simply backtracking? Explain your answer. Answer: No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (4.5) Explain what forward checking for a CSP is. Answer: It is a domain reduction technique which establishes arc consistency[2]. (Or: it removes values from the domain of the neighbours of the variable for which the forward checking is being done[0][0] – also acceptable answer.) 12 Question 5: 30 Marks Consider the crossword puzzle provided in Figure 2. 1 2 3 4 5 6 7 Figure 4: Crossword Puzzle It is possible to represent the problem of generating puzzles as a CSP. Suppose you are given the puzzle grid as above, as well as a dictionary W of words to use for generating the puzzle. The variables for this problem is easily represented as the collection of vertical or horizontal cells. Such a collection is called a box. A horizontal box is identified as Ai with i being the number of the box, and a vertical box is Dj with j being the number of the box. Boxes consisting of only one cell is not allowed. Suppose you are given the following functions: 1. BLen(v): returns the number of cells that a box contains, for example BLen(A1) = 4 2. WLen(w): returns the length of a word w, for example WLen(thit) = 2 3. Cell(v, n): returns the letter in cell n of variable v. For example, if A1 = ‘Ahoy’, then Cell (A1, 2) = ‘h’. COS3751/102/1/20 22 15 { Answer the following questions. (5.1) Provide the variables for this problem. Make sure to use the correct notation Answer: X = {A1, A3, A6, A7, D1, D2, D4, D5} (5.2) Define the domain for the variables, make sure to use the correct notation, and to use all the information provided. (Hint: Remember that the number of cells in a box and the number of letters in a word must match.) Answer: { | ∈ ∧ } Dx∈X = w w W W Len(w) = BLen(x) (must include a reference to the dictionary). (5.3) Define the constraints for this problem. Answer: 1. Cell(A1, 1) = Cell(D1, 1) 2. Cell(A1, 3) = Cell(D2, 1) 3. Cell(A3, 2) = Cell(D4, 1) 4. Cell(A3, 3) = Cell(D2, 3) 5. Cell(A3, 4) = Cell(D5, 1) 6. Cell(A6, 2) = Cell(D4, 3) 7. Cell(A6, 4) = Cell(D5, 3) 8. Cell(A7, 2) = Cell(D4, 5) 9. Cell(A7, 4) = Cell(D5, 5) 10. Alldiff(A1, A3, A6, A7, D1, D2, D4, D5) (5.4) You are given the following list of words as your dictionary. W = GAB, WIN, VAN, VET, GET, GIVE, GRAB, GROW, DRUM, BEND, BARE, DRAB, DRAG, EYES, FEEL, FOOL, EELS, ERRS, TARDY, BARES, EARLY, DUMPS, FEELS, DRUMS} Use the Minimum Remaining Values (MRV) heuristic to generate the crossword, apply arc- consistency when you’ve made an assignment to a variable. 16 Answer: The Solution is: G I V E A A B E N D A U D R U M L P E Y E S This answer is marked based on your attempt. However, note the following: 1. Domain reduction must be applied after each assignment. 2. Only variables with the smallest domain must be considered for assignment. This means that once assignment has taken place, and domain reduction has been ap- plied, then only variables with the smallest domains can be considered. 3. Domain reduction is based on the constraints. Thus each time assignment takes place, the domain of the remaining variables are reduced based on the words in the dictionary that meet the constraints. 4. Providing only the solution will earn you only 1 mark.","libVersion":"0.2.3","langs":""}