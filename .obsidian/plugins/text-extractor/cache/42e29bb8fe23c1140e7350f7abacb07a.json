{"path":"UNISA/98906 - BSc Science in Computing/COS3711 - Advanced Programming/Unsorted/SORT/Prev Sem/COS3711/drive-download-20200416T190041Z-001/Exam Papers/Memo/2013_Oct_E.pdf","text":"2 Question 1 COS3711 October/November 2013 [13 marks] 1.1 A program (search. exe) has been written to search for files in a set directory, and send its output to the standard output. Wnte code that will run this program as a separate process, and send the output to a slot named display(). You do not need to include any pre-processor directives in your answer (5) 1.2 The following code snippets ut1hse threading 1n a program. timer.h 01 class Timer: public QThread 02 { 03 Q OBJECT 04 public: 05 Timer(); 06 void run(}; 07 08 } ; main.cpp 09 int main(int argc, char *argv[]) 10 { 11 12 13 14 15 } Timer timer; Timer.start(); // start the timer It has been argued that 1t is not necessary to subclass QThread when implementing threading. Rewrite the code above to use an approach that does not subclass QThread, mcludmg code to start the timer You need only write down the hne number and the corrected code in your answer, and indicate at which hne number new code that you add will be inserted. You do not need to include any pre-processor d1rect1ves m your answer. (8) Question 2 (25 marks] 2.1 Consider the following UML diagram. RffoutCâ€¢ Client 6 j l, i l Book Music Movie [TURN OVER} 3 COS3711 October/November 2013 The Client class should be able to use instances of the concrete classes of Resource {both current and any newly added ones) without being burdened with the responsibility of creating them. It also wants to use instances of the Resource concrete classes interchangeably without knowing which concrete class 1s required for its purpose. 2.1.1 Extend this UML diagram to depict a design pattern that could be used to create Resources 1n this scenario. Ensure that you include the important functions and their return types to show how this pattern can be implemented (7) 2.1.2 How can Client use any instance of the concrete classes of Resource without being aware or coupled to the concrete classes? (2) 2.1.3 Write code for the function 1n the design pattern m your answer to 2.1.1 (following the names in your UML diagram) that handles the creation of Resources. (5) 2.2 Consider the following class that maintains a 11st of Resource obJects class ResourceList { public: ResourceList(}; - ResourceList{); void addResource(Resource* r); private: QList<Resource*> list; } ; 2.2.1 Rewrite this class def1rnt1on following a Singleton design pattern. (6) (1) 2.2.2 Descnbe a scenario in which a Singleton design pattern would be used 2.2.3 Wnte code for the . cpp 1mplementat1on file for your class header m 2.2.1 You do not have to include 1mplementat1ons of the constructor, destructor, or the addResource () function. Note that you do not have to include any pre-processor directives in your code. (4) Question 3 [12 marks] 3.1 Given the class definition, UML diagram, and sample XML file below, write the code for the addRecord () function that will append the state of a Record object to the XML document being maintained by the Serializer class (so that it follows the XML example given below). (7) class Serializer { public: Serializer {) ; void addRecord(Record r); private : QDomDocument doc; Record -name: QStrlng : Int +getName(): QStrlng +getAgeQ: Int QDomElement root; // t he <RecordLi st > el ement } [TURN OVER] 4 <RecordList> <record name=\"Bjorn\" age=\"72\" /> <record name=\"Ingimar\" age::c\"49\" /> </RecordList > COS3711 October/November 2013 3.2 Using the class definition below to guide you, describe (using code examples where appropriate) how you would set up the server to listen for connections usmg TCP, and how you would handle an incoming connection. (5) class Server { Q_OBJECT public: Server(QWidget *parent= O); private slots: void incomingConnection(); void readMessage(); private: } ; QTcpServer* tcpServer; QTcpSocket* client; QHostAddress ipAddress; quintl6 port; Question 4 Refer to the code below to answer the questions that follow. exam.h #ifndef EXAM H #define EXAM H #include <QString> #include <QinputDialog> #include <QMessageBox> class Exam { public: Exam{) { createExam(); } private: QString code, int duration, int marks; [28 marks] [TURN OVER] } 5 COS3711 October/November 2013 void createExam() { QStr1ng c = QinputDialog::getText(0, 11 Exam Information\",\"Exam code:\"); code= c; int d = QinputD1alog::getlnt(0, 11 Exam Informat1on\", \"Exam duration (hours):\", O, 1, 5); duration= d; int m = QinputDialog::getint(O,\"Exam Information\", \"Exam marks:\",0,50,200); marks= m; QString response= QString( 11 Exam information: \\nModule code: %1 \\nDuration: %2 hours \\nMarks: %3\") .arg(c) .arg(d) .arg(m); QMessageBox::information(O, \"Exam information\",response); } ; #endif main.cpp #include <QApplication> #include \"exam h\" int main(int argc, char *argv[]) { } QApplication a(argc, argv); Exam e; return a.exec(); 4.1 Explain the design problem with Exam (1) 4.2 State the design principle that can be used to solve the design problem in Exam. (1) 4.3 Redesign Exam using the design principle answered in 4.2. Present your design using a comprehensive UML diagram (indicating class relationships, data members and member functions). (4) 4.4 State the change required in Exam (either use the code given above or use the code that follows the redesign in 4.3.) to be able to add properties dynamically (at run time) to Exam obJects. Explain your answer. (2) 4.5 Wnte a Qt statement in main.cpp above to add a property \"Object\" dynamically to the Exam object e with value \"e\". (1) 4.6 State two necessary functions and their respective classes required to access the hst of dynamic properties and its respective values of an object (3) 4.7 Rewrite the Exam class (either use the code given above or use the code that follows the redesign in 4.3.) to support reflective programming so that you can access any Exam object properties via its generated QMetaobject. You need not include pre- processor d1rect1ves. (9) [TURN OVER) 6 COS3711 October/November 2013 4.8 Complete the function below so that you can access the class name and number of properties using the generated QMetaobj ect of Exam You need not include pre- processor d1rect1ves. (3) void outputProperties(Exam* e){ //include lines of code here } 4.9 When does it make sense to utilise dynamic properties rather than to use the QMetaObj ect interface? (2) 4.1 O Explain the difference between the uniqueness of the property hst accessed via the QMetaObj ect interface and dynamic properties. (2) Question 5 5.1 Refer to the code below to answer the questions that follow: #include <QtGui> int ma1n(1nt argc, char *argv[]) { } QApplication a(argc, argv}; QFileSystemModel model; //include code here return a.exec(}; 5.1.1 Complete the code above so that [16 marks] - the local file system can be browsed m a tree view format with a specified root path - the name of the files and/or directories must be able to be renamed by double chckmg on the respective file or directory in the view (5) 5 1.2 What does the function current Index () on a tree view return for a QFileSystemModel? (2) 5.1.3 State one reason why invoking isValid () on current Index () in a tree view for a QFileSystemModel would return false. (2) 5.2 The questions given below are based on DataObj ectTableModel, one of the classes in the Ezust library dataobj ects. 5.2.1. What 1s the preferred way to reuse this class 1n a proJect once dataobjects. dll has been created? (2) 5.2.2 State three requirements of a class for its instances to be added and work correctly in an instance of DataObj ectTableModel? (3) 5.2.3 Explain the memory management fac1hty used in this class. (2) [TURN OVER] 7 Question 6 COS3711 October/November 2013 [6 marks] 6.1 Describe a scenario that motivates the need for a user defined subclass of QValidator. (2) 6.2 Explain the meaning of the following regular expression meta-characters. 6.2.1 \\D 6.2.2 ? (2) 6 3 Wnte a regular expression that allows a string to contain 7 to 8 d1g1ts where the first d1g1t 1s not 0. (2) 0 UN1SA2013","libVersion":"0.2.3","langs":""}