{"path":"UNISA/98906 - BSc Science in Computing/COS3761 - Formal Logic III/Unsorted/COS3761/exam pack/Materials/Additional+notes+on+Chapter+5.pdf","text":"ADDITIONAL NOTES FOR COS3761 – PART D ADDITIONAL NOTES ON CHAPTER 5 INTRODUCTION Modal logic concerns itself with the different modes in which statements can be true or false. Chapter 5 of the prescribed book only covers some of the basic concepts in modal logic, and introduces a few of the many modal logics. It also deals only with propositional modal logics. We encourage you to read further on the many applications of modal logics, both philosophical and computational. A good place to start is the Stanford Encyclopedia of Philosophy, which you can access at http://plato.stanford.edu/contents.html. 5.1 Modes of truth In classical (i.e. propositional or predicate) logic, formulas are either true or false. In real life, however, truth is qualified. We may identify facts that are “necessarily true”, “known to be true”, “believed to be true” or “assumed to be true”. Furthermore, when we reason about computation, it is often convenient to distinguish between truths at different points in time. These are the issues that are addressed by modal logic. In addition, modal logic can also be applied in artificial intelligence for modeling scenarios with several interacting agents. 5.2 Basic modal logic 5.2.1 Syntax Basic modal logic is obtained by extending propositional logic by two new unary connectives, ⊨ and ◊ (read \"box\" and \"diamond,\" respectively). These are also called modal operators. 5.2.2 Semantics The notion of a model is central to the study of the semantics of any logic. In propositional logic, a model is simply an assignment of truth values to atomic formulas. In predicate logic, this definition of a model is extended as in Definition 2.14 where we have a universe of values, and an interpretation for each function symbol and predicate symbol in the language. In particular, an n-ary predicate symbol is mapped to a set of n-tuples in the domain of interpretation. In modal logic, the notion of a model is similarly extended. We now have a set W, whose elements we call worlds. We also have a binary relation R, called the accessibility relation, and a labeling function L which maps worlds to sets of atoms in the language. Comparing Definition 2.14 to Definition 5.3, we note that there are some similarities. In both cases we have a set of values. In predicate logic, its elements are values in the relevant universe. In modal logic, its elements are called worlds. In predicate logic, an n-ary predicate is interpreted as a set of n-tuples from the domain, that is, as an n-ary relation over the domain. In a modal model, we have only one binary relation, called the accessibility relation R. This accessibility relation is explicit in a modal model, but not in the modal language. Instead, we have a unary modal connective in the modal language. The link between R and the unary modal connective ⊨ is given in Definition 5.4. The labeling function L of modal logic maps worlds to sets of atoms. For each world, L specifies the set of atoms which is true in that world. Put differently, we could express this as a function which gives, for each atom, the set of worlds at which it is true. It is therefore similar to the interpretation of unary predicates in predicate logic, where each unary predicate symbol is mapped to a set of values, namely those values in the domain that have a certain property. The above correspondences in the semantics of modal logic, and that of predicate logic, indicates that modal logic can be viewed as a restricted fragment of predicate logic, in which we have only unary predicates and a single binary predicate R. Furthermore, the sentences we may write are restricted by Definition 5.4. In particular, the ways in which we may use R are very restrictive. Normally we don’t bother with all of this, and rather stick to the syntactic form of modal logic, using the unary modal connectives. This way, we can view modal logic as a propositional logic, to which we have added some modal connectives. The additional complexity of modal logic is, in a way, hidden in the semantics of the logic. The most common and intuitive way to specify such a model is by means of a Kripke diagram. Consider the following example: a b c d This model consists of four worlds, namely a, b, c and d. No atoms are true in world a, atom p is true in world b, q is true in c, and p and q are true in world d. The accessibility relation is represented by arrows between worlds. In this example, world a is not accessible from any other world. World b is accessible from world a, world c is only accessible from itself, and d is accessible from a, b and c. As in propositional and predicate logic, we can ask whether a given formula (in this case a modal formula) is true in a model. A modal formula is true in a model if it is true in all its worlds. In the above example, p is true in worlds b and d, but not in a and c. So the formula p is not true in this model. The same goes for the formula q. But what about ⊨ p? It is true in world a because p is true in all worlds accessible from a. (So to check whether a modal formula ⊨ φ is true in a world x, we check whether φ is true in all worlds accessible from x.) ⊨ p is also true in b because p is true in all worlds accessible from b. Unfortunately ⊨ p is not true in c, because although p is true in d, it is not true in c, which is a world accessible from c. ⊨ p is said to be vacuously true in world d, since p is true in \"all\" worlds accessible from d. (So if no worlds are accessible from a world x, then any formula of the form ⊨ φ is true in x.) Since ⊨ p is not true in all worlds, it is not true in this model. See if you can work out whether ⊨ q is true in the above model. In the same way, to determine whether a formula ◊φ is true in a model, we must check that it is true in all worlds of the model. ◊φ is true in a world x if φ is true in at least one world accessible from x. So to test whether ◊p is true in the example model above, we need to check whether it is true in the worlds. ◊p is true in a because there is at least one world accessible from a, namely b, in which p is true. ◊p is true in b because there is at least one world accessible from b, namely d, in which p is true. ◊p is true in c because there is at least one world accessible from c, namely d, in which p is true. But ◊p is not true in d because there is no world accessible from d in which p is true. (So if no worlds are accessible from a world x, then any formula of the form ◊φ is false in x.) Check yourself whether ◊q is true in the above model. ,p q p,q Given a modal formula φ and a world x, we write x ╟ φ to say that φ is true in x. 5.3 Logic engineering The main issue regarding logic engineering is that, given a particular mode of truth, how may we develop a logic capable of expressing and formalizing that mode? This question is considered in the setting of some well-known versions of modal logic. Validity There are a few related notions of validity in modal logic. • The first of these are that of truth in all worlds in all models: A modal formula is valid if it is true in all worlds in all models. One way to prove that a given modal formula is valid is to take an arbitrary world in an arbitrary model (about which you make no assumptions except that it has at least one world), and then show that the given formula is true in that world. The most important valid modal formula schemes are the ones given in (5.3) on page 314, together with the modal formula scheme K on page 315. Remember that all the propositional tautologies are also valid modal formulas. This holds even if the subformulas contain modal connectives. For example, the formula ⊨ φ ∨ ¬⊨ φ is a valid modal formula because it is an instance of the law of the excluded middle, which is a propositional tautology. To show that a modal formula is not valid, it suffices to construct a single model which has a world in which the given formula is false. • The second notion of validity is that of validity in a given frame. A modal formula can be valid in one frame without being valid in all frames. A frame consists of a set of worlds and a fixed accessibility relation on the worlds. A formula is valid in the frame if it is true in all the worlds in the frame for all labeling functions. Definition 5.11 on page 322 formalizes what it means for a formula to be valid in a frame. The prescribed book refers to this as that the frame satisfies the formula. However, remember that this is a form of validity, not satisfiability. For a formula to be valid in a frame, (i.e. in the terminology of the prescribed book, for the frame to satisfy the formula), the formula has to be true in all worlds in the frame for every labeling function. Remember the difference between a frame and a model: A frame does not have a labeling function. Figures 5.9 and 5.10 are examples of frames. They show the worlds, and the accessibility relation on worlds, but they don’t show which atoms are true in which worlds. Figures 5.3 and 5.5, on the other hand, are examples of modal models. • A third notion of validity in modal logic is that of validity in a given class of frames. In this case, the set of worlds and accessibility relation on the worlds are not fixed, but some properties of the accessibility relation are fixed. For example, we may fix the criterion that the accessibility relation must be reflexive. We can then consider which formulas are valid in the class of all reflexive frames, that is, which formulas are valid in all frames with a reflexive accessibility relation. This is essentially what correspondence theory is about. Table 5.12 on page 325 gives a number of important correspondences between properties of the accessibility relation on the one hand, and valid formula schemes on the other. Each of the given formula schemes is valid in the class of frames with the given corresponding property of its accessibility relation. Conversely, for each of the formula schemes on the left, if all instances of the formula scheme are valid in a given frame, then the accessibility relation of the frame will have the corresponding property. This correspondence is captured in Theorem 5.13 for reflexive frames, and for transitive frames. The other correspondences are proved similarly. Constructing new modal logics The basic modal logic is called K. From this, we can construct new modal logics. We do this by making the class of frames under consideration smaller, for example, by only considering frames in which the accessibility relation is an equivalence relation. (Another way to construct a new modal logic is to add more modal connectives. You will see an example of this in Section 5.5, so we won’t discuss that further at this point.) Why would one want to construct new modal logics? The choice of which modal formulas should be valid, depends on what you want the modal operators to mean. As we have seen above, there is a correspondence between the validity of formula schemes on the one hand, and properties of the accessibility relation on the other. So, the meaning and properties of the accessibility relation will influence which formulas in the logic should be valid. For each different set of valid formulas, one needs a new logic. A new modal logic can easily be constructed from the basic modal logic K. Simply add enough of the modal formulas that you want to be valid, as axioms. It is not necessary to add all the formulas that you want to be valid as axioms. It is sufficient to add a few well-chosen axiom schemes. This is what Definition 5.15 is about. The set L will contain a few axiom schemes, typically chosen from the list in Table 5.12. The valid formulas in the new logic will be all the instances of elements of L, together with everything entailed by them. We call the new logic by the same name as the new axiom schemes. So, a formula φ is valid in the logic L, written ⊨L φ, iff φ is semantically entailed by the set of instances of L in modal logic K, written Lc ⊨K φ. Definition 5.15 makes this definition a bit more general, defining entailment in the logic L from a set of premises Γ. We then have that φ is entailed by Γ in the logic L, written Γ ⊨L φ, iff φ is semantically entailed by Lc ∪ Γ in modal logic K. Intuitionistic logic In classical logic, the meaning of a compound sentence is determined by the meaning of each of its parts, and the meaning of the construction by which the parts are combined. The meaning is expressed by truth conditions. In classical propositional logic, a valuation tells us which atoms are true and which are false. Because we also know the truth conditions of the connectives, we can determine the meaning of any compound formula. We say that classical logic is truth functional, or compositional. In intuitionistic logic, things work a bit differently. The basic idea here is that the meaning of a sentence is given by proof conditions: A proof of φ ∧ 𝜓 consists of a proof of φ together with a proof of 𝜓. A proof of φ ∨ 𝜓 consists of either a proof of φ or a proof of 𝜓. A proof of ¬φ consists of a proof that there is no proof of φ. A proof of φ → 𝜓 is a construction whereby, given any proof of φ, one obtains a proof of 𝜓. Intuitionistic logic can be given a possible-worlds semantics. This is done in Definition 5.19. Think of worlds as states of information. In any world, some things are known. These are the things that have been proved. An accessible world is some state conceivable from the present state, in which some additional things have been proved. This is why the accessibility relation has to be monotone. Once we have proved something, we can only increase our knowledge through additional proofs. Nothing can be retracted from what we have already proved. Returning to the proof conditions given above, we see that: If we have a proof of both φ and 𝜓 in some state, we have a proof of their conjunction. If in some state we either have a proof of φ or we have a proof of 𝜓, then we have a proof of their disjunction. If we don’t have a proof of φ in the present state, and we also don’t have a proof of φ in any state that can be reached from the present state, then we have a proof that a proof of φ is not possible. This means we have a proof of its negation. If, in any state that can be reached from the present state, we have a proof of 𝜓 whenever we have a proof of φ, then we have the construction required as a proof of φ → 𝜓 in the present state. 5.4 Natural deduction In modal natural deduction proofs, we have solid boxes as we had with classical natural deduction proofs. But we now also have dashed boxes. Entering a dashed box represents moving from the current world to an arbitrary accessible world. Leaving a dashed box represents returning from the world represented by the dashed box to the world from which it was reached. Suppose we have proved φ in a dashed box. This means φ holds in the world represented by the dashed box. Since φ holds in an arbitrary world accessible from the current world, ⊨ φ holds in the current world, which is represented by the surrounding box. Similarly, suppose we have proved ⊨ φ. This means that φ holds in an arbitrary accessible world. We may therefore use φ in a nested dashed box. A modal natural deduction proof starts in an arbitrary world. We may therefore view the entire proof as taking place in an outer dashed box. Since this represents an arbitrary world, anything proved in this outer dashed box holds in all worlds. The rules we have to add for each of the axiom schemes T, 4 and 5, resemble the respective axiom schemes closely. If we want to construct a natural deduction proof for the modal logic KT, we may use the ⊨ introduction rule, the ⊨ elimination rule and the T rule, in addition to all the natural deduction rules of propositional logic. Similarly, in a natural deduction proof for the modal logic KT45, we may use all of the above rules, plus the rules 4 and 5. Any proof for K, KT or KT4 will also be a proof for KT45, but not conversely. Example 5.21 (1) gives a proof for the modal logic K. This would also constitute a proof in the logics KT, KT4 or KT45. (2) and (3) are proofs for KT45. Since both the T and 5 axioms are used in each of these proofs, they are not proofs for K, KT or KT4. 5.5 Reasoning about knowledge in a multi-agent system Multi-modal logics generalize modal logics such as K, KT45, etc. in a natural way. Instead of having only one modal connective, and one corresponding accessibility relation, a multi- modal logic has a number of modal connectives, each having its own corresponding accessibility relation. The two examples given in the prescribed book (the wise men puzzle and the muddy children puzzle) illustrate why one would want to work with multi-modal languages, or multi-agent systems. There are other applications as well.","libVersion":"0.2.3","langs":""}