{"path":"Subjects/COS3712 - Computer Graphics/Unsorted/COS3712/Exam pack/Exam pack/Materials/Exam Summary Comp Graphics.docx.pdf","text":"C o d i n g : Ho w t o declar e v ect or s using c ode: Ho w to de fine a triangle with 3 v ertices (or t o de fine arra y of arra y s): V ertices is an arra y of arra y s ‘push’ pushes the v alue in par en theses in to the end of the arra y Arra y for v ertices: Note: these v ertices are on a 2D a x es. These v ertices are on a 3D a x es.Arra y of c olours Using R GB: Using R GBa: To se t jus t one c olour y ou g o: v ar red = v ec4(1, 0, 0, 1); Declaring v ector, poin ts and sc alars: Ho w to dra w/render objects: Note: The dra wArra y s function dra w Arra y s F or anima tion w e upda te a specific v ariable inside the render function and then c all it ag ain: To se t anima tion use reques tAnimFrame function ins tead of c alling the function ag ain: P105 Pr escribed se tIn ter v al and se tTimeout functions are independen t of the bro w ser thus it is difficult to g e t smooth anima tion. Solution is to use the reques tAnimFrame function which is support d b y mos t bro w sers. reques tAnimFrame reques ts the bro w ser to displa y the rendering the ne x t time it w an ts to re fresh the displa y and then c all the render function recursiv ely. Coding of ma trices and v ectors: Need to include the pack ag e MV.js to w ork with v ectors and ma trix es: Declaring ma trix: Filling it: Or filling b y v ectors: Cop y it in to e xis ting ma trix: Finding in v erse, de terminan t and transpose of ma trix: R ota tion, transla tion and sc aling: W ebGL based on ‘c olumn major order ’ which means means i.e. 1 s t ro w bec omes 1 s t c olumns, 2 n d ro w bec omes 2 n d c olumn e tc. S p e c if y in g L ig h t : E v er y ligh t source w e mus t specif y 3 separ a te c olour c omponen ts – diffuse, specular , and ambien t E ach of these inside par ame ters is R GB. To specif y loc a tion of ligh t: F or poin t source: F or directional source: Note: one has 0 and other one has 1 f or its 4 t h c omponen t. De fining ma terial: Inside v alues are the re flectiv e c oe fficien ts for each primar y c olour through 3 c olours using either R GB or R GB A c olours. Specif y shininess (f or specular c omponen t): T h e o r y : C o lu m n M a t r ix : M a t r ix w it h o n ly o n e c o lu m n . A v e c to r m a y b e re p re s e n te d w it h a c o lu m n m a t r ix . Tra n s p o s in g a m a t r ix : Id e n t it y m a t r ix : A I = A ( a n y m a t r ix t im e s id e n t it y m a t r ix I w ill y ie ld t h e m a t r ix In v e rs e o f a m a t r ix : S o m a t r ix w it h t h e in v e rs e m u lt ip lie d y ie ld s t h e id e n t it y m a t r ix C h a p te r 1 F ra m e B u ffe r : Core elemen t of a graphics s y s tem Store in forma tion rela ted to the pix els of a displa y, i.e. s tores pix els It s tores resolution, the dep th and the c olour of pix els. It is a c ollection of buffers, c olour buffer, dep th buffer (holds in fo needed for crea ting imag es from 3D da ta) and other special purpose buf fers Think of frames per sec ond. A frame is one imag e. So a framebuffer holds these imag e in forma tion tha t needs to be displa y ed. R esolution: ho w man y pix els are there in the screen OR number of pix els in the framebuffer –de termines de tail of imag e Dep th (or pr ecision): Number of bits tha t are used for each pix el which de termines pr operties such as ho w man y c olors c an be repr esen ted on a giv en s y s tem. The more bits the more c olors c an be represen ted. Colour: F ormula is n bits c an s tore n^2 c olors. 8 bits allo w 2^8 (256 c olors). In Full c olor s y s tems there are 24 bits per pix el and these ha v e enough c olors to repr esen t imag es realis tic ally – c alled true c olor s y s tems or R GB c olor s y s tems. R GB c olor s y s tem: E ach group s of bits (or b y te) in each pix el are assigned to each of the three primar y c olors – red, green and blue High dynamic rang e (HDR) s y s tems use 12 or mor e bits for each c olour c omponen t (r ed, grean, blue) so t otal of 12*3 bits. R a s te r g ra p h ic s : An 2D arr a y of pix els pr oduced b y a graphics s y s tem which is vie w ed on a screen. E ach pix el c orresponds t o a loc a tion giv en b y the arra y. e.g. e.g. the blue pix el is a t position ( j,i), i.e. r o w j and c olumn i Ras teriz a tion is the task of taking an imag e described in a v ector graphics f orma t (or shapes forma t) and c on v erting it in to a ras ter (2D arr a y of pix els) imag e. A n o t h e r d e f in it io n Ras teriz a tion (or sc an c on v ersion) is the pr ocess of c on v erting g eome tric en tities to pix el c olours and loc a tions in the frame buffer. R a s te r b a s e d g ra p h ic s s y s te m : The imag e w e see on the output de vice is an arra y – the ras ter – of pix els pr oduced b y the graphics s y s tem. E ach pix el c orresponds t o a unique loc a tion in the imag e. Collectiv ely, the pix els are s tored in a part of memor y c alled the frame buffer. Graphics S y s tem: G e o m e t r ic p r im it iv e : p o in t s , lin e s o r p o ly g o n s . In c o m p g ra p h ic s w e f ro m o b je c t s b y s p e c if y in g t h e p o s it io n s in s p a c e o f v a r io u s g e o m e t r ic p r im it iv e s . E .g . d e f in in g a c u b e y o u c a n d e f in e p o in t s : these are v ertices which are se t of loc a tions in space. A n d t h e n c o n n e c t t h e m : In m o s t g ra p h ic s s y s te m s a s e t o f lo c a t io n s in s p a c e ( o r v e r t ic e s ) is s u ff ic ie n t to d e f in e m o s t o b je c t s . T w o b a s ic e n t it ie s fo r m a n im a g e : O b je c t a n d V ie w e r. V ie w e rs p la c e s a t d iffe re n t p o s ito n s , w ill s e e d iffe re n t im a g e s o f t h e s a m e o b je c t . Pr ojection (imag e forma tion): The pr ocess b y which the specific a tion of an object is c ombined with the specific a tion of a vie w er to pr oduce a tw o-dimensional imag e. The imag e it pr oduces/de fine is c alled the pr ojection plane (tw o dimen tional). Visible ligh t ha v e w a v eleng ths be tw een 350 and 780 nm. A particular ligh t source is characteriz ed b y the in tensity of ligh t tha t it emits a t each frequency and b y tha t ligh t ’s direction ality R a y t r a c in g is a r e n d e r in g te c h n iq u e th a t c a n p r o d u c e in c r e d ib ly r e a lis tic lig h tin g e ffe c ts . E s s e n tia lly , a n a lg o r ith m c a n t r a c e th e p a t h o f lig h t, a n d th e n s im u la te th e w a y th a t th e lig h t in te r a c ts w ith th e v ir tu a l o b je c ts it u ltim a te ly h its in th e c o m p u te r - g e n e r a te d w o r ld . T h e tr a c e tr a c e s h o w lig h t g o e s fr o m th e s o u r c e a n d b o u n c e s o n v a r io u s o b je c ts lik e in th e r e a l w o r ld fo r e x a m p le th e lig h t fr o m th e s u n b o u n c e s fr o m a n o b e jc t to a n o th e r o b je c t, e tc . T w o Imaging s y s tems e xis t: Pinhole Camera Human Visual S y s tem P 15 pr escribed book. 1.5 ) S y n t h e t ic C a m e ra M o d e l: Wherin w e look a t crea ting a c omput er g enera ted imag e as being similar to forming an imag e using an op tic al s y s tem (i.e. with a c amera) e.g. Compar e taking a phot o of an object with a Camera to ho w w ould w e g e t the same imag e as the phot o tak en using c omput er g enera ted imag e. Ho w to c alcula te the imag e of an object on the pr ojection plane: WE find imag e of poin t on an object on the virtual imag e plane ( green plane) b y dra wing a line, c alled pr ojector, from the poin t to the cen tre of the lens (c alled cen tre of pr ojection). Imag e of the poin t of pr ojection plane is wher e it passes thr ough the pr ojection plane. Siz e of imag e is limited (not e the trees do not appear in windo w) W e place clipping r ectangle (or clipping windo w) in pr ojection plane. 1.6) Pr ogrammer s in terface API: Se t of functions tha t specif y In terfacing (c ommunic a tion) be tw een applic a tion pr ogram and a graphics s y s tem. Also kno wn as Graphics librar y The applic a tion pr ogrammer sees only API and does not see de tails of both hardw are and softw are implemen ta tion of graphics libr ar y. Functions w e need in API (if flo wing s yn the tic c amera model): Objects: De fined b y se t of v ertices Vie w er: De fined b y specif ying c amera position (Giv en b y C OP), orien ta tion (r ota te c amera around three a x es), foc al leng th (de termines the siz e of the imag e on the film plane OR portion of the w orld the c amera c an see b y mo ving c amera for w ard or backw ards, siz e of object g oes big g er the closer y ou bring c amera to it ) and siz e of pr ojection plane/film plane (Back of the c amera has a heigh t and a width, so it is siz e of back of c amera, i.e. the film plane see the c amera has w and h in pictur e. ) *Ask about F oc al leng th and Film plan t o unders tand it fully F unctions to specif ying the vie wer lookA t(c op, at, up) peresepctivee(fliedOfVie w … p25 (prescribed) Ligh t source: De fine b y their loc a tion, s treng th, c olour and direction. Ma terial Properties: The y are a ttributes of objects. The y c an be specified as series of functions. Wir e frame imag e: an imag e where w e only see the edg es of surfaces of objects/ only the edg es are rendered using line segmen ts. Think of it as imag e pr oduced if objects w ere c ons tructed with s tiff wires tha t formed a frame with no solid ma terial be tw een edg es. R endering: is the automatic process of generating an image from a 2D or 3D model . Modeling- r endering par adigm p27 pr escribed Separ a ting modeling of the scene from pr oduction of the imag e (r endering the scene) Models (such as g eome tric objects, ligh ts, c ameras, ma terial pr operties) ar e placed in da ta s tructure c alled a scene graph tha t is passes t o a renderer (or g ame engine) which g enera tes the imag e. 1 .7 G ra p h ic s A rc h ite c t u r e p 2 8 p r e E arly graphics ar chitectur e/ s y s tems : Could only pr ocess single ins truction a t a time. Job w as to send endpoin t da ta of line segmen ts in the imag e to displa y a t ra te high enough to a v oid flick er on the displa y. Displa y pr ocessor s: Job w as to relie v e the g eneral-purpose c omput er from the task of re freshing the displa y c on tinuously. Hos t is freed from other task s while displa y pr ocessor c on tinuously re freshes the displa y. Pipeline ar chitectur e: Pipeline c omprises a series of in terc onnected c omponen ts, each op timiz ed to perf orm a specific se t of oper a tions (or oper a tion) on da ta mo ving through the pipeline. Think of pipeline as assembly line wher e each c omponen t is oper a tion formed on da ta W e use pipeline t o pr o vide perf ormance increase in c omput er graphics (or f or displa ying imag es), bec ause pipelining incr ease perf ormance when same sequence of c oncurren t oper a tions mus t be perf ormed and tha t is wha t w e do in c omp gr aphics – lar g e se ts of v ertices and pix els mus t be pr ocessed. La tency, throughput p5 summar y Graphics pipeline: Process of trans forming se t of v ertices in to an imag e in the frame buffer. Start with se t of v ertices which de fines g eome tr y of scene. Process all these v ertices to from imag e. 4 major s tep s: P31pr e 1. V erte x pr ocessing: Coordina te trans forma tion (tr ans forming from the s y s tem in which v erte x es w ere de fined as, e.g. sa y de fine poin t as [x,y ,z] t o a repr esen ta tion in terms of c oordina te s y s tem of c amera) and c omputing c olour for each v erte x. 2. Clipping and primitiv e assembly: Se ts of v ertices assembled in to primitiv es such as line segmen ts and poly g ons. Then clipping happens wher e objects outside the clipping v olume (field of vie w of op tic al s y s tem) do not appear in the imag e. OUTPUT is se t of primitiv es who pr ojections appear in the imag e. 3. Ras teriz a tion: Primitiv es tha t are pr esen ted in terms of their v ertices are c on v erted to pix els in the frame buffer. OUTPUT is se t of fragmen ts ( Fragmen ts: c an be though t of as pix el tha t c arries with it c olour, loc a tion and dep th in forma tion) 4. Fragmen t pr ocessing: Tak es fragmen ts g enera ted in pr e v s tep and upda tes the frame buffer. Hidden-surface remo v al, te x ture mapping , bump mapping , and alpha blending c an be applied her e. P er-fragmen t ligh ting c alcula tions c an also be perf ormed in this bo x. P r o g ra m m a b le P ip e lin e s Oper a tions in Pipelines used t o be fix ed. No w V erte x pr ocessing and fragmen t pr ocessing are pr ogrammable (s tep 1 and 4). Adv an tag e of this : Tha t graphics pr ocessing c an no w be done in real-time. V erte x pr ogram … look on p5 Summar y Fragmen t pr ograms allo w s for ne w uses in te x tures (e. g. bump-mapping), these Fragmen t pr ograms and v erte x pr ogram are c alled shader s Shader s ( fragmen t and v erte x pr ograms) : Programs tha t c an alter loc a tion and c olor of each v erte x flo wing through pipeline (allo w for ne w ligh ting models or ne w pr ojections), allo w us to use te x tures in ne w w a y s (bump-mapping) and t o implemen t other parts of pipeline such as ligh ting on each fragmen t. Think if shaders as c omput er pr ograms tha t perf orms functions rela ted to c omput er graphics lik e trans forma tions. Ov erall perf ormance of graphics s y s tem is characteriz ed b y ho w fas t w e c an mo v e g eome tric en tities through the pipeline and ho w man y pix els per sec onds w e c an alter in the frame buffer. 2 .1 ) T h e S ie r p in S k i G a s k e t p 4 0 ( p r e s c r ib e d ) Immedia te mode graphics: As v ertices are g enera ted b y the applic a tion, the y are sen t directly to the graphics pr ocessor for rendering on the displa y. One c onsequence of immedia te mode is tha t there is no memor y of the g eome tric da ta. Thus, if w e w an t to redispla y the scene, w e w ould ha v e to g o through the en tire crea tion and displa y pr ocess ag ain (and e v er y time a redispla y is requir ed). Immedia tely sen t to graphics pr ocessor for rendering. Doesn’t allo w for redispla y of scene R e t ained mode graphics: W e c omput e all the g eome tric da ta firs t and s tore it in some da ta s tructure. W e then displa y the scene b y sending all the s tored da ta to the graphics pr ocessor a t once. This appr oach a v oids the o v erhead of sending small amoun ts of da ta to the graphics pr ocessor for each v erte x w e g enera te, but a t the c os t of ha ving to s tore all the da ta. Bec ause the da ta are s tored, w e c an redispla y the scene, b y resending the s tored da ta without ha ving to reg enera ting it. Geo da ta s tored (r e tained) in some da ta s tructure. Allo w for re-displa y 2 .2 ) P r o g ra m m in g 2 d im e n t io n a l a p p lic a t io n s ( p 4 2 ) Ma thema tic ally w e vie w the 2D plane as a sub space of a 3D space. 2D is sub se t of 3D . W e c an repr esen t a poin t p on z plane in 3D as p = (x,y ,0) 2D as p = (x,y) In W ebGL v ertices are repr esen ted in this w a y Can implemen t poin ts in man y w a y s but bes t is c olumn ma trix or triple t p = (x,y ,z) In W ebGL v erte x and poin t are actually 2 dif feren t things. V erte x es mak es up a g eo. Primitiv e whereas poin t is simples t g eo. primitiv e made up of one v erte x. Clip c oor dina te s y s tem: C a n b e v is u a liz e d a s a c u b e c e n t re d a t t h e o r ig in w h o s e d ia g o n a l g o e s f ro m ( - 1 , - 1 , - 1 ) to ( 1 , 1 , 1 ) . V erte x shader uses it to send in forma tion to the ras teriz er. Objects outside this cube will be elimina ted, or clipped, and c annot appear on the displa y. The v erte x shader uses trans forma tions to c on v ert g eo. da ta (specified in some c oordina te s y s tem) t o repr esen t in clip c oordina tes and outputs this in fo to the ras teriz er. 2 .3 ) T h e W e b G L A p p lic a t io n P r o g ra m m in g In te r fa c e ( A P I) – L ib r a r y w it h f u n c t io n s API Functions (functions t o in terface with graphics s y s tem and handle user input) of W ebGL: 1. Primitiv e functions: De fine lo w le v el objects tha t our s y s tem c an displa y. W ebGl only supports poin ts, line segmen ts, and triangles. Other API include poin ts, line segmen ts, poly g ons, pix els and v arious cur v es and surfaces. 2. A ttribute functions: Go v ern the w a y tha t primitiv es appear s on the displa y. E.g. choosing c olor, pa ttern to fill inside of poly g on, ligh ting on primitiv es 3. Vie wing functions: Allo w us to specif y v arious vie w s. W ebGL doesn’t pr o vide an y vie wing functions, but relies on the use of trans forma tions in the shaders to pr o vide the desired vie w . 4. Trans forma tion functions: Allo w us to c arr y out trans forma tions of objects, such as rota tion, transla tion, and sc aling. In W ebGL w e c arr y out trans forma tions b y forming trans forma tion ma trices in our applic a tions, and then applying them either in the applic a tion or in the shaders. 5. Input functions 6. Con trol functions 7. Quer y functions. S ta te m a c h in e : B a s e d o n th e c u r r e n t s t a t e a n d a g iv e n in p u t th e m a c h in e p e r fo r m s s t a t e tr a n s itio n s a n d p r o d u c e s o u tp u ts G ra p h ic s s y s te m v ie w e d a s s ta te m a c h in e : W e c an think of the en tire graphics s y s tem as a s t a te machine. Applic a tion pr ograms pr o vide input tha t chang e the s ta te of the machine OR c ause the machine to pr oduce output. From per spectiv e of the API, graphics functions ar e of tw o types: ● Those tha t specif y primitiv es tha t flo w through a pipeline inside the s ta te machine ● Those tha t either chang e the s ta te inside the machine or re turn s ta te in forma tion. Consequence of s ta te machine is tha t par ame ters are per sis ten t meaning their v alues remain unchang ed un til w e e xplicitly chang e them. To in terface with the windo w s y s tem and g e t input fr om e xternal de vices in t o our pr ograms, w e need t o use some other librar y. W ebGL mak es hea v y use of de fined c ons tan ts to increase c ode readability. Functions tha t trans fer da ta to shaders ha v e the follo wing nota tion: Although W ebGL is specific ally designed to w ork within a w eb bro w ser, it is based on OpenGL , which w as de v eloped f or a w ork s ta tion en vironmen t The units used to specif y v erte x positions in the applic a tion pr ogram are re ferred to as v erte x c oordina tes, object c oordina tes, or w orld c oordina tes, and c an be arbitrarily chosen b y the pr ogrammer to suite the applic a tion. Units on the displa y de vice are c alled windo w c oordina tes, screen c oordina tes, ph y sic al-de vice c oordina tes or jus t de vice c oordina tes. V erte x c oordina ted v alues need to be mapped t o windo w c oordina tes. User only need to specif y fe w par ame ters. 2 .4 ) P r im it iv e s a n d a tt r ib u te s p 5 3 Minimal s y s tems only support lines, triangles and poin ts primitiv es. ALL W ebGL g eo. primitiv es ar e v arian ts of poin ts, line segmen ts and triangular poly g ons. Other s y s tems support primitiv es such as te x t, circles, cur v es, surfaces and solids. BUT fe w hardw are s y s tems c an support lar g e se t of primitiv es. THUS not feasible. Thus no w ada y s w e use minimum se t of primitiv es since it is fas ter for hardw are. R eason since GPUs are op timiz ed for poin ts, lines and triangles. Triangles are eas y to render and thus triangles are the only fillable g eome tr y en tity tha t W ebGl rec ogniz es. Fill mean w e render it ’s in terior with pa tterns using te x tures. Filled P oly g on mus t ha v e a w ell-de fined in terior to be rendered c orrectly. W ell de fined ha v e three pr operties: Simple: No edg es are allo w ed to cross. Con v e x: No den ts or inden ta tion in the objects, i.e. all lines be tw een an y tw o poin ts tha t is inside the object mus t be inside the object Fla t: All v ertices mus t lie on the same place. If all 3 v ertices of a triangle are not c ollinear then its in terior is w ell de fined. Primitiv es separ a tes in to tw o classes: Geome tric primitiv es Imag e/ras ter primitiv es. P o in t s a n d lin e s : Line Strip is fr om end to s tart (not with the same poin t) Line Loop ho w e v er is from the same poin t to the same poin t thus forming a loop. P o ly g o n s ( t r ia n g le s ) : Only poly g ons tha t W ebGL supports ar e triangles. Triangles in summar y is the gl.TRIANGLE S in the pictur e. Triangle s trip: Sa y P0, P1 and P2 mak e up triangle. Then ne w poin t P3 mak e up another triangle. Triangula tion is the pr ocess of appr o xima ting a g eneral g eome tric object b y subdividing it in to a se t of triangles. Te x t 2 types of t e x t in c omp. gr aphics: Strok e te x t: Has adv an tag e of being de fined with a lot of de tail. Jus t as much de tail as other graphic al primitiv es. Ras ter Te x t: Chars de fined as rectangles of bits c alled bi block s. W ebGL do not ha v e a te x t primitiv e A ttributes: Describe ho w objects should be rendered. 2 .5 ) C o lo r Additiv e c olor model: Primar y c olors add tog e ther to giv e the per ceiv ed c olor. Start with black surface then primar y c olors add ligh t to initially black screen. E.g. CR T monitors and pr ojectors Sub tractiv e c olor model: Start with white surface. Colour pigmen ts remo v e c olour c omponen ts from ligh t tha t is s triking the surface. E.g. prin ters use this model. In R GB s y s tem each pix el migh t c onsis ts of 24 bits (3 b y tes), 1 b y te for each primar y c olor. Specific a tion of R GB c olours are based on the c olour cube. R GB A is an e x tension of the R GB model, where the fourth c olour (A , or alpha) is tr ea ted b y W ebGL as either an opacity or transpar ency v alue. Alpha blending is disabled b y de fault. A lp h a b le n d in g is th e p r o c e s s o f c o m b in in g a tr a n s lu c e n t fo r e g r o u n d c o lo r w ith a b a c k g r o u n d c o lo r, th e r e b y p r o d u c in g a n e w c o lo r b le n d e d b e tw e e n th e tw o P66 Inde x ed c olour: E arly graphics s y s tem: Only had 8 bits deep f or each pix el (ins tead of the 3 b y te group s, i.e. 24). Her e the 8 bits is in terpr e ted as an in teg er v alue which inde x in to a c olour-look up t able. Using the bits and table w e g e t the desired c olour. PR OBLEM: Limited on the amoun t of c olor it c an pr o vide thus c annot shade dynamic imag es pr operly . WE c an vie w c olor as a poin t in a c olor solid. W e dra w c olor using c oordina te s y s tem c orresponding t o three primaries. Dis tnace along c oord. Axis repr esen ts amoun t of each c orresponding primar y. Se tting of c olor a ttributes: Clear the c olor: de fault is white (uses R GB A Se t a poin t c olor: R GB: R GB or R GB A: Note las t one is for opacity 2 .6 ) V ie w in g O r t h o g ra p h ic p ro je c t io n is w h e n a ll p ro je c to rs a re p a ra lle l a n d t h e c e n t re o f p ro je c t io n is re p la c e d b y a d ire c t io n o f p ro je c t io n . A ll p ro je c to rs a re p e r p e n d ic u la r ( o r t h o g o n a l) to t h e p ro je c t io n p la n e . Note: R ed dot is cen tre of pr ojection. In orthog onal it is replaced b y a direction of pr ojection. Note w e c an slide this the pr ojection plane along the z-a xis without changing where the pr ojectors in tersect this plane (since all pr ojectors are perpendicular) Orthographic pr ojection tak es a poin t (x,y ,z) and pr ojects it in to the poin t (x,y ,0) which is the xy a xis. Vie wing v olume is the cube de fined b y Orthographic pr ojection “ sees” only objects in the v olume specified b y this vie wing v olume. In orthographic pr ojection c an include objects behind the c amera as w ell (unlik e real c amera) 2 .7 ) C o n t r o l F u n c t io n s ● A windo w or displa y windo w is an OS manag ed rectangular area of the screen in which w e c an displa y our imag es. ● A windo w s displa y s c on ten ts of the frame buffer, thus position in the windo w are measured in windo w c oordina tes. These positions ar e pix els. ● R e ferences to positions in a windo w s are usually rela tiv e to the top-le ft c orner (0,0). Aspect r a tio of a rectangle is the ra tio of the rectangle’s width to its heigh t. Aspect r a tio of vie wing rectangle mus t be same as aspect r a tio of the windo w other wise objects appear dis torted: Vie wport is a rectangular area of the displa y windo w in which our imag es are rendered. B y de fault it is the en tire windo w . Or w e c an se t it using: X and y is dis tance from bottom le ft c orner and then w is width and h is heigh t of vie wport 2 .8 ) T h e G a s k e t P r o g ra m W e crea te poin ts (v erte x es) and put them in an arr a y and send them to a GPU and render them A v erte x arra y object ( V A O ) allo w s us to bundle da ta associa ted with a v erte x arra y. Can ha v e a t mos t one curren t V A O a t a time. E v er y applic a tion mus t pr o vide a v erte x and fragmen t shader. E ach shader is c omple te C-line pr ogram with main() as its en tr y poin t. V erte x shader is e x ecuted for each v erte x tha t is passed thr ough the pipeline. A V erte x shader will trans form the repr esen ta tion of a v erte x loc a tion (fr om wha te v er c oordina te s y s tem in which it is specified) t o a repr esen ta tion in clip c oordina tes for the ras teriz er. The Fragmen t Shader is e x ecuted for each fragmen t (pix el tha t c arries in fo) g enera ted b y the ras teriz er. 2 .9 P o ly g o n s a n d R e c u r s io n p 8 3 R ecursiv e subdivision is a po w erful technique tha t c an be used to subdivide a poly g on in to a se t of smaller poly g ons 2 .1 0 ) T h r e e - d im e n s io n a l G a s k e t B y de fault primitiv es are dra wn in the order in which the y appear in the fr ame buffer. As primitiv es are being rendered all of its fragmen ts are placed in to the frame buffer c o v ering an y pr e viously dra wn objects. PR OBLEM: Some objects ma y g e t dra wn o v er other objects e v en though the y are closer to the vie w and shouldn’t be dra wn o v er. Solution: Hidden-Surface remo v al alg orithm (or visible-surf ace alg orithm) which is an alg orithm fir ordering objects so tha t the y are dra wn c orrectly. Hidden surface remo v al support ed b y W ebGL is c alled the z-buffer alg orithm. Z -buffer is one of the buffers tha t mak e up the fr ame buffer. C h a p te r 3 Displa y pr ocess: An imag e is automa tic ally redra wn on the displa y. The r e fr esh oper a tion dra w s a ne w imag e, a t a ra te of 60 fr ames per sec ond Consider a bro w ser windo w on the displa y. Although this windo w is being redra wn b y the displa y pr ocess, this c on ten ts are unchang ed unless some action tak e place tha t chang es the pix els in the displa y buffer. <- This action c an be b y a user clicking a mouse. So bro w ser runs as ynchronously, e x ecuting one piece of c ode un til some e v en t in terrup ts the flo w or the c ode runs to c omple tion. Applic a tion pr ograms oper a tes as ynchronously (b y itself/not tog e ther) fr om the automa tic displa y of the c on ten ts of the frame buffer, and c an c ause chang es to the frame buffer a t an y time. Double buffering is a technique f or tricking the e y e in to seeing smooth anima tion of rendered scenes. The hardw are has tw o frame buffers: one, c alled the fron t buffer, is the one tha t is displa y ed, the other, c alled the back buffer, is then a v ailable for c ons tructing wha t w e w ould lik e to displa y ne x t. So fron t buffer is being displa y and back buffer is one tha t will be displa y ed ne x t. Once the dra wing is c omple te, w e s w ap the fr on t and back buffers. W e then clear the ne w back buffer and c an s tart dra wing in to it. With double-buffering w e use glutSwapBuffers() ins tead of glFlush() a t the end of the displa y c allback function. Ha v e tw o buffers Fron t for displa ying and back one for wha t w e w an t to displa y ne x t When fron t buffer is done w e s w ap back and fr on t. Then displa y the fron t (which use to be the back) whils t upda ting the back buffer. Problems tha t double buffering solv es: If w e chang e the c on ten ts of the framebuffer during a re fresh, w e ma y see undesirable artifacts If w e are rendering more g eome tr y than c an be rendered in a single re fresh cy cle, w e will see differen t parts of objects on successiv e re freshes. If object is mo ving its imag e ma y be dis torted Timer: A w a y to g enera te a buffer s w ap and t o c on trol the ra te a t which the displa y is repain ted is to use the se tIn ter v al me thod to c all the render function repea tedly a fter a specified number of millisec onds render will be c alled 16 millisec onds or 60 times per sec ond. se tIn ter v al and se tTimeout functions are independen t of the bro w ser thus it is difficult to g e t smooth anima tion. Solution is to use the r eques tAnimFrame function, which is support ed b y mos t bro w sers. reques tAnimFrame reques ts the bro w ser to displa y the rendering the ne x t time it w an ts to re fresh the displa y and then c all the render function recursiv ely. Input de vices: Logic al de vices: Ins tead of looking a t de vices as ph y sic al de vices w e look a t (tr ea t) them as logic al de vices whose pr operties ar e specified in terms of wha t the y do from per spectiv e of applic a tion pr ogram. It is looking a t input fr om inside applic a tion pr ogram. Logic al de vices – characteriz ed b y its high-le v el in terface with applic a tion pr ogram. 2 char acteris tics describe logic al beha viour of input de vice The measuremen ts tha t the de vice re turns to the user pr ogram The time when the de vice re turns those measuremen ts. 6 W ebGL classes (functionaility) of logic al input de vices (p112): String – Pro vide ASCII s tring to user pr ogram Loc a t or – Pro vides position in w orld c oordina tes to user pr ogram Pick – R e turns the iden tifier of an object on the displa y to the user pr ogram Choice - V alua t or - Str ok e - Measur e: of a de vice is wha t the de vice re turns to the user pr ogram. Trig g er of a de vice is a ph y sic al input on the de vice with which the user c an signal the c omput er. e.g. measure of k e yboard should include s tring of characters (which it sends t o user pr ogram) and the trig g er c an be En ter k e y. T yping s tring of chars then hitting en ter will signal c omput er to send the chars to the pr ogram. Measure is chars. Applic a tion pr ogram c an ob tain the measure of a de vice in 3 dis tinct modes (each mode de fined b y rela tionship be tw een the measure pr ocess and the trig g er): ● R eques t mode: Measure of the de vice is not re turned to the pr ogram un til de vice is trig g ered. E.g. C+ + pr ogram for input. User types in characters but the pr ogram will not receiv e the input unless the En ter k e y is pr essed. ● Sample mode: input is immedia te, i.e. measure is sen t to pr ogram e v en without trig g er. E.g. typing le tters in to w ords (le tters is immedia tely sen t to the pr ogram) ● E v en t mode (p114): In here there are man y trig g ers from man y de vices (lik e in c omput er where there are k e yboard and mouse, each ha v e its o wn trig g er and measure pr ocess). The de vice measure, including the iden tifier for the de vice, is placed in an e v en t queue. T h is p ro c e s s o f p la c in g e v e n t s a re c o m p le te ly in d e p e n d e n t o f w h a t t h e a p p lic a t io n p ro g ra m d o e s w it h t h e s e e v e n t s . T h e p ro g ra m e x a m in e t h e f ro n t o f t h e q u e u e . If t h e re is a n e v e n t in t h e q u e u e , t h e p ro g ra m lo o k a t t h e 1 s t e v e n ’t t y p e a n d t h e n d e c id e w h a t to d o w it h it . E .g . s a y e v e n t is k e y b o a rd , b u t p ro g ra m is n o t in te re s te d in k e y b o a rd , t h e e v e n t c a n b e d is c a rd e d . Ph y sic al input de vices (p108): ● K e yboar d Codes ● The ligh t P en ● The mouse and Trackball ● Da t a t able ts, Touch P ads, and Touch Scr eens ● E tc. C h a p te r 4 4 .1 S c a la r s , P o in t s a n d V e c t o r s The basic g eome tric objects c an be described using 3 fundamen tal types: sc alars, poin ts and v ectors. Simples t g eo. object is a poin t. In 3D g eo. s y s tem a poin t is a loc a tion in space. W e need real numbers to specif y quan tities such as dis tance. R eal numbers are e x amples of sc alar s. V ect or: allo w us to w ork with directions. It is a quan tity with a direction. In c omp. gr aphics w e often c onnect poin ts with directed line segmen ts i.e. a v ector: D ire c te d s e g m e n t s is t h e s a m e a s v e c to rs . Head to Tail Me thod for v ector addition: Dot and Cr oss Pr oduct p143 Dot pr oduct of v ectors u and v are written as . If u and v are said to be Orthog onal (perpendicular) Cross pr oduct When a cross pr oduct is tak en of tw o v ectors the result is a v ector tha t is orthog onal to both of them: Planes: A plane is an a ffine space and c an be de fined as a direct e x tension of the par ame tric line. The v ector n is orthog onal to the plane, it is c alled the normal. 4.2) Thr ee dimensional primitiv es p 145 3 f ea tures characteriz e 3 dimensional objects: Objects described b y their surfaces and though t of as hollo w Objects c an be specified thr ough a se t of v ertices in three dimensions Objects are c omposed of simple, fla t and c on v e x poly g ons. Mos t graphics s y s tems are op timiz ed for pr ocessing of poin ts, line segmen ts, and triangles. a lin e s e g m e n t is a p a r t o f a lin e th a t is b o u n d e d b y tw o d is tin c t e n d p o in ts Full rang e of 3D objects c annot be support ed on e xis ting graphics s y s tems, e x cep t b y appr o xima ting. Modern graphics s y s tems are the bes t a t rendering triangles or meshes of triangles. 4 .3 ) C o o r d in a te S y s te m s a n d F ra m e s V ect or: V ector repr esen ta tion in 3D space: The alpha’ s are sc alar v alues. The y sa y ho w much the v ector is g oing in to v1, v2 or v3. W e c an de fine v1,v2 and v3 as a c oor dina te s y s tem: The basis v ectors v1, v2 and v3 ar e though t of as de fining a c oor dina tes y s tem. W e c an write this repr esen ta tion as c olumn ma trix: a is bold here which denotes a repr esen ta tion in a specific w a y other thantha t of the original. Problem with v ectors y ou c an mo v e them since the y don’t ha v e fix ed position. Imag e sho wing this: Same repr esen ta tion of v ector and poin t in 3D space: Problem thus Homog enous c oordina tes used to solv e this. Look in Summar y to see de tails of this. 4 .4 F ra m e s in W e b G L p 1 5 9 W ebGL is based on pipeline model, the 1 s t part of which is a sequence of oper a tions on v ertices. W e c an characteriz e such oper a tions b y a sequence of tr ans forma tions or a sequence of chang es of frames for the objects specified b y an applic a tion pr ogram. Order of frames in the pipeline: So basic ally w e s tart with Object c oordina tes and then it g e ts trans formed in to Windo w c oordina tes tha t c an be displa y ed in a windo w . 1. Model/Object c oordina tes: e.g. an object, e.g. a cube with its faces aligned with the a x es of the frame. The c oordina tes of the objects w e w an t to render. 2. W orld (or applic a tion) c oordina tes: The applic a tion pr ogram applies sequence of trans forma tions to each objects siz e, orien t, and position within a fr ame tha t is appr opria te for the particular c oordina tes. 3. E y e/Camera c oordina tes: Imag e pr oduces depends on the c amera/vie w er. 4. Clip c oordina tes: ‘prior t o’ in summar y means ‘be fore’ 5. Normaliz ed de vice c oordina tes: It is trans forming homog enous c oordina tes (in 4D) in to 3D c oordina tes. 6. Windo w c oordina tes: Con tains the dep th in forma tion 7. Screen c oordina tes: R emo v es the dep th c oordina te which no w finally yields a 2D screen c oordina tes. The model-vie w ma trix (p160 bot t om) pr o vides the trans forma tion tha t mos t applic a tions requir e. Bec ause frame chang es are repr esen ted b y model-vie w ma trices tha t c an be s tored, w e c an sa v e frames and mo v e be tw een frames b y changing the curren t model-vie w ma trix. Use model-vie w ma trix to chang e be tw een frames. E ach chang e of frame c an be done b y ma trix the c onc a tena tion of these ma trices are the model-vie w ma trix. Bec ause W ebGL does not us e a fix ed-function pipeline, w e are not requir ed to use the model-vie w ma trix. Which frames do w e reg ard as fix ed? W e reg ard the c amera as fix ed and the other frames mo ving rela tiv e to the c amera. W e normally mo v e the c amera a w a y from the objects, i.e. w e mo v e the c amera frame rela tiv e to the object frame. So aft er applying mode- vie w matrix our c amera is mo ved away The model-vie w ma trix mo v es a poin t (x,y ,z) in the object fr ame to the poin t (x,y ,z,-d) inthe c amera frame (so fr om 1 t o 3). The user e xperiences tha t he/ she is positioning objects as be fore. The model-vie w ma trix tak es c are of the rela tiv e positioning of the object and e y e frames. *Ak s lecturer reg arding it. 4 .5 ) M a t r ix a n d V e c t o r C la s s e s ( p 1 6 3 ) R o w major order of m: i.e. 1 s t ro w bec omes 1 s t ro w s, 2 n d ro w bec omes 2 n d ro w e tc. Column major order of m: i.e. 1 s t ro w bec omes 1 s t c olumns, 2 n d ro w bec omes 2 n d c olumn e tc. W ebGL used c olumn major form. 4 .6 ) M o d e lin g a c o lo r e d c u b e ( p 1 6 5 ) Cube c an be modelled b y 8 v ertices or w e c an use a surface-based models which implies tha t w e reg ard cube as in tersections of 6 planes OR 6 poly g ons c alled face ts. A face t is basic ally a face of an object. W e use the face ts me thod. Start b y de fining arra y of v ertices: In 3D: In Homog enous c oord s y s tem( remember 4 t h one g e t 1 for poin t or 0 f or v ector): Can use lis t of poin ts to specif y faces of the cube. E.g. One face is specified b y sequence of v ertices 0, 3, 2, 1 wher e these in teg ers are inde x of v ertices arra y In w ar d and outw ar d poin ting faces. Order w e specif y our v ertices ma tter when specif ying faces. Order is import an t, bec ause each poly g on (f ace) has 2 sides. Thus w e need c onsis ten t w a y to dis tinguish be tw een the 2 f aces. WE c all outw ar d facing if the v ertices are tra v ersed in a c oun ter clockwise order when face is vie w ed from outside. This me thod also kno w s as the righ thand rule: orien t fing ers in direction of v ertices tra v ersed, the thumb poin ts outw ards, i.e. the face w e will see. Color in terpola t a tion: Process of deciding which c olors to assign to poin ts inside a poly g on giv en the c olors for the v ertices of the poly g on. In terpola tion is the pr ocess of es tima ting ne w v alues be tw een kno w s v alues. In c omput er graphics in terpola tion is filling in c olors across a poly g on giv en the c olors of the v ertices of the poly g on. 4 .7 ) A f f in e t ra n s fo r m a t io n s ( 1 7 2 ) Affine trans forma tion preserves the ratio of the lengths of parallel line segments (OR JUST IT PRESER VES LINES) Ma trix T x poin t P will result in poin t Q E ach linear trans forma tion c orresponds t o a chang e in frame. W e c a n v ie w a lin e a r tr a n s fo r m a tio n in tw o e q u iv a le n t w a y s : ( 1 ) a s a c h a n g e in th e u n d e r ly in g r e p r e s e n ta tio n , o r fr a m e , th a t y ie ld s a n e w r e p r e s e n ta tio n o f o u r v e r tic e s , o r ( 2 ) a s a tr a n s fo r m a tio n o f th e v e r tic e s w ith in th e s a m e fr a m e . Ma trix trans forma tion r epr esen t a tion: The 12 v alues (alpha v alues) c an be se t arbitrarily and w e sa y this trans forma tion has 12 degrees of freedom. R epr esen ta tion of poin ts and v ectors: V ector: If we apply the transformation, i.e. multiply C to vector u then: W e note than only 9 of the elements of C af fect u and thus there are only 9 degrees of freedom in transformation of vectors. Because some values will get multiplies by the 0 at the end of u, so 3 values will get thrown away . Thus 12-3 = 9. So degrees of freedom does not hold. 4 .8 ) Tra n s la t io n , R o t a t io n a n d s c a lin g ( p 1 7 5 ) Transla tion: Note: d is a v ector R ot a tion: P ositiv e rota tion about z a xis, positiv e z a xis c oming out of pag e. Can rota te object b y a fix ed poin t: Fix ed poin t is cen tre of object ins tead of a t origin which is de fault. Sc aling: R ot a tion and transla tion ar e rigid body trans forma tions: A rigid body trans forma tion is a trans forma tion tha t pr eser v es the Euclidean dis tance be tw een e v er y pair of poin ts, i.e. the object is s till the same siz e. Transla tion is an oper a tion tha t displaces e v er y poin t a fix ed dis tance in a giv en direction. R ota tion is an oper a tion tha t rota tes each poin t b y a fix ed angle about a line or a poin t. Thus with both of these oper a tion the same function is applied on each poin t for the object which will pr eser v e the Euclidean dis tance be tw een e v er y pair of poin ts. Thus the y are rigid body trans forma tions. Sc aling is non-rigid body trans forma tion 4 .9 ) Tra n s fo r m a t io n in h o m o g e n o u s C o o r d in a te s ( p 1 7 9 ) Note: All rota tion ma trices g e ts multiplied b y the poin t ma trix to g e t the ne w poin t. Transla tion ma trix: The transla tion ma trix: g e t poin ts p’ b y Multiplying p with tr ansla tion ma trix T Alpha ar e the v alues which y ou w an t to mo v e it b y. i.e. Alpha x is ho w much y ou w an t to mo v e it in x direction. Can also repr esen t transla tion with: T O g e t ne w poin t p’ y ou add dis tance d to original poin t p. E ach one c an be repr esen ted b y c olumn ma trix (using homog enous c oord. S y s tem) Then these equa tions c an be written as: Sc aling Ma trix: The sc aling ma trix (fix ed poin t a t origin): If all v alues B x=B y=Bz then it is unif orm sc aling. B x is ho w much y ou w an t to increase/decrease it siz e acc ording to the x a xis. If B x –B y = Bz then it is uniform sc aling. R ot a tion: To undo a rota tion, i.e. rota te it in other direction the same amoun t: To c ons truct the rota tion ma trix w e multiply all of the r ota tion ma trix c omponen ts: Shear trans forma tion: The shear ma trix: 4 .1 0 ) C o n c a te n a t io n o f t ra n s fo r m a t io n s ( p 1 8 4 ) Crea te more c omple x a ffine trans forma tions b y multiplying t og e ther, or c onc a tena ting , sequences of the basics tr ans forma tions ma trices. Conc a tena ting them tog e ther, w e g e t: This formula repr esen ts when w e rota te an object about a fix ed poin t p f(her e w e mus t transla te and rota te). So w e 1. Transla te the object such tha t p f c oincides with the origin: T(-p f ), i.e. t ak e it ti the origin 2. WE apply the r ota tion: R( θ ) 3. Finally mo v e the object back such tha t p f is ag ain a t its origin: T(p f ) Note these are in re v erse order in M, bec ause MATRIX multiplic a tion is not c ommuta tiv e. W e specif y objects each with it ’s siz e, loc a tion and orien ta tion. W e c an ob tain the desired siz e, orien ta tion and loc a tion b y applying an a ffine trans forma tion, i.e. the ins t ance trans forma tion. Ins t ance trans forma tion is applied in the f ollo wing or der: Sc ale, orien t (r ot a te) and then transla te it. Ins t ance trans forma tions sc ale, orien t and transla tes an object t o the desir ed loc a tion in the scene. Ins t ance trans forma tion: To r ot a te an object with angle The t a about z a xis: 4 .1 1 ) Tra n s fo r m a t io n M a t r ic e s in G L In W ebGL , pr ogrammer c an choose which frames to use and also where to c arr y out the trans forma tions be tw een the frames (applic a tion of v erte x shaders). T w o trans forma tion w e will use often: ● Model-vie w trans forma tion: Basic ally g oing from the 1 s t Model frame to the vie w frame, i.e. trans forming g eo. Objects/model frame to c amera frame. ● Projection trans forma tion: R esponsible f or c arr ying out pr ojection and also chang es the repr esen ta tion to clip c oordina tes. Mos t graphics s y s tems ha v e curr en t trans forma tion ma trix (C TM). C TM is part of pipeline. You c an think of the C TM as pr oduct of the 2 ma trices abo v e 4 .1 2 ) S p in n in g o f t h e c u b e V ariables ma y chang e in fe w w a y s. But par ame ters tha t will remain the same for all v ertices during a dra w are c alled uniform qualified v ariables. C h a p t e r 5 5 .1 ) C la s s ic a l a n d C o m p u te r V ie w in g p 2 1 5 Vie w s: ● P arallel Vie w: Where Cop r eplaced b y DOP (dir ection of pr ojection), i.e. C OP is placed a t in finity a w a y and all pr ojectors are parr ellel. ● P erspectiv e vie w s: C OP is finite dis tance a w a y and pr ojectors are not parr alell. Both per spectiv e and par allel pr ojectors pr eser v e lines, but in g eneral do not pr eser v e angles. Multi-vie w orthographic pr ojection pr eser v es both dis tances and angles. In Ax onome tric pr ojections the pr ojectors are s till orthog onal to pr ojection plane, but the pr ojection plane c an ha v e an y orien ta tion with respect t o the object. Ge t 3 types of a x onome tric pr ojections: Oblique Pr ojections/vie w: Angles in planes par allel to the pr ojection plane ar e pr eser v ed. Projections allo w ed to mak e angle with pr ojection plane. P er spectiv e vie w s: ● Na tural-looking imag e ● Cannot tak e measuremen ts from per spectiv e vie w . 5 .2 ) V ie w in g w it h a C o m p u te r p 2 2 2 Vie w achie v ed b y sequence of tr ans forma tions –these c orrespond t o chang e of frames. In W ebGL 3 is import an t in vie wing pr ocess: Object Frame, Camera Fram, and the clip c oordina te frame. Fle xibility of ho w w e specif y objects and ho w w e vie w them: Vie wing trans forma tions (vie wing divided in to tw o oper a tions: ● Model-vie w trans forma tion – specif y position of the c amera ● Projection trans forma tion – applies the specified pr ojection (orthogr aphic or pr espectiv e) t o the v ertices and puts objects within the clipping v olume in clipping cube Hidden surface remo v al applied a fter fragmen t shader. Ho w e v er, object tha t are hidden will s till g enera te fragmen ts for block ed objects within clipping v olume. 5 .3 ) P o s it io n in g o f t h e c a m e ra p 2 2 4 Model-vie w ma trix enc ap sula tes rela tionship be tw een c amera frame and object frame (fr ame 1 and 3). See initially c amera is a t origin and then it is mo v ed a w a y from it. Modelling trans forma tion: Goes from Object frame to W orld Frame (Fr ame 1 t o 2), i.e. trans forms object c oordina tes to w orld c oordina tes. Do this b y sc aling , rota tion and transla tion. Vie wing trans forma tion: Trans forms w orld c oordina tes to c amera c oordina tes. (Fr ame 2 t o Frame 3) Specif ying c amera frame: P ositioning the c amera: VRP: Specif y loc a tion of C OP (Cen tre of c amera lens) VPN: Also kno wn as n, specifies the normal t o the pr ojection plane. VUP: Specif y wha t direction is up fr om the c amera’s per spectiv e. It need not be perpendicular t o n (BUT WE GET ONE WHICH IS PERPENDICULR T O n) W e pr oject VUP v ector on to the vie w plane t o ob tain up-dir ection v, which is orthog onal to n. Then use cross pr oduct (vxn) t o ob tain 3 rd orthog onal direction u. This ne w orthog onal c oordina te s y s tem is c alled the vie wing-c oor dina te s y s tem or the u-v -n s y s tem . The u-v -n s y s tem with VRP giv es us our desir ed c amera frame. Another me thod is using the look -a t function. e is same as VRP and a is where w e looking a t. Thus 5 .4 ) p a ra lle l P r o je c t io n s p 2 3 4 Orthog onal pr ojections: x and y v alues are re tained (but only z v alue chang es) Projection is a technique tha t tak es the specific a tion of poin ts in 3D dimensions and map s them to poin ts on a 2D pr ojection surface. <- This tr ans forma tion not in v ertable or re v ersible, thus it is not feasible so w e use pr ojection normaliz a tion. Orthographic Vie wing: Shape of orthog onal pr ojection is righ t-par allelepiped. Sides of clipping v olumes are: It is help ful to think as the vie wing v olume being in c amera c oordina tes de termined b y : <- Vie w v olume par ame ters Pr ojection normaliz a tion: It is the pr ocess of trans forming our vie w v olume to de fault vie wing v olume W e deriv e a ma trix using transla tion and sc aling tha t will trans form v ertices in c amera c oordina tes to fit inside the de fault vie w v olume ( ), this pr ocess is c alled Projection normaliz a tion. The pr ojection ma trix brings objects in to 4 dimensional clip c oordina tes, and c on v erts v ertices to a repr esen ta tion in 3D normaliz ed de vice c oordina tes. V alues in normaliz ed de vice c oordina tes are la ter mapped t o windo w c oordina tes b y the vie wport tr ans forma tion. 2 s tep s of pr ojection normaliz a tion (in summar y) 5 .5 ) P e r s p e c t iv e P r o je c t io n s Top vie w: Similar triangle, thus ra tios of side c an equal. Side Vie w: E qua tions for simple per spectiv e pr ojection: F oreshortening: Imag es of closer objects are big g er c ompar ed to further objects. *Ak s lecturer about wha t the y doing here with the ma trices. 5 .6 ) P e r s p e c t iv e p r o je c t io n s w it h W e b G L Vie w v olume: WE add fron t and back clipping planes, and the ang el of vie w to g e t our vie w v olume. angle also decides ho w big the vie w v olume is. 2 functions f or specif ying per spectiv e vie w: Note: no ang el is giv en. Near and far are measured from the C OP. Here w e use angle giv en b y fo v y. Aspect giv es w +h. near and f ar is same as pr e vious function. 5 .7 ) P e r s p e c t iv e - p r o je c t io n m a t r ic e s ( p 2 8 1 ) Simple per spectiv e pr ojection ma trix: 5 .8 ) H id d e n s u r fa c e r e m o v a l ( p 2 5 0 ) Alg orithms tha t remo v e surfaces tha t should not be visible to the vie w er are c alled hidden surface remo v al alg orithms. W ebGL uses the z-buffer alg orithm as hidden surface remo v al. . Z -Buffer alg orithm: As primitiv es are ras teriz ed, w e k eep tr ack of the dis tance from the C OP or the pr ojection plane t o the closes t poin t on each pr ojector tha t has already been rendered. W e upda te this in forma tion as successiv e primitiv es are pr ojected and filled. Ultima tely, w e displa y only the closes t poin t on each pr ojector. The alg orithm requir es a dep th buffer, or z-buffer, to s tore the necessar y dep th in forma tion as primitiv es are ras teriz ed. The z-buffer forms part of the frame buffer and has the same spa tial resolution as the c olour buffer. So z-buffer jus t displa y s the closes t poin ts of each pr ojector. Z -buffer ’s dep th resoltuion is 32 bits Another e xplana tion/de finition: It is an imag e-space alg orithm. The idea of the Z -buffer alg orithm is to use a 2D ma trix(z-buf fer or dep th-buffer) t o s tore the dep th of the closes t object to the ob ser v er ’s vie w . When a object is rendered, the dep th of a g enera ted pix el(z c oordina te) is s tored in the dep th buffer. If another object mus t be pain ted in the same pix el, the dep th of the ne w pix el is c ompar ed with the s tored dep th, if the ne w pix el’s dep th is closer than the s tored dep th then the v alue of the pix el in the z-buffer is o v erriden. The z-buffer will allo w to repr oduce dep th per cep tion c orrectly. To enable to z-buffer: Culling: pr ocess of not displa ying faces who’s normal poin ts a w a y from the user for c on v e x obejcts. 5 .9 ) D is p la y in g M e s h e s ( p 2 5 9 ) 5 .1 0 ) P r o je c t io n s a n d s h a d o w s ( p 2 6 5 ) W e c an use per spectiv e pr ojection ma trix to c omput e v ertices of the shado w poly g on ligh t source are origin 5 .1 1 ) S h a d o w M a p s Jus t lik e hidden surface remo v al w e c an remo v e shado w s tha t the vie w er c an t see also using a dep th buffer which is c alled the shado w buffer. If y ou place vie w er a t (xl, yl,zl) then vie w er w on’t see the shado w . C h a p t e r 6 : L i g h t i n g a n d s h a d i n g Ligh t giv es objects dep ths per cep tion. Without it objects look s fla t. W e see objects with man y gradua tions or shades of c olors. Shades giv es 2D imag es the appear ance of being 3D . W e de v elop loc al ligh ting models (as appose t o global ligh ting models) which c omput e shade to assign to poin t on surface, independen t of an y other surfaces. 6 .1 ) L ig h t a n d M a tte r ( 2 7 6 ) A surface c an either emit ligh t (lik e ligh tbulb) or r e flect ligh t. Some ligh t from the source is sc a ttered. Ligh t tha t g o to A c an re flect and g o to B , then ag ain re flect and g o to A ag ain, and so on. This is r ecur siv e r e flection . R ecursiv e re flection c an be described ma thema tic ally using the r endering equa tion. W e c an s tart b y flo wing ra y s of ligh t from a poin t source to our vie w er. Our vie w er only sees ligh t tha t lea v e the source and reaches her/his e y es. Ra y s g oing directly in to her e y es, these will be vie w ed as the c olour from the source. The c olour e xperienced b y the vie w er from ra y tha t bounces of object is based on the in teraction be tw een the ligh t source and the surface ma terial. In c omp. gr aphics w e replace vie w er b y pr ojection plane: The c olour of the ligh t source and of the surface de termines the c olour of one or more pix els in the frame buffer. See here pr ojection plane ha v e a lot of rectangles which c orresponds t o pix els. When ligh t s trik es a surface, some of it is ab sorbed and some of it is re flected. Opaque surf ace: All ligh t on this object is either re flected or ab sorbed. Translucen t surface: Can le t ligh t through. Shin y objects are due to smooth surfaces. In c on tras t, dull objects has rough surfaces. In teractions be tw een ligh t and ma terials classified in to 3 gr oup s: Specular r e flection , also kno wn as r egular r e flection , is the mirror -lik e re flection of w a v es , such as ligh t , from a surface. In this pr ocess, each inciden t ra y is re flected a t the same angle to the surface normal as the inciden t ra y, but on the opposing side of the surf ace normal in the plane f ormed b y inciden t and re flected ra y s. The result is tha t an imag e re flected b y the surface is repr oduced in mirror-lik e ( specular ) f ashion Specular is mirror like reflection with shiny surfaces. 6 .2 ) L ig h t S o u rc e s ( p 2 7 9 ) Ligh t sources emits ligh t only (no r e flection) Can classif y g eneral ligh t source with Illumina tion function: giv es direction of the ligh t source each poin t on ligh t source (this giv e poin t on the ligh t source) giv es in tensity of the ligh t W e model ligh t sources as ha ving 3 full-c olour c omponen ts: red, green and blue. P oin t source In real w orld, it is siz e of ligh t sources tha t c on tribute to softer scenes. Areas fully in shado w , (the umbra ), wher eas others are in partial shado w , or in the penumbr a . Spotligh t: Thus, the in tensity is a function of the angle φ be tw een the direction of the source and a v ector s to a poin t on the surface (as long as this angle is less than θ ; Figure 6.10) Spotligh t ’s ligh t in tensity g e ts the lo w er the futher from the ligh t source. Dis t an t ligh t sources: 6 .3 ) T h e P h o n g r e f le c t io n m o d e l Uses 4 v ectors to c alcula te a c olour for an arbitrar y poin t p on a surf ace ● n: normal a t p ● v: direction from p t o the vie w er ● l: direction from p t o an y poin t of ligh t source ● r: is in the direction tha t a perf ectly re flected ra y from I w ould tak e. Ra y from source a t I re flects of surface and g eos in direction of r. Supports ambien t, diffuse and specular ma terial-ligh t in teractions. E ach ligh t source c an ha v e c omponen ts of each of the 3 ma terial-ligh t in teractions for each primiar y c olour. Thus 3x3 ma trix. The amoun t of ambien t ligh t re flected is giv en b y the ambien t re flection c oe fficien t, R a = k a. Ra s tands for R e flected Ambien t ligh t. k a is ambien t re flection c oe fficien t. Diffuse surfaces c an be modelled ma thema tic ally using Lambert ’s la w . Consider surface in pictur e: Surface is brigh tes t a t noon and dimmes t a t da wn and dusk bec ause, acc ording to Lambert ’s la w , w e see only the v ertic al c omponen t of the inc oming ligh t . To unders tand this c onsider small par allel ligh t source s triking plane in f ollo wing pictur e: As source is lo w ered in the sky the same amoun t of ligh t is spr ead o v er a larg er area, and the surface appear s dimmer. See those 3 lines (represen ts amoun t of ligh t) no w the y then spread o ver a larger area which means dimmer surf ac e. Lambert ’s La w: *Ask wha t is Rd and alpha look on summar y Wha t does Id s tand for and Ld? The highligh ts from specular r e flection ha v e a differen t c olour of the re flected ambien t and diffuse ligh t. e.g. red ball vie w ed under white ligh t has a white highligh t tah t is the re flection of some of the ligh t from the source in direction of vie w er. Specular surf ace is smooth c ompar ed to rough diffuse surface. As surface g e ts smoother, the re flected ligh t is c oncen tra ted in a smaller rang e of angles cen tered about the ang el of a perf ect re flector. Phong model: Amoun t if ligh t the vie w er sees depends on the angle be tw een r, the direction of a perf ect re flector, and v, the direction of the vie w er. E qua tion: Phong ligh ting model p287 6 .4 ) C o m p u t a t io n o f v e c t o r s ( p 2 8 9 ) Normal v ect or s: F or smooth surfaces, the normal v ector to the surface e xis ts a t e v er y poin t and giv es orien ta tion of the surface. Plane c an be described: But c an also be described b y the normal to the plane and a poin t p0: p-p0 is a v ector on the plane. P is an y poin t (x,y ,z) on the plane. Suppose w e ha v e poin ts on the plane: then are par allel to the plane (or on the plane) and w e c an use their cross pr oduct to find the normal: F or cur v ed surfaces: E qua tion of unit spher e (i.e. x=+-1, y=+-1, z=+=-1): Note w e sa y x times x yields x^2, y .y=y^2, so each dimension times each one. So in v ector w e times the v ector b y the v ector since each c omponen t will multiply with the other one. Or in v ector from Normal is de fined b y the gradien t v ector: Angle of r e flection: 6 .5 ) P o ly g o n s h a d in g S h a d in g is t h e p ro c e s s o f a lte r in g t h e c o lo u r o f a s u r fa c e b a s e d o n t h e s u r fa c e ’s a n g le s to lig h t s , it s d is ta n c e fo r m lig h t s , it s a n g le to t h e c a m e ra a n d m a te r ia l p ro p e r t ie s . ● F la t s h a d in g – T h e s h a d in g c a lc u la t io n is c a r r ie d o u t o n ly o n c e fo r e a c h p o ly g o n , a n d e a c h p o in t o n t h e p o ly g o n is a s s ig n e d t h e s a m e s h a d e . F la t s h a d in g w ill s h o w d iffe re n c e s in s h a d in g a m o n g a d ja c e n t p o ly g o n s . W e w ill s e e s t r ip e s , k n o w n a s M a c h b a n d s , a lo n g t h e e d g e s . ● S m o o t h a n d G o u ra u d S h a d in g – T h e s u r fa c e n o r m a l a t t h e v e r t ic e s o f p o ly g o n s a re c a lc u la te d . T h e s e n o r m a ls a re t h e n a v e ra g e d fo r a ll t h e p o ly g o n s t h a t m e e t a t e a c h p o in t . L ig h t in g c o m p u ta t io n s a re t h e n p e r fo r m e d to p ro d u c e c o lo u r in te n s it ie s a t v e r t ic e s . T h e s e c o lo u r v a lu e s a re t h e n in te r p o la te d a lo n g t h e e d g e s o f t h e p o ly g o n s . To c o m p le te t h e s h a d in g , t h e im a g e is f ille d b y lin e s d ra w n a c ro s s t h e im a g e t h a t in te r p o la te b e t w e e n t h e p re v io u s ly c a lc u la te d e d g e in te n s it ie s . Gouraud: Appear ance is smooth, but ma y s till include Mach bands (s tripes along the edg es) In Gour aud shading, each poly gon has one normal v ector per v ertex, but instead of interpolating the v ectors, the color of each v ertex is computed and then interpolated across the surface of the poly gon. Intensit y lev els are calculated at each v ertex and interpolated across the surface ● P h o n g S h a d in g – P h o n g s h a d in g im p ro v e s u p o n G o u ra u d s h a d in g a n d p ro v id e s a b e tte r a p p ro x im a t io n o f t h e s h a d in g o f a s m o o t h s u r fa c e . P h o n g s h a d in g a s s u m e s a s m o o t h ly v a r y in g s u r fa c e n o r m a l v e c to r. T h e P h o n g in te r p o la t io n m e t h o d w o r k s b e tte r t h a n G o u ra u d s h a d in g w h e n a p p lie d to a re f le c t io n m o d e l t h a t h a s s m a ll s p e c u la r h ig h lig h t s s u c h a s t h e P h o n g re f le c t io n m o d e l. Phong: Appear ance is smooth with no Mach bands. Ins tead of in terpola ting v erte x in tensities (c olours), w e in terpola te normals across each poly g on . Gouraud: Gouraud shading is implemen ted either in the applic a tion or in the v erte x shader. Phong: Phong shading is implemen ted in the fragmen t shader. 6 .7 ) S p e c if y in g L ig h t in g P a ra m e te r s ( p 2 9 9 ) F or e v er y ligh t source w e mus t specif y: Colour Loc a tion (f or a poin t source or spotligh t) Or it ’s direction (f or a dis tan t source) W e c an also specif y a ttenua tion of ligh t receiv ed due to its dis tance from the source. F or an ideal source, the a ttenua tion is in v ersely pr oportional the squar e dis tance d, but w e c an g ain more fle xibility b y using the dis tance a ttenua tion model: The dis tanc e-at tenuation model: Con tribution of ambien t ligh t is the same e v er y where. 6 .8 ) Im p le m e n t in g a L ig h t in g M o d e l ( p 3 0 1 ) Ligh t from multiple sour ces is additiv e ( think truck’s 2 fr on t ligh ts added up) F or mos t objects w e only see the fron t faces, so w e are not c oncerned with ho w W ebGL shades the back -facing surfaces: F or e x ample, f or c on v e x objects, such as a spher e or a par allelepiped (Figur e 6.35), the vie w er c an ne v er see a back face, reg ardless of where she is positioned. Ho w e v er, if w e remo v e a side from a cube or slice the spher e, as sho wn in Figure 6.36, a pr operly placed vie w er ma y see a back face; thus, w e mus t shade both the fron t and back faces c orrectly. Ligh t sources are g eo. objects and ha v e g eo. pr operties such as position. Thus trans forma tions c an be applied t o them. Basic rule g o v erning object placemen t is tha t v ertices are c on v erted to e y e c oordina tes b y the model-vie w trans forma tion. Thus, b y c are ful plac emen t of the ligh t-sourc e specific ations relative t o the de finition of other geome tric objects, we c an creat e ligh t sourc es that remain s tationar y while the objects mo ve, ligh t sourc es that mo ve while objects remain s tationar y, and ligh t sourc es that mo ve with the objects. 6 .9 ) S h a d in g o f t h e S p h e r e M o d e l ( p 3 1 0 ) F or tes ting the smoothness of a ligh ting model it is g ood to look a t the spher e model. The smoother the shading , the fe w er poly g ons w e need to model the spher e. 6 .1 0 ) P e r- F ra g m e n t L ig h t in g ( p 3 1 1 ) With a fragmen t shader, w e c an do an independen t ligh ting c alcula tion for each fragmen t. The fragmen t shader needs to g e t the in terpola ted v alues of -the normal v ector, -ligh t source position, and -e y e position fr om the ras teriz er 6 .1 1 ) N o n p h o t r e a lis t ic S h a d in g ( p 3 1 3 ) Programmable shaders mak e it possible not only t o inc orpor a te more realis tic ligh ting models in real time but also to crea te in teres ting nonphot orealis tic e ffects. T w o s u c h e x a m p le s a r e th e u s e o f o n ly a fe w c o lo r s a n d e m p h a s iz in g th e e d g e s in o b je c ts . 6 .1 2 ) G lo b a l Illu m in a t io n ( p 2 8 ) C h a p t e r 7 7 .1 ) B u f fe r s p 3 2 0 WE ha v e already seen 2 buf fers: Color buffer and dep th buffer. All buffers are inheren tly discre te: The y ha v e limited resolution, both spa tially and in dep th. WE de fine 2D buf fer as block of memor y with n x m k -bit elemen ts Framebuffer: is the se t of buffers tha t the graphic s y s tem uses for rendering , including the fron t and back c olor buffers, the dep th buffer, and other buffers. These buffers normally reside on GPU . The k bits c an include -32-bit R GB A c olors -in teg ers repr esen ting dep ths - bits tha t c an be used for mask s WEB GL Framebuffer: n and m ma tch the special r esolution of the displa y. ● The dep th of this framebuffer (the v alue k) c an e x ceed a fe w hundred bits. ● 64 bits f or the fron t and back c olor buffers ● 24 or 32 bits f or the dep th buffer When w e sa y buffer w e mean a specific buf fer of the framebuffer. (W e w ork with one buffer a t a time) ● E ach of the buffers is n x m and is k bits deep, but k c an be differen t for each buffer. ● F or c olor buffer k=24 bits if R GB is used and k=32 if R GB A is used. ● F or dep th buffer its k is de termined b y its dep th pr ecision. Often 32 bits. (or 24 bits) Bitplane is an y of the k n xm planes in a buf fer. So it is one slice of n x m. Basic ally one of these: Pix el re fer to all k of the bits a t a particular spa tial loc a tion. This pix el c an be a b y te, an in teg er or floa ting-poin t number. Applic a tion pr ogrammer will kno w ho w in forma tion is s tored in the framebuffer, bec ause the framebuffer is part of the implemen ta tion, which the pr ogrammer sees as a black bo x. When w e render our g eo. w e access the framebuffer indirectly via the rendering pipeline. WE c an read block s of pix els from a c olor buffer with W ebGL <- but not v er y e fficien t. W e w ork with 3 types of memor y: ● Processor memor y in CPU ● Te x ture memor y a ttached to GPU ● Memor y in GPU 7 .2 ) D ig it a l im a g e s p 3 2 1 E a c h im a g e is in o n e o f m a n y p o s s ib le s ta n d a r d fo r m a ts . S o m e o f th e m o s t p o p u la r fo r m a ts a r e G IF, T IF F, P N G , P D F, a n d J P E G . 7 .3 ) M a p p in g m e t h o d s Own de finition of te x ture mapping: Te x ture mapping is a gr aphic design pr ocess in which a tw o-dimensional (2D) surf ace, c alled a te x ture map , is \"wrapped ar ound\" a three-dimensional ( 3D )object. Thus, the 3-D object acquir es a surface te x ture similar to tha t of the 2-D surf ace . Basic ally taking a 2D imag e and pas ting it on a 3D object. With mapping w e do not build more c omple x models, ins tead build a simple model and add de tail as part of the r endering pr ocess. IN Chap ter 6 when r endering a surface then se ts of fragmen ts (each c orresponds t o a pix el in the framebuffer) ar e g enera ted. Then a shade is assigned to each fragmen t as part of the ras teriz a tion pr ocess. Mapping modifies fr agmen ts during fragmen t pr ocessing (4 t h pr ocess in imag e pr ocessing in graphics pipeline) a fter ras teriz a tion (3 rd pr ocess). T h e m a p p in g a lg o r ith m s c a n b e th o u g h t o f a s e ith e r m o d ify in g th e s h a d in g a lg o r ith m b a s e d o n a tw o - d im e n s io n a l a r r a y , th e m a p , o r m o d ify in g th e s h a d in g b y u s in g th e m a p to a lte r th e s u r fa c e . Te xtur e Mapping Te x tu r e s c a n b e s p e c ifie d u s in g a fix e d p a tte r n , s u c h a s th e - r e g u la r p a tte r n s o fte n u s e d to fill p o ly g o n s ; - b y a p r o c e d u r a l te x tu r e g e n e r a tio n m e th o d ; - o r th r o u g h a d ig itiz e d im a g e Bump Mapping: Dis torts the normal v ectors during the shading pr ocess to mak e the surface appear t o ha v e small v aria tions in shape, such as the bump s on a real orang e. En vir onmen t mapping (or R e flectiv e map s) Allo w us to crea te imag es tha t ha v e the appear ance of re flected ma tarials without ha ving to trace re flected ra y s. 7 .4 ) T w o - D im e n s io n a l Te x t u r e m a p p in g p 3 2 7 ● Te x tures are pa tterns. ● W e map t e x ture to objects tha t w e crea te. ● W ebGL only supports 2D T e x ture mapping. W e s tart with 2D imag es and then the y are brough t in to pr ocessor memor y as arra y s. The elemen ts of these arra y s are c alled te x els (or t e xtur e elemen ts). W e think of this array as c on tinuous rectangular 2D t e x ture pat tern T(s, t). So each pix el (or dot) of the imag e is an elemen t Te xtur es (the 2D imag es) ar e br ough t in pr ocessor memor y as arra y s and elemen ts of these arra y s ar e c alled te x els. A te x ture map associa tes a te x el with each poin t on the g eo. object tha t is itself mapped t o screen c oordina tes for displa y. One w a y to think about te x ture mapping is in t erms of tw o c oncurren t mappings: -the firs t from te x ture c oordina tes to object c oordina tes, and the -sec ond from par ame tric c oordina tes to object c oordina tes, as sho wn in Figure 7.5. A thir d mapping t ak es us from object c oordina tes to screen c oordina tes. Concep tually, the te x ture-mapping pr ocess is simple. A small ar ea of the te x ture pa ttern map s to the area of the g eome tric surface, c orresponding t o a pix el in the final imag e. F ig u r e 7 .6 s h o w s s e v e r a l o f th e d iffic u ltie s . S u p p o s e th a t w e a r e c o m p u tin g a c o lo r fo r th e s q u a r e p ix e l c e n te r e d a t s c r e e n c o o r d in a te s ( x s , y s ) . T h e c e n te r ( x s , y s ) c o r r e s p o n d s to a p o in t ( x , y , z ) in o b je c t s p a c e , b u t, if th e o b je c t is c u r v e d , th e p r o je c tio n o f th e c o r n e r s o f th e p ix e l b a c k w a r d in to o b je c t s p a c e y ie ld s a c u r v e d p r e im a g e o f th e p ix e l. In te r m s o f th e te x tu r e im a g e T ( s , t) , p r o je c tin g th e p ix e l b a c k y ie ld s a p r e im a g e in te x tu r e s p a c e th a t is th e a r e a o f th e te x tu r e th a t id e a lly s h o u ld c o n tr ib u te to th e s h a d in g o f th e p ix e l. F ig u r e 7 .7 illu s tr a te s th e a lia s in g p r o b le m . H e r e , w e h a v e a r e p e a te d te x tu r e a n d a fla t s u r fa c e . T h e b a c k p r o je c tio n o f th e c e n te r o f e a c h p ix e l h a p p e n s to fa ll in b e tw e e n th e d a r k lin e s , a n d th e te x tu r e v a lu e is a lw a y s th e lig h te r c o lo r. 7 .5 ) Te x t u r e m a p p in g in W E B G L p 3 3 3 W ebGL only supports 2D t e x tures. 2 par allel pipelines: The pix el and g eome tric pipelines. Note the pix el pipeline mer g es with the fragmen t pr ocessing a fter ras teriz a tion. This architecture de termines the type of t e x ture mapping tha t is support ed. Te x tu r e c o o r d in a te s a r e h a n d le d m u c h lik e n o r m a ls a n d c o lo r s . T h e y c a n b e a s s o c ia te d w ith v e r tic e s a s a n a d d itio n a l v e r te x a ttr ib u te a n d th e r e q u ir e d te x tu r e v a lu e s c a n b e o b ta in e d b y th e r a s te r iz e r in te r p o la tin g th e te x tu r e c o o r d in a te s a t th e v e r tic e s a c r o s s p o ly g o n s . T h e y c a n a ls o b e g e n e r a te d in o n e o f th e s h a d e r s . Te xtur e objects Te x ture objects allo w the applic a tion pr ogram to de fine objects tha t c onsis t of the te x ture arra y and the v arious te x ture par ame ters tha t c on trol its applic a tion to surfaces. W e c an ha v e man y te x ture objects as long as there is enough memor y in GPU to c on tain them. E ach fragmen t c on tains loc a tion with itself (so w e don’t need to specif y loc a tion of fragmen t. WE need to iden tif y the loc a tion in the te x ture imag e <-This is dif ficult. WE pro vide the loc ation t o the fragmen t shader or c ompute it within the sahder . w e u s e tw o flo a tin g - p o in t te x tu r e c o o r d in a te s , s a n d t, b o th o f w h ic h r a n g e o v e r th e in te r v a l [ 0 .0 , 1 .0 ] a s w e tr a v e r s e th e te x tu r e im a g e . F o r o u r e x a m p le o f a 6 4 × 6 4 tw o - d im e n s io n a l te x tu r e im a g e m y Im a g e , th e v a lu e ( 0 .0 , 0 .0 ) c o r r e s p o n d s to th e te x e l m y Im a g e [ 0 ] [ 0 ] , a n d ( 1 .0 , 1 .0 ) c o r r e s p o n d s to th e te x e l m y Im a g e [ 6 3 ] [ 6 3 ] , T h e o u tp u t te x tu r e c o o r d in a te s fTe x C o o r d a r e in te r p o la te d b y th e r a s te r iz e r a n d a r e in p u t to th e fr a g m e n t s h a d e r. N o te th a t th e v e r te x s h a d e r is o n ly c o n c e r n e d w ith th e te x tu r e c o o r d in a te s a n d h a s n o th in g to d o w ith th e te x tu r e o b je c t w e c r e a te d e a r lie r A sampler is a v ariable tha t puts e v er y thing tog e ther (specif ying te x ture c oordina tes as v erte x c oordina tes, e tc. the whole pr ocess ) which only appear s in a fragmen t shader. Sampler includes. M IP M A P P IN G W e b G L a llo w s u s to c r e a te a s e r ie s o f te x tu r e a r r a y s a t r e d u c e d s iz e s ; it w ill th e n a u to m a tic a lly u s e th e a p p r o p r ia te s iz e te x tu r e in th is p y r a m id o f te x tu r e s , th e o n e fo r w h ic h th e s iz e o f th e te x e l is a p p r o x im a te ly th e s iz e o f a p ix e l. F o r a 6 4 × 6 4 o r ig in a l a r r a y , w e c a n s e t u p 3 2 × 3 2 , 1 6 × 1 6 , 8 × 8 , 4 × 4 , 2 × 2 , a n d 1 × 1 a r r a y s fo r th e c u r r e n t te x tu r e o b je c t b y e x e c u tin g th e fu n c tio n c a ll 7 .6 ) Te x t u r e G e n e ra t io n O n e o f th e m o s t p o w e r fu l u s e s o f te x tu r e m a p p in g is to p r o v id e d e ta il w ith o u t g e n e r a tin g n u m e r o u s g e o m e tr ic o b je c ts . W e c a n a ls o lo o k fo r p r o c e d u r a l m e th o d s fo r d e te r m in in g te x tu r e p a tte r n s . O f p a r tic u la r in te r e s t a r e p a tte r n s th a t w e s e e in n a tu r e , s u c h a s th e te x tu r e s o f s a n d , g r a s s , o r m in e r a ls . T h e s e te x tu r e s s h o w b o th s tr u c tu r e ( r e g u la r p a tte r n s ) a n d c o n s id e r a b le r a n d o m n e s s .M o s t a p p r o a c h e s to a lg o r ith m ic a lly g e n e r a tin g s u c h te x tu r e s s ta r t w ith a r a n d o m - n u m b e r g e n e r a to r a n d p r o c e s s its o u tp u t 7 .7 ) E n v ir o n m e n t M a p s ( R e f le c t iv e m a p p in g ) p 3 0 , p 3 4 9 Im a g e s h in y b a ll in a r o o m lik e in t h e p ic t u r e . W E c a n s e e r e s t o f t h e r o o m o n t h e b a ll. This mapping r equir es global in forma tion, as w e c annot see shade the ball c orrectly without kno wing about the res t of the room. A physically based rendering method, such as a ray tracer , can produce this kind of image, although in practice ray-tracing calculations usually are too time consuming to be practical for real-time applications. The object which it bounces off is the mirror T h e b a s ic id e a is s im p le . C o n s id e r th e m ir r o r in F ig u r e 7 .2 4 , w h ic h w e c a n lo o k a t a s a p o ly g o n w h o s e s u r fa c e is a h ig h ly s p e c u la r m a te r ia l. F r o m th e p o in t o f v ie w o f a r e n d e r e r, th e p o s itio n o f th e v ie w e r a n d th e n o r m a l to th e p o ly g o n a r e k n o w n , s o th a t th e a n g le o f r e fle c tio n is d e te r m in e d a s in C h a p te r 6 . If w e fo llo w a lo n g th is a n g le u n til w e in te r s e c t th e e n v ir o n m e n t, w e o b ta in th e s h a d e th a t is r e fle c te d in th e m ir r o r. O f c o u r s e , th is s h a d e is th e r e s u lt o f a s h a d in g p r o c e s s th a t in v o lv e s th e lig h t s o u r c e s a n d m a te r ia ls in th e s c e n e . Classic appr oach to is to pr oject the en vironmen t in to a spher e: D e s k to p O p e n G L s u p p o r ts a v a r ia tio n o f th is m e th o d c a lle d s p h e r e m a p p in g . T h e m a p p in g o f th e s p h e r e o n to a r e c ta n g le . T h e a p p lic a tio n p r o g r a m s u p p lie s a c ir c u la r im a g e th a t is th e o r th o g r a p h ic p r o je c tio n o f th e s p h e r e o n to w h ic h th e e n v ir o n m e n t h a s b e e n m a p p e d . T h e r e fle c tio n m a p is o n ly c o r r e c t fo r th e v e r te x a t th e o r ig in . In p r in c ip le , e a c h v e r te x s h o u ld h a v e its o w n r e fle c tio n m a p . A c tu a lly , e a c h p o in t o n th e o b je c t s h o u ld h a v e its o w n m a p a n d n o t a n a p p r o x im a te v a lu e c o m p u te d b y in te r p o la tio n . T h e e r r o r s a r e m o s t s ig n ific a n t th e fa r th e r th e o b je c t is fr o m th e o r ig in . N e v e r th e le s s , r e fle c tio n m a p p in g g iv e s v is u a lly a c c e p ta b le r e s u lts in m o s t s itu a tio n s , e s p e c ia lly w h e n th e r e is a n im a tio n a s in film s a n d g a m e s . If w e w an t to c omput e an en vironmen t map using the gr aphics s y s tem, w e pr e fer to use the s tandard pr ojections tha t are support ed b y the graphics s y s tems. This is where we c ompute 6 projections in to a bo x. A t th is p o in t, w e c a n tr e a t th e s ix im a g e s a s a s in g le e n v ir o n m e n t m a p a n d d e r iv e th e te x tu r e s fr o m it, 7 .8 ) R e f le c t io n M a p E x a m p le 7 .9 ) B u m p M a p p in g p 3 1 , 3 5 7 U n lik e te c h n iq u e s s u c h a s e n v ir o n m e n t m a p p in g th a t c a n b e im p le m e n te d w ith o u t p r o g r a m m a b le s h a d e r s , b u m p m a p p in g c a n n o t b e d o n e in r e a l tim e w ith o u t th e m . In p a r tic u la r, b e c a u s e b u m p m a p p in g is d o n e o n a fr a g m e n t- b y - fr a g m e n t b a s is , w e m u s t b e a b le to p r o g r a m th e fr a g m e n t s h a d e r. B e c a u s e th e p e r tu r b a tio n s a r e a p p lie d to th e n o r m a l v e c to r s , th e r e n d e r in g c a lc u la tio n s a r e c o r r e c t fo r th e a lte r e d s u r fa c e , e v e n th o u g h th e m o r e c o m p le x s u r fa c e d e fin e d b y th e p e r tu r b e d n o r m a ls n e e d n e v e r b e c r e a te d . D is p la c e m e n t s u r fa c e is g iv e n b y 7 .1 0 ) B le n d in g te c h n iq u e s p 3 1 , p 3 6 5 Alpha: 0 c omple tely in visible transpar en t le ts all ligh t through , 1 fully visible opacity block s all lig th . T O fix pr oblem of z-buffer c ancelling out objects where translucen t objects are in fron t of opaque objects w e le t z-buffer read-only when rendering translucen t objects. T h e a lp h a c h a n n e l is th e fo u r th c o lo r in R G B A ( o r R G B α ) c o lo r m o d e . L ik e th e o th e r c o lo r s , th e a p p lic a tio n p r o g r a m c a n c o n tr o l th e v a lu e o f A ( o r α ) fo r e a c h p ix e l Assume 3 objects. Fr on t one is transpar en t and other 2 is opaque. If th e fr o n t p o ly g o n is o n ly p a r tia lly o p a q u e ( p a r tia lly tr a n s p a r e n t) , s im ila r to c o lo r e d g la s s , th e c o lo r th e v ie w e r s e e s is a b le n d in g o f th e c o lo r s o f th e fr o n t a n d m id d le p o ly g o n s . In c o m p u te r g r a p h ic s , w e u s u a lly r e n d e r p o ly g o n s o n e a t a tim e in to th e fr a m e b u ffe r. C o n s e q u e n tly , if w e w a n t to u s e b le n d in g , w e n e e d a w a y to a p p ly o p a c ity a s p a r t o f fr a g m e n t p r o c e s s in g . W e c a n u s e th e n o tio n o f s o u r c e a n d d e s tin a tio n p ix e ls . A s a p o ly g o n is p r o c e s s e d , p ix e l- s iz e d fr a g m e n ts a r e c o m p u te d a n d , if th e y a r e v is ib le , a r e a s s ig n e d c o lo r s b a s e d o n th e s h a d in g m o d e l in u s e . U n til n o w , w e h a v e u s e d th e c o lo r o f a fr a g m e n t— a s c o m p u te d b y th e s h a d in g m o d e l a n d b y a n y m a p p in g te c h n iq u e s — to d e te r m in e th e c o lo r o f th e p ix e l in th e fr a m e b u ffe r a t th e lo c a tio n in s c r e e n c o o r d in a te s o f th e fr a g m e n t. If w e r e g a r d th e fr a g m e n t a s th e s o u r c e p ix e l a n d th e fr a m e b u ffe r p ix e l a s th e d e s tin a tio n , w e c a n c o m b in e th e s e v a lu e s in v a r io u s w a y s . U s in g α v a lu e s is o n e w a y o f c o n tr o llin g th e b le n d in g o n a fr a g m e n t- b y - fr a g m e n t b a s is . Source and des tina tion blending fact or s: IF a fragmen t has R GB A v alues of , the c olor w e see will ha v e an R GB of So y ou multiply the v alues with alpha. To enable hidden surface remo v al and mak e z-buffer read-only for translucen t poly g ons y ou g o: A lth o u g h u s in g th e α c h a n n e l g iv e s u s a w a y o f c r e a tin g th e a p p e a r a n c e o f tr a n s lu c e n c y W e ig n o r e r e fr a c tio n o f lig h t th r o u g h tr a n s lu c e n t s u r fa c e s — a n e ffe c t th a t c a n n o t b e h a n d le d e a s ily w ith a p ip e lin e p o ly g o n r e n d e r e r. 7 .1 2 ) F ra m e b u f fe r O b je c t s T h e fr a m e b u ffe r w e h a v e b e e n u s in g s o fa r c o m p r is e s a c o lo r b u ffe r, a d e p th b u ffe r, a n d o th e r b u ffe r s s u c h a s a s te n c il b u ffe r. W e w ould lik e other buffers as w ell tha t c annot be displa y ed and off-screen buffers. These are c alled Framebuffer objects (FBOs). The y are handles en tirely b y the graphics s y s tem. The y e xis t in graphics memor y. W e c r e a te a n d b in d fr a m e b u ffe r o b je c ts m u c h a s w e d id w ith te x tu r e o b je c ts a n d v e r te x a r r a y o b je c ts . A b u ffe r a tta c h m e n t to a n F B O is c a lle d a r e n d e r b u f f e r , a n d e a c h r e n d e r b u ffe r c a n p r o v id e th e n e c e s s a r y s to r a g e fo r th e ty p e o f b u ffe r n e e d e d . 7 .1 3 ) B u f fe r P in g - P o n g in g C h a p te r 8 8 .1 ) B a s ic Im p le m e n t a t io n S t ra te g ie s Black bo x appr oach Start with applic a tion pr ogram and w e end up with an imag e. Inputs ar e v ertices and s ta tes de fined in the pr ogram ( g eo. Objects, a ttributes, c amera specific a tions) and whose output is an arr a y of c olored pix els in the framebuffer. W e m u s t a lw a y s d o tw o th in g s : - W e m u s t p a s s e v e r y g e o m e tr ic o b je c t th r o u g h th e s y s te m , - a n d w e m u s t a s s ig n a c o lo r to e v e r y p ix e l in th e c o lo r b u ffe r th a t is d is p la y e d . S u p p o s e th a t w e th in k o f w h a t g o e s in to th e b la c k b o x in te r m s o f a s in g le p r o g r a m th a t c a r r ie s o u t th e e n tir e p r o c e s s . T h is p r o g r a m ta k e s a s in p u t a s e t o f v e r tic e s s p e c ify in g g e o m e tr ic o b je c ts a n d p r o d u c e s a s o u tp u t p ix e ls in th e fr a m e b u ffe r. B e c a u s e th is p r o g r a m m u s t a s s ig n a v a lu e to e v e r y p ix e l a n d m u s t p r o c e s s e v e r y g e o m e tr ic p r im itiv e ( a n d e v e r y lig h t s o u r c e ) , w e e x p e c t th is p r o g r a m to c o n ta in a t le a s t tw o lo o p s th a t ite r a te o v e r th e s e b a s ic v a r ia b le s . Which v ariable c on trols the outer loop in this pr ogram? There are 2 s tra tegies: ● Imag e-orien ted appr oach: T h e a d v a n ta g e s o f th is a p p r o a c h a r e th a t w e n e e d o n ly lim ite d d is p la y m e m o r y a t a n y tim e a n d th a t w e c a n h o p e to g e n e r a te p ix e ls a t th e r a te a n d in th e o r d e r r e q u ir e d to r e fr e s h th e d is p la y . M A IN D IS A D V A N T A G E : w e d o n o t k n o w w h ic h p r im itiv e s a ffe c t w h ic h p ix e ls . ● Object-orien ted appr oach: Outer loop it era tes o v er the objects. In th e p a s t, th e m a jo r lim ita tio n s o f th e o b je c t- o r ie n te d a p p r o a c h w e r e th e la r g e a m o u n t o f m e m o r y r e q u ir e d a n d th e h ig h c o s t o f p r o c e s s in g e a c h o b je c t in d e p e n d e n tly . A n y g e o m e tr ic p r im itiv e th a t e m e r g e s fr o m th e g e o m e tr ic p r o c e s s in g c a n p o te n tia lly a ffe c t a n y s e t o f p ix e ls in th e fr a m e b u ffe r ; c o m p le x s h a d in g e ffe c ts th a t in v o lv e m u ltip le g e o m e tr ic o b je c ts , s u c h a s r e fle c tio n s , c a n n o t b e h a n d le d e x c e p t b y a p p r o x im a te m e th o d s 8 .2 ) F o u r M a jo r Ta s k s p 3 3 , 4 0 0 4 major t ask s tha t an y graphics s y s tem mus t perf orm to render a g eo. Enitity: ● Modeling: W e c a n lo o k a t th e m o d e le r a s a b la c k b o x th a t p r o d u c e s g e o m e tr ic o b je c ts a n d is u s u a lly a u s e r p r o g r a m . A u s e r c a n g e n e r a te o b je c ts a n d s o m e o f th e s e o b je c ts m ig h t n o t a p p e a r in th e fin a l v ie w . S o m e tim e s th e m o d e lle r c a n a tte m p t to d is c a r d o f th e s e o b je c ts to e a s e b u r d e n o n r e s t o f th e s y s te m . T h u s th e m o d e lle r m a y d o s o m e o f th e s a m e jo b s a s th e r e s t o f th e s y s te m . ● Geome tr y pr ocessing: W ork s with v ertices 4 pr ocesses: Projection Primitiv e assembly Clipping Shading U s u a lly , th e fir s t s te p in g e o m e tr y p r o c e s s in g is to c h a n g e r e p r e s e n ta tio n s fr o m o b je c t c o o r d in a te s to c a m e r a o r e y e c o o r d in a te s u s in g th e m o d e l- v ie w tr a n s fo r m a tio n . P r im itiv e s th a t lie p a r tia lly in th e v ie w in g v o lu m e c a n g e n e r a te n e w p r im itiv e s w ith n e w v e r tic e s fo r w h ic h w e m u s t c a r r y o u t s h a d in g c a lc u la tio n s . B e fo r e c lip p in g c a n ta k e p la c e , v e r tic e s m u s t b e g r o u p e d in to o b je c ts , a p r o c e s s k n o w n a s p r im it iv e a s s e m b ly. If lig h tin g is e n a b le d , v e r te x c o lo r s a r e c o m p u te d u s in g a lig h tin g m o d e l th a t c a n b e im p le m e n te d in th e a p p lic a tio n o r in th e v e r te x s h a d e r. P e r s p e c tiv e d iv is io n c o n v e r ts v e r tic e s fr o m 4 D to 3 D r e p r e s e n ta tio n in n o r m a liz e d c o o r d in a te s . ● Ras teriz a tion : Starts with v ertices in normaliz ed c oordina tes (3D c oordina tes) and outputs fr agmen ts whose loc a tions are in units of the displa y – windo w c oordina tes . S c re e n c o o rd in a te s re fe r to t h e t w o - d im e n s io n a l s y s te m t h a t is t h e s a m e a s w in d o w c o o rd in a te s b u t la c k s t h e d e p t h c o o rd in a te . T h e r a s te r iz e r s ta r ts w ith v e r tic e s in n o r m a liz e d d e v ic e c o o r d in a te s b u t o u tp u ts fr a g m e n ts w h o s e lo c a tio n s a r e in u n its o f th e d is p la y — w in d o w c o o r d in a t e s . T h e s e z v a lu e s h a v e b e e n s c a le d n o n lin e a r ly b y p e r s p e c tiv e n o r m a liz a tio n . H o w e v e r, th e y r e ta in th e ir o r ig in a l d e p th o r d e r, s o th e y c a n b e u s e d fo r h id d e n - s u r fa c e r e m o v a l. S c r e e n c o o r d in a te s r e fe r to th e 2 D s y s te m s y s te m th a t is th e s a m e a s w in d o w c o o r d in a te s b u t la c k s d e p th c o o r d in a te . ● Fragmen t Pr ocessing In th e s im p le s t s itu a tio n s , e a c h fr a g m e n t is a s s ig n e d a c o lo r b y th e r a s te r iz e r, a n d th is c o lo r is p la c e d in th e fr a m e b u ffe r a t th e lo c a tio n s c o r r e s p o n d in g to th e fr a g m e n t’s lo c a tio n . A t th is p o in t, in te r p o la tio n o f p e r - v e r te x c o lo r s a n d te x tu r e c o o r d in a te s ta k e s p la c e , a n d th e te x tu r e p a r a m e te r s d e te r m in e h o w to c o m b in e te x tu r e c o lo r s a n d fr a g m e n t c o lo r s to d e te r m in e fin a l c o lo r s in th e c o lo r b u ffe r. H id d e n s u r fa c e r e m o v a l is c a r r ie d o u t o n a fr a g m e n t- b y - fr a g m e n t b a s is . 8 .3 ) C lip p in g p 3 4 , 4 0 3 Clipping is done be fore the per spectiv e division tha t tak es v ertices from 4D r epr esen ta tions to normaliz ed de vice c oordina tes in 3D . All portions of all primitiv es lie within the cube: w c omponen t not equal t o 1.This c oor dina te s y s tem is c alled normaliz ed de vice c oor dina tes , b e c a u s e it d e p e n d s o n n e ith e r th e o r ig in a l a p p lic a tio n u n its n o r th e p a r tic u la r s o f th e d is p la y d e v ic e W ebGL pipeline does clipping on three-dimensional objects 8 .4 ) L in e - S e g m e n t s C lip p in g Cohen-Sutherland Clipping: Ex tends clipping r ectangle to in finity Break s in to 9 r egions and assigns 4-bit number c alled outc ode ( ) to each region Assume poin t (x,y) Then And And b2 = 1 if x > Xma x, 0 other wise b3 = = 1 if x < Xmin, 0 other wise O1 and o2 ar e endpoin ts of the line segmen ts which w e repr esen t with outc odes T h e n o n z e ro o u tc o d e in d ic a te s w h ic h e d g e o r e d g e s o f t h e w in d o w a re c ro s s e d b y t h e s e g m e n t . The 4 c ases: Both endpoin ts are inside clipping windo w . AB One endpoin ts is inside and other is outside. CD Both endpoin ts are outside. And none of the line cuts the vie wing v olume EF. o1 and o2 not equal t o 0 Both endpoin ts are outside but line be tw een them cuts vie wing v olume Liang-Bar sky Clipping: Line segmen t de fined b y 2 endpoin ts p1 and p2. P arame tric e xpr ess this line in ma trix form: Or 2 sc alar eques tions: As 𝛼 v aries w e mo v e from 1 poin t to other poin t. 4 𝛼 poin ts on the line IF IT IS NO T PARRALLEL to side of clipping windo w . WE order these v alues and de termine which c orresponds t o in tersections (if an y) tha t w e need for clipping. IN a: segmen t 2 n d e x ample the or der is differen t: Note these: Thus ordering is wrong and thus w e reject it.E ffic ie n t im p le m e n ta tio n o f th is s tr a te g y r e q u ir e s th a t w e a v o id c o m p u tin g in te r s e c tio n s u n til th e y a r e n e e d e d .M a n y lin e s c a n b e r e je c te d b e fo r e a ll fo u r in te r s e c tio n s a r e k n o w n . W e a ls o w a n t to a v o id flo a tin g - p o in t d iv is io n s w h e r e p o s s ib le Adv an tag e of this is tha t no recursion is requir ed (i.e. multiple short enings of line segmen ts and rela ted re-e x ecutions of the clipping alg orithm,). 8 .5 ) P o ly g o n C lip p in g p 4 0 8 O th e r p a r ts o f a n im p le m e n ta tio n , s u c h a s s h a d o w g e n e r a tio n a n d h id d e n - s u r fa c e r e m o v a l, c a n r e q u ir e c lip p in g o f p o ly g o n s a g a in s t o th e r p o ly g o n s . W e c a n g e n e r a te p o ly g o n - c lip p in g a lg o r ith m s d ir e c tly fr o m lin e - c lip p in g a lg o r ith m s b y c lip p in g th e e d g e s o f th e p o ly g o n s u c c e s s iv e ly 8 .7 ) C lip p in g in T h r e e d im e n s io n s p 4 1 3 In th r e e d im e n s io n s , w e c lip a g a in s t a b o u n d e d v o lu m e r a th e r th a n a g a in s t a b o u n d e d r e g io n in th e p la n e . T h e s im p le s t e x te n s io n o f tw o - d im e n s io n a l c lip p in g to th r e e d im e n s io n s is fo r th e r ig h t p a r a lle le p ip e d c lip p in g r e g io n . O u r th r e e c lip p in g a lg o r ith m s ( C o h e n - S u th e r la n d , L ia n g - B a r s k y , S u th e r la n d - H o d g e m a n ) a n d th e u s e o f e x te n ts c a n b e e x te n d e d to th r e e d im e n s io n s . F o r th e C o h e n - S u th e r la n d a lg o r ith m , w e r e p la c e th e 4 - b it o u tc o d e w ith a 6 - b it o u tc o d e . T h e a d d itio n a l 2 b its a r e s e t if th e p o in t lie s e ith e r in fr o n t o f o r b e h in d th e c lip p in g v o lu m e . F o r th e L ia n g - B a r s k y a lg o r ith m , w e a d d th e e q u a tio n to o b ta in a th r e e - d im e n s io n a l p a r a m e tr ic r e p r e s e n ta tio n o f th e lin e s e g m e n t. W e h a v e to c o n s id e r s ix in te r s e c tio n s w ith th e s u r fa c e s th a t fo r m th e c lip p in g v o lu m e , b u t w e c a n u s e th e s a m e lo g ic a s w e d id in th e tw o - d im e n s io n a l c a s e . P ip e lin e c lip p e r s a d d tw o m o d u le s to c lip a g a in s t th e fr o n t a n d b a c k o f th e c lip p in g v o lu m e . 8 .8 ) R a s te r iz a t io n p 3 6 , 4 1 6 F o r m a tio n o f fr a g m e n ts : r a s te r iz a tio n o f p r im itiv e s Both loc a tion of fragmen t in screen c oordina tes and c olor a ttribute is in c olor buffer. Color buffer is an n x m arra y of pix els. Can se t pix els using: T h e a r g u m e n t v a lu e c a n b e e ith e r a n in d e x , in c o lo r - in d e x m o d e , o r a p o in te r to a n R G B A c o lo r. O n th e o th e r h a n d , s c r e e n c o o r d in a te s , w h ic h r a n g e o v e r th e s a m e v a lu e s a s d o ix a n d iy , a r e r e a l n u m b e r s . F o r e x a m p le , w e c a n c o m p u te a fr a g m e n t lo c a tio n s u c h a s ( 6 3 .4 , 1 5 7 .9 ) in s c r e e n c o o r d in a te s b u t m u s t r e a liz e th a t th e n e a r e s t p ix e l is c e n te r e d e ith e r a t ( 6 3 , 1 5 8 ) o r a t ( 6 3 .5 , 1 5 7 .5 ) , P ix e ls h a v e a ttr ib u te s th a t a r e c o lo r s in th e c o lo r b u ffe r. In W e b G L , th e c e n te r s o f p ix e ls a r e lo c a te d a t v a lu e s h a lfw a y b e tw e e n in te g e r s . The simples t sc an c on v ersion alg orithm for line segmen ts has bec ome kno wn as the DD A alg orithm : B e c a u s e a lin e s a tis fie s th e d iffe r e n tia l e q u a tio n d y / d x = m , w h e r e m is th e s lo p e , g e n e r a tin g a lin e s e g m e n t is e q u iv a le n t to s o lv in g a s im p le d iffe r e n tia l e q u a tio n n u m e r ic a lly . F or the DD A alg orithm: T h is a lg o r it h m is b a s e d o n w r it in g a p ix e l fo r e a c h v a lu e o f i x in w r i t e _ p i x e l a s 𝑥 g o e s f ro m 𝑥 1 to 𝑥 2 . S o t h is m e a n s fo r e a c h x v a lu e w e w r it e a y v a lu e g e n e r a t e d b y t h e a lg o r it h m . W e incremen t x b y 1 each time and thus incr ease y b y m. Going from poin t x1 t o x2. E ach x is an in teg er, but each y is not bec asuse w e multiply it b y m (which is floa ting poin t). WE msut r ound y to closes t in t. This alg orithm c an’t handle m > 1 as seen b y follo wing imag e: To solv e this w e s w ap r oles of x and y: 8 .9 ) B r e s e n h a m ’s A lg o r it h m p 3 6 , 4 1 8 DD A alg orithm is not e fficien t since it requir es floa ting poin t addition for each pix el g enera ted. THUS w e use Br esenham’s alg orithm which requir es only addition and sign tes t. B r e s e n h a m d e r iv e d a lin e r a s te r iz a tio n a lg o r ith m th a t, r e m a r k a b ly , a v o id s a ll flo a tin g - p o in t c a lc u la tio n s . This slope c ondition is crucial for the alg orithm. Suppose w e ha v e placed pix el a t Then w e mo v e toNo w w e c an chose pix el either a t or . No w w e c an mak e a decision v ariable d = a – b w h e r e a a n d b a r e th e d is ta n c e s b e tw e e n th e lin e a n d th e u p p e r a n d lo w e r c a n d id a te p ix e ls . IF d is positiv e line passes closer t o to lo w er pix el, so w e chosose the pix el. A lth o u g h w e c o u ld c o m p u te d b y c o m p u tin g y = m x + b , w e h e s ita te to d o s o b e c a u s e m is a flo a tin g - p o in t n u m b e r. S o b y n o t u s in g m w e d o n ’t u s e flo a tin g p o in t n u m b e r s . W e o b ta in th e c o m p u ta tio n a l a d v a n ta g e s o f B r e s e n h a m ’s a lg o r ith m th r o u g h tw o fu r th e r s te p : F ir s t, w e r e p la c e flo a tin g - p o in t o p e r a tio n s w ith fix e d - p o in t o p e r a tio n s . S e c o n d , w e a p p ly th e a lg o r ith m in c r e m e n ta lly . Start b y replacing d with ne w decision v ariable: 8 .1 0 P o ly g o n R a s te r iz a t io n p 3 6 , 4 2 0 The choice of which alg orithm to use to ras teriz e (t o fill in a poly g on) depends on the implemen ta tion architecture. Alg orithms: ● Inside Outside Tes ting F o r fla t n o n s im p le p o ly g o n s , w e m u s t d e c id e h o w to d e te r m in e w h e th e r a g iv e n p o in t is in s id e o r o u ts id e o f th e p o ly g o n . The crossing (odd-e v en) t es t: O d d – e v e n te s tin g is e a s y to im p le m e n t a n d in te g r a te s w e ll w ith th e s ta n d a r d r e n d e r in g a lg o r ith m s The winding tes t Tessella tion B e c a u s e W e b G L r e n d e r s o n ly tr ia n g le s th a t a r e fla t a n d c o n v e x , w e s till h a v e th e p r o b le m o f w h a t to d o w ith m o r e g e n e r a l p o ly g o n s . To s o lv e th is is to p r o v id e s o ftw a r e th a t c a n te s s e lla te a g iv e n p o ly g o n in to fla t c o n v e x p o ly g o n s , u s u a lly tr ia n g le s . Tessella tion also c alled triangula tion. Problem Sollution: Fill and sort: Another appr oach to ras teriz a tion in where w e p o ly g o n s s ta r ts w ith th e id e a o f a p o ly g o n p r o c e s s o r : a b la c k b o x w h o s e in p u ts a r e th e v e r tic e s fo r a s e t o f tw o - d im e n s io n a l p o ly g o n s a n d w h o s e o u tp u t is a fr a m e b u ffe r w ith th e c o r r e c t p ix e ls s e t. T h e b a s ic r u le fo r fillin g a p o ly g o n is a s fo llo w s : I f a p o in t is in s id e th e p o ly g o n , c o lo r it w ith th e in s id e ( fill) c o lo r. 3 types: Flood Fill: Also c alled the flood fill alg orithm. 8 .1 1 ) H id d e n S u r fa c e R e m o v a l p 3 7 , 4 2 4 A lth o u g h e v e r y fr a g m e n t g e n e r a te d b y r a s te r iz a tio n c o r r e s p o n d s to a lo c a tio n in a c o lo r b u ffe r, w e d o n o t w a n t to d is p la y th e fr a g m e n t b y c o lo r in g th e c o r r e s p o n d in g p ix e l if th e fr a g m e n t is fr o m a n o b je c t b e h in d a n o th e r o p a q u e o b je c t. You g e t -Object Space -Imag e space appr oaches Here there are 4 possibilit es: Ob scures means to hide the other object. Object space alg orithm: W e p ic k o n e o f th e k p o ly g o n s a n d c o m p a r e it p a ir w is e w ith th e r e m a in in g k − 1 p o ly g o n s . A fte r th is p r o c e d u r e , w e k n o w w h ic h p a r t ( if a n y ) o f th is p o ly g o n is v is ib le , a n d w e r e n d e r th e v is ib le p a r t. W e a r e n o w d o n e w ith th is p o ly g o n , s o w e r e p e a t th e p r o c e s s w ith a n y o f th e o th e r k − 1 p o ly g o n s . E a c h s te p in v o lv e s c o m p a r in g o n e p o ly g o n , p a ir w is e , w ith th e o th e r r e m a in in g p o ly g o n s u n til w e h a v e o n ly tw o p o ly g o n s r e m a in in g , a n d w e c o m p a r e th e s e to e a c h o th e r.W e c a n e a s ily d e te r m in e th a t th e c o m p le x ity o f th is c a lc u la tio n is O ( k 2 ) . W e s h o u ld s u s p e c t th a t th e o b je c t- s p a c e a p p r o a c h w o r k s b e s t fo r s c e n e s th a t c o n ta in r e la tiv e ly fe w p o ly g o n s Imag e-space appr oach fo llo w s o u r v ie w in g a n d r a y - c a s tin g m o d e l C o n s id e r a r a y th a t le a v e s th e c e n te r o f p r o je c tio n a n d p a s s e s th r o u g h a p ix e l.W e c a n in te r s e c t th is r a y w ith e a c h o f th e p la n e s d e te r m in e d b y o u r k p o ly g o n s , d e te r m in e fo r w h ic h p la n e s th e r a y p a s s e s th r o u g h a p o ly g o n , a n d fin a lly , fo r th o s e r a y s , fin d th e in te r s e c tio n c lo s e s t to th e c e n te r o f p r o je c tio n . W e c o lo r th is p ix e l w ith th e s h a d e o f th e p o ly g o n a t th e p o in t o f in te r s e c tio n . O u r fu n d a m e n ta l o p e r a tio n is th e in te r s e c tio n o f r a y s w ith p o ly g o n s . F o r a n n × m d is p la y , w e h a v e to c a r r y o u t th is o p e r a tio n n m k tim e s , g iv in g O ( k ) c o m p le x ity . In p r a c tic e , im a g e - s p a c e a lg o r ith m s p e r fo r m m u c h b e tte r. H o w e v e r, b e c a u s e im a g e - s p a c e a p p r o a c h e s w o r k a t th e fr a g m e n t o r p ix e l le v e l, th e ir a c c u r a c y is lim ite d b y th e r e s o lu tio n o f th e fr a m e b u ffe r. Sc an-line Alg orithm p426 T h e a ttr a c tio n o f a s c a n lin e a lg o r it h m is th a t s u c h a m e th o d h a s th e p o te n tia l to g e n e r a te p ix e ls a s th e y a r e d is p la y e d . C o n s id e r th e p o ly g o n in F ig u r e 8 .4 3 , w ith o n e s c a n lin e s h o w n . If w e u s e o u r o d d – e v e n r u le fo r d e fin in g th e in s id e o f th e p o ly g o n , w e c a n s e e th r e e g r o u p s o f p ix e ls , o r s p a n s , o n th is s c a n lin e th a t a r e in s id e th e p o ly g o n Back -F ace R emo v al p427 W e c an choose to only render fron t-facing poly g ons. This reducs wrok for hidden surface remo v al. It is c alling culling. P oly g on is facing for w ar d if: W e s e e th e fr o n t o f a p o ly g o n if th e n o r m a l, w h ic h c o m e s o u t o f th e fr o n t fa c e , is p o in te d to w a r d th e v ie w e r. If θ is th e a n g le b e tw e e n th e n o r m a l a n d th e v ie w e r, th e n th e p o ly g o n is fa c in g fo r w a r d if a n d o n ly if. or W e c an us dot pr oduct: The Z -Buffer alg orithm: T h e z - b u f f e r a lg o r it h m is th e m o s t w id e ly u s e d h id d e n - s u r fa c e - r e m o v a l a lg o r ith m . It is im a g e - s p a c a lg o r ith m . A lth o u g h th e a lg o r ith m w o r k s in im a g e s p a c e , it lo o p s o v e r th e p o ly g o n s r a th e r th a n o v e r p ix e ls a n d c a n b e r e g a r d e d a s p a r t o f th e s c a n c o n v e r s io n p r o c e s s . Dep th Sort and P ain ter ’s alg orithm p432 D e p t h s o r t is a d ir e c t im p le m e n ta tio n o f th e o b je c t- s p a c e a p p r o a c h to h id d e n - s u r fa c e r e m o v a l. b ) s h o w s h o w it a p p e a r s to th e v ie w e r a n d a ) is a c tu a l o b je c ts . D e p th s o r t is a v a r ia n t o f a n e v e n s im p le r a lg o r ith m k n o w n a s th e p a in t e r ’s a lg o r it h m . O r w e c o u ld u s e a n a p p r o a c h a n a lo g o u s to th e w a y a p a in te r m ig h t r e n d e r th e s c e n e . S h e p r o b a b ly w o u ld p a in t th e r e a r p o ly g o n in its e n tir e ty a n d th e n th e fr o n t p o ly g o n , p a in tin g o v e r th a t p a r t o f th e r e a r p o ly g o n n o t v is ib le to th e v ie w e r in th e p r o c e s s . So in pain ters alg orithm 1 s t the rear poly g on is pain ted and then the other one o v er. B o th p o ly g o n s w o u ld b e r e n d e r e d c o m p le te ly , w ith th e h id d e n - s u r fa c e r e m o v a l b e in g d o n e a s a c o n s e q u e n c e o f th e b a c k - t o - f r o n t r e n d e r in g o f th e p o ly g o n s . T h e n e x t s te p o f d e p th s o r t is to o r d e r a ll th e p o ly g o n s b y th e ir m a x im u m z d is ta n c e fr o m th e v ie w e r. T h is s te p g iv e s th e a lg o r ith m th e n a m e d e p th s o r t. 2 p r o b le m s : 8 .1 2 ) A n t ia lia s in g p 3 8 , 4 3 5 T h is ty p e o f e r r o r a r is e s w h e n e v e r w e a tte m p t to g o fr o m th e c o n tin u o u s r e p r e s e n ta tio n o f a n o b je c t, w h ic h h a s in fin ite r e s o lu tio n , to a s a m p le d a p p r o x im a tio n , w h ic h h a s lim ite d r e s o lu tio n . T h e n a m e a lia s in g h a s b e e n g iv e n to th is e ffe c t b e c a u s e o f th e tie w ith a lia s in g in d ig ita l s ig n a l p r o c e s s in g . W e c a n th in k o f a n id e a liz e d lin e s e g m e n t in th e fr a m e b u ffe r a s b e in g o n e p ix e l w id e , a s s h o w n in F ig u r e 8 .5 9 . O f c o u r s e , w e c a n n o t d r a w th is lin e b e c a u s e it d o e s n o t c o n s is t o f o u r s q u a r e p ix e ls . So w e mus t only select the pix els closes t to the line to form the line. If, in s te a d , w e s h a d e e a c h p ix e l b y th e p e r c e n ta g e o f th e id e a l lin e th a t c r o s s e s it, w e g e t th e s m o o th e r - a p p e a r in g im a g e s h o w n in F ig u r e 8 .6 0 ( b ) . T h is te c h n iq u e is k n o w n a s antialiasing by area averaging A r e la te d p r o b le m a r is e s b e c a u s e o f th e s im p le w a y th a t w e a r e u s in g th e z b u ffe r a lg o r ith m . A s w e h a v e s p e c ifie d th a t a lg o r ith m , th e c o lo r o f a g iv e n p ix e l is d e te r m in e d b y th e s h a d e o f a s in g le p r im itiv e . C o n s id e r th e p ix e l s h a r e d b y th e th r e e p o ly g o n s s h o w n in F ig u r e 8 .6 1 W e c o u ld o b ta in a m u c h m o r e a c c u r a te im a g e if w e c o u ld a s s ig n a c o lo r b a s e d o n a n a r e a - w e ig h te d a v e r a g e o f th e c o lo r s o f th e th r e e tr ia n g le s . These abo v e men tioned alg orithms are c alled spa tial domain aliasing. W h e n w e g e n e r a te s e q u e n c e s o f im a g e s , s u c h a s fo r a n im a tio n s , w e a ls o m u s t b e c o n c e r n e d w ith t im e d o m a in a lia s in g . 8 .1 3 ) D is p la y C o n s id e ra t io n s Color s y s tem T h u s , a g iv e n c o lo r is a p o in t in a c o lo r c u b e , a s in F ig u r e 8 .6 3 , a n d c a n b e w r itte n s y m b o lic a lly a s T h e h u e is th e n a m e w e g iv e to a c o lo r : r e d , y e llo w , g o ld . T h e lig h t n e s s is h o w b r ig h t th e c o lo r a p p e a r s . S a t u r a t io n is th e c o lo r a ttr ib u te th a t d is tin g u is h e s a p u r e s h a d e o f a c o lo r fr o m a s h a d e o f th e s a m e h u e th a t h a s b e e n m ix e d w ith w h ite , fo r m in g a p a s te l s h a d e R G B c o lo r s a n d R G B A c o lo r s c a n b e m a n ip u la te d a s a n y o th e r v e c to r ty p e . In p a r tic u la r, w e c a n a lte r th e ir c o m p o n e n ts b y m u ltip ly in g b y a m a tr ix w e c a ll th e c o lo r m a t r ix th is c o n v e r ts a c o lo r ( r,g ,b ,a ) to a n e w c o lo r","libVersion":"0.2.3","langs":""}