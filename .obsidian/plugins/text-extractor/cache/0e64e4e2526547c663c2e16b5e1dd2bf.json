{"path":"Subjects/COS3751 - Techniques of Artificial Intelligence/Telegram Notes/Past Exams/COS3751_S1-2018_FI.pdf","text":"University of South Africa School of Computing COS3751: Techniques of Artiﬁcial Intelligence FI Concession for S1/2018 Date: 30 August 2018 Time: 9:00 to 13:00 Instructions: 1. This FI concession assessment opportunity is in the form of a take-home exam. 2. Please prepare your answers using a word processor (e.g. MS Word) and submit that. If you can convert it to PDF before submitting it, that would help us. Don’t worry if you are unable to do this – we can convert it ourselves for the purpose of marking. 3. Make sure that your student number is indicated clearly in the document that you submit. 4. Read the questions carefully and make sure you answer them fully. 5. Although this should not be necessary, if you use books, articles and/or internet sources in your preparation of your answers, you must acknowledge them fully. In other words, you must cite where you used them in your answers, and you must provide a list of references at the end of your document. 6. You may make use of the COS3751 study material as presented in this module without acknowledgement. [TURN PAGE] 2 COS3751-FI Concession August 2018 Question 1 State Spaces [16] Four soccer teams have to take part in a round-robin tournament. The problem is to determine a schedule of matches so that each team plays each other team once, in the minimum number of rounds. Matches can take place in parallel. There are many ways to solve this problem, one of which is to specify it as a state space and search for the goal state. Say we number the teams 1, 2, 3 and 4. For each team, we can keep track of which other teams it has played by means of a set. So for team 1, the set {2, 4} means it has played against teams 2 and 4 so far. The entire state of which teams have played which other teams, can then be represented by an ordered 4-tuple, where each element is a set of the teams that a team has played. The initial state is therefore SI = ({}, {}, {}, {}) because initially, team 1 has not played any other teams, team 2 hasn’t played any other teams, etc. (a) What is the goal state of the state space? (2) (b) What are the successor states of the initial state? (4) (c) Deﬁne an action called Schedule which can be applied to a state to get to a successor state. Explain what an applicable action means for your Schedule action. (4) (d) What are the applicable actions to the state S1,1 = ({2}, {1}, {4}, {3})? (2) (e) Specify the transition model for the applicable actions you speciﬁed for state S1,1 above.(4) Question 2 Searching [20] (a) In a particular tree search problem, the depth of the solution is expected to be at most 7 levels deep (from the root node). It is also known that the branching factor for the particular problem is at most 6. Compare the performance of breadth, and depth ﬁrst searches with respect to storage required during the search (in the worst case). Justify your answer by showing the space complexity calculations for each. Clearly state which one is the better choice. (5) (b) The graph search version of A ∗ requires a speciﬁc property for the heuristic h(n). i. What is this property called? Also provide the basic condition on h(n) in order to have this property. (3) ii. Clearly explain why this property of h(n) results in A∗ being an optimal search. (3) (c) Consider the following grid map: A B C D E F G H I J K L M [TURN PAGE] 3 COS3751-FI Concession August 2018 Assume that loops are detected (the algorithm has a closed list) and that nodes are added to the frontier in the following order: Up, Right, Down, Left. For example if node J is expanded: there is no node Up from J so nothing is added to the frontier for Up, K is Right from J so it is added to the frontier, H is Down from J so it is added to the frontier, there is no node Left from J, so nothing is added the frontier. Assuming that the start node is F , and the goal node is M , trace the pushing and popping of nodes from the stack as each node is expanded in a Depth First Search. Give the state of the frontier each time a node is expanded. (9) Question 3 Adversarial Search [30] (a) Why are Alpha/Beta pruning searches needed? (2) (b) Explain an Alpha/Beta search. Pay particular attention to the pruning mechanism, as well as the way in which this pruning mechanism is implemented in the algorithm. (8) (c) Consider the game tree in Figure 1. (The static utility values for the leaf nodes are provided below each leaf node.) A B D J 6 E K 22 L 8 F M 24 C G N 12 I P 9 Q 9 R 3 MIN MAX MIN MAX Figure 1: Adversarial Search Using the provided game tree, explain how the alpha/beta search proceeds from the start (root) node. Your answer must proceed in a step-by-step fashion showing the α/β values for each node as the search progresses (i.e. the α/β values as they propagate down the tree to child nodes), as well as which values are returned to the parent nodes. Also clearly indicate the tests for α/β cuts. The search should progress in a left to right fashion. (20) Question 4 Constraint Satisfaction Problems [30] (a) Differentiate between node-, arc-, and k-consistency. (6) (b) Explain why achieving arc consistency is beneﬁcial. Provide an example to justify your answer. (2) (c) Consider the following cryptarithmetic puzzle: S T A R + W A R S S P A C E Re-write the puzzle in terms of a Constraint Satisfaction Problem (CSP) by deﬁning the following. i. The variables for the puzzle. (5) ii. The domains for the puzzle. (3) [TURN PAGE] 4 COS3751-FI Concession August 2018 iii. The constraints for this puzzle. (4) iv. Provide the solution to this puzzle, show all the steps you took to arrive at the answer. Also show which heuristic you employed, and your backtracking strategy (if used). (10) Question 5 First-Order Logic and Resolution Refutation [20] (a) Discuss the concept of logical entailment. Provide an example to illustrate. (4) (b) Consider the following English statements: 1. If some poor people are thieves, then all rich people are miserly. 2. If there is a rich person, then all poor people are thieves. 3. Oliver is poor. 4. Scrooge is rich. i. Convert the statements to First-Order Logic (FOL). The ﬁrst statement has been pro- vided already; convert the rest. Remember to standardise your variables. (4) 1. ∃x(poor(x) ∧ thief (x)) ⇒ ∀y(rich(y) ⇒ miserly(y)) ii. Convert all of the FOL statements above to Conjunctive Normal Form (CNF) (including the statement that was provided). (4) iii. Use resolution refutation to prove that there is a miserly person, using the statements above as assumptions. (8) Question 6 Machine Learning [24] Consider the following table which provides examples of weather conditions used to determine if an inexperienced pilot should ﬂy on a particular day. Nr Outlook Temperature Humidity Windy Fly? 1 Sunny Hot High No Yes 2 Sunny Hot High Yes No 3 Overcast Hot High No Yes 4 Rain Mild High No Yes 5 Rain Cool Normal No Yes 6 Rain Cool Normal Yes No 7 Overcast Cool Normal Yes No 8 Sunny Mild High No Yes 9 Sunny Cool Normal No Yes 10 Rain Mild Normal No Yes 11 Sunny Mild Normal Yes Yes 12 Overcast Mild High Yes Yes 13 Overcast Hot Normal No Yes 14 Sunny Mild High Yes No (a) Calculate the remainders for each of the four attributes in this table. (8) (b) What is the entropy value for Fly? (1) (c) Calculate the information gain for each of the four attributes. (4) (d) What attribute will be at the root of the decision tree (and why)? What is this attribute’s entropy for its various values? (3) [TURN PAGE] 5 COS3751-FI Concession August 2018 (e) What attributes will be in the nodes directly below the root node? Show how you obtained this answer. (8) Show how you obtained the answers to each of these questions. You can use a calculator, or the logarithm table on page 6, for your entropy value calculations. Total: 140 [TURN PAGE] 6 COS3751-FI Concession August 2018 Appendix A Logarithm Table r −(r)log2(r) 0.00 0.00 0.05 0.22 0.10 0.33 0.15 0.41 0.20 0.46 0.25 0.50 0.30 0.52 0.33 0.53 0.35 0.53 0.40 0.53 0.45 0.52 0.50 0.50 0.55 0.47 0.60 0.44 0.63 0.42 0.65 0.40 0.67 0.39 0.70 0.36 0.75 0.31 0.80 0.26 0.85 0.20 0.90 0.14 0.95 0.07 1.00 0.00 In this table, r represents the ratio of examples. For example, given 4 instances of one value and 1 of another value for a particular attribute or decision (written E[4, 1]), the ratios are 4 5 = 0.80 and 1 5 = 0.20. The entropy value can be calculated by adding up the corresponding values in the table, namely 0.26 + 0.46 = 0.72. Note: Round to the closest r value in the table above. c⃝ UNISA 2018","libVersion":"0.2.3","langs":""}