{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Telegram Notes/Materials/SchedulingProblem.pdf","text":"A scheduling problem Twelve lecturers in a mathematics department serve on the following committees: - Undergraduate Education (UE): Sineman, Limitson, Axiomus, Functionini - Graduate Education (GE): Graphian, Vectorades, Functionini, Inﬁnitescu - Colloquium (C): Lemmeau, Randomov, Prooﬁzaki - Library (L): Van Sum, Sineman, Lemmeau - Staﬃng (S): Graphian, Randomov, Vectorades, Limitson - Promotion (P): Vectorades, Van Sum, Parabolton The committees must all meet during the ﬁrst week of classes, but there are only three time slots available. The aim is to ﬁnd a schedule that will allow all lecturers to attend the meetings of all committees on which they serve. Answer the following questions. 1. Deﬁne the variables and their domains for this scheduling problem. 2. Provide the constraint graph for this problem. 3. Find a schedule that will allow all lecturers to attend the meetings of all committees on which they serve. Solution 1. Variables and domains Choosing variables and domains in CSP problems can be somewhat tricky. You have to consider the goal you are working towards. However, the best place to start is normally to regard the limited resource as the starting point for the domains (and thus the thing needing the resource as the variables). Another way of thinking about this is to say the items we are contending for would be the domains, the items that would like to make use of them (contend for them) would be the variables. In the given problem, time slots are limited: the committees are contending for their use – so we regard the time slots as the domain. Therefore the variables are the six committees. - Let X be the set of variables. X = {UE, GE, C, L, S, P}. - Let DX be the domain for the variables. DX = {T1, T2, T3}, where Ti (for i = 1, 2, 3) represents a time slot. All variables have the same domain. 2. Constraint graph The nodes of the graph represent the variables, thus the committees. The constraints of the graph represent the overlaps between committee members. So we draw an edge between two committees if at least one lecturer is a member of both committees, as shown in the graph in Figure 1. 1 • UE • GE • L • C•S •P Figure 1: The constraint graph for the scheduling problem 3. Solution to the problem We would like to ﬁnd a schedule that will allow all lecturers to attend the meetings of all committees on which they serve. This amounts to ﬁnding an assignment of colours to the nodes of the graph so that if there is an edge between nodes u and v, then the colours assigned to nodes u and v are diﬀerent. So if we can colour the constraint graph with the fewest number of colours possible, we can schedule all committee meetings that have the same colour at the same time. UE GE L CS P Figure 2: A colouring of the constraint graph for the scheduling problem In Figure 2, we have a colouring of the constraint graph that satisﬁes the requirement we set. That is, no two nodes that are linked by an edge have the same colour. In this colouring, we have used three colours, which means we can hold the committee meetings in three time slots so that there are no conﬂicts. Speciﬁcally we have: • S = T1, (yellow) • UE = C = P = T2, (red) • GE = L = T3, (blue). Note that the order of assigning time slots to the committees does not really matter as long as meetings with diﬀerent colours are held at diﬀerent times. 2","libVersion":"0.2.3","langs":""}