{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Telegram Notes/Materials/Notes COS3751.pdf","text":"Search Algorithms: Uninformed search strategies: Breadth-First Uniform-Cost f(n) = g(n) Depth-First (Chronological backtracking = fancy name) Depth-Limited Iterative Deepening Bidirectional Informed (Heuristic) search strategies: Greedy (best-first search) f(n) = h(n) A* (best-first search) f(n) = g(n) + h(n) Questions to learn: Define the concept of a state space (3) 1. The initial state, 2. actions and 3. transition model implicitly define the state space of the problem. 4. The state space of a dynamic system is the set of all possible states. Explain what is meant when an algorithm is described as optimally efficient (2) 1. When the algorithm will always find the optimal solution and in the required time. 2. (Not wasting time considering irrelevant nodes would make an algorithm efficient) Define the ground resolution theorem (2) 1. The completeness theorem for resolution in propositional logic is called the ground resolution theorem 2. If a set of clauses is unsatisfiable, then the resolution closure of those clauses contains the empty clause. 2:What does it mean to say that resolution is refutation-complete? (2) If a set of clauses are unsatisfiable, then resolution will always be able to derive a contradiction. Provide an example which illustrates the unit resolution inference rule (3) – p347 Two clauses can be resolved if they contain complementary literals. First-Order literals that unifies with the negation of the other are complementary. Eg. 1. The two clauses can be resolved: [Animal(F(x)) V Loves(G(x), x)] and [~Loves(u,v) V ~Kills(u,v)] 3. By eliminating the complementary literals: Loves(G(x), x) and ~Loves(u,v) 4. With unifier: θ = {u/G(x), v/x} 5. To produce the resolvant clause: [Animal(F(x)) V ~Kills(G(x),x)] Differentiate between an agent function and an agent program (2) The agent function maps percept sequence to action. The agent program implements the agent function. Consider a game of chess. Is this a fully observable, partially observable, or unobservable environment? Clearly explain (3) Fully observable. Because at each point in time (each possible state) the agent’s sensors can access the complete state of the environment. (Every single chess piece is observable). There are no hidden pieces. The agent does not need to keep track and build a model of the world. The agent can directly view the whole world. Define forward checking (2) When variable is assigned a value, then looking ahead to all the connected variables and removing conflicting values from their domain. When the domain of a variables gets completely empty it is called domain-wipeout, and when this occurs the forward checking knows that the current assigned value will not work. Why does conjunctive normal form ensure that we can have a complete inference procedure for all propositional logic, and why is it important that we have a complete inference procedure that covers all propositional logic? P253(5) 1. Conjunctive normal form is a conjunction of clauses (disjunction of literals) 2. The resolution rule only applies to clauses (disjunction of literals) 3. Every sentence of propositional logic is logically equivalent to a conjunction of clauses. 4. Thus the resolution rule will apply to every sentence of propositional logic, thereby it is a complete inference procedure. Explain the concept of information gain P703 (3) 1. Def: Information gain is defined in terms of reducing entropy. 2. Entropy is a measure of the uncertainty of a random variable. 3. Acquisition of information corresponds to a reduction in entropy. 4. By calculating Information gain we can selectively prune the decision tree of nodes that are irrelevant. Many machine learning techniques suffer from the problem of over-fitting. Briefly discuss two techniques that have been developed to reduce the problem of over-fitting during decision tree learning –P705 (5) The technique “Decision tree pruning” works by eliminating nodes that are not clearly relevant. Nodes are irrelevant when the information gain is close to zero. Second technique is called “early stopping”, whereby you stop generating new nodes when there is no good attribute to split on, rather than going to all the trouble of generating nodes and then pruning them away. Define the concept of a Fully Observable environment (1) A fully observable environment is where the agent can get the complete state state of the environment without the need to keep track of any previous states. All information about all objects in the environment is available at any state. Consider a game of chess. Is this a deterministic or stochastic environment ? Clearly explain why (2) Deterministic. Each action has a specific determined effect. There is no randomness involved. Eg. In chess, If you decide to move your castle forward 1 step, then that is exactly what is going to happen. Differentiate between discrete and continuous environments. Provide an example of each. (4) 1. The discrete/continuous distinction can be applied to the state of the environment, to the way time is handled, and to the percepts and actions of the agent. 2. Chess is a discrete environment where there is a finite number of states, actions and precepts. 3. A taxi driving is a continuous-state and continuous-time problem. 4. The speed and location of a taxi goes through a range of continuous values and do so smoothly over time. 2:Explain what an admissible heuristic is (2) Also known as optimistic heuristic. The heuristic is admissible if it doesn’t over-estimate the cost of reaching a goal. Explain what is meant by consistency with respect to heuristic searches (1) A heuristic function is consistent when the estimated distance of a given state to a goal state is at most equal to the estimated distance from any neighboring vertex plus the step cost of reaching that neighbor. Conditions for optimality Admissible heuristic - doesn’t over-estimate the cost of reaching a goal Consistent heuristic - estimated value <= (step cost + estimated value of neighboring variables) Clearly explain why ordering in alpha/beta searching is important, and how it benefits alpha/beta searching – P169 (2) The order is important when doing pruning of nodes. Worse nodes can only be pruned if you know that there are better nodes, thus it is better for the order to have the better nodes first and the worse nodes last. What is a positive literal? A literal in its basic form without any negation. Eg. A A negated literal is a negative literal. Eg. ¬A What is a Definite clause ? Disjunction of literals of which exactly one is positive. The rest if any are all negated (negative) For example the clause (¬L1,2 V ¬Breeze V B1,1) is a definite clause, whereas (¬B1,1 V P1,2 V P2,1) is not. What do we call a Definite clause without any negative literals? Fact Clearly explain what a Horn clause is, and state why they are useful (3) 1. Disjunction of literals of which at most one is positive. 2. Horn clauses are easily represented using an implication, which makes reasoning with them much easier. 3. For example the clause (¬L V ¬Breeze V B) can be written as (L1,2 ʌ Breeze) => B) 4. If you resolve two Horn clauses you get back a Horn clause. What do we call a Horn clause without any positive literals? Goal clause (All negative literals) 4 Majors factors involved in learning? 1. Component 2. Prior knowledge 3. Representation 4. Feedback Explain what is meant by Supervised Learning (2) The agent observes some example input-output pairs and learns a function that maps from input to output. Explain what is meant by unsupervised Learning The agent learns patterns in the input even though no explicit feedback is supplied. Eg. Clustering Explain what is meant by reinforces learning The agent learns from a series of reinforments in the form of rewards or punishments. Give two benefits of formulating a problem as a CSP (2) 1. The structure of the constraint graph can be used to simplify the solution process, in some cases giving an exponential reduction in complexity. 2. We can develop effective, generic heuristics that require no additional, domain-specific expertise. 2:To what does the term ‘backtracking search’ refer, within the context of a CSP problem? (2) “backtracking search” refers to a depth-first search that chooses values for one variable at a time and backtracks when a variable has no legal values left to assign. Back-tracking search chooses a variable at a time. What different ways can it choose? 1. MRV heuristic – minimum remaining values – The variable that is most constraint. 2. Degree heuristic – The variable that is involved in the most number of different constraints. Once back-tracking search has chosen a variable, In what order does it assign values from the domain? 1. Least constraining heuristic – the value that rules out the fewest choices for neighboring variables. Why would we use iterative-deepening search? (2) It is complete when the branching factor is finite. It is optimal when the path cost is a nondecreasing function of the depth of the node. Breadth-first Search Very time consuming. Large problems take too long to solve. What do we mean when we say that a search algorithm is optimal? Does this mean that an optimal search algorithm is efficient? Give an example to explain your answer (2) Search algorithm is optimal when it finds the lowest path cost among all solutions. (Best solution) No, it does not mean it is efficient, for example: Breadth-first search. If time or space complexity is exponential then the algorithm will not be effiecient Define Model – P240 Possible world Chronological Back-tracking (fancy name for depth-first-search (DFS)) Going back to the most recent decision and making a different decision. Complete If the algorithm always finds a solution if there is one. Commutativity A problem is commutative if the order of application of any given set of action has no effect on the outcome. CSP’s are commutative because we only consider 1 variable at each node.","libVersion":"0.2.3","langs":""}