{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Exam Packs/Stuvia-1705667-cos3751-exam-pack-2022.pdf","text":"COS3751 - EXAM PACK (2022) written by StuddyScene www.stuvia.com Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? E X A M P A C K C O S 3 7 5 1 R e v is io n P A C K Q u e s t io n s . A n s w e r s Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 1 of 12 Question 1 State Spaces [7] (a) Define the concept of a Fully observable environment. (1) An environment is said to be Fully observable if an agent’s sensors give it access to the complete state of the environment at each point in time. (b) Consider a game of chess. Is this a deterministic or stochastic environment? Clearly explain why. (2) Deterministic: because, in chess, the next state of the game (environment) is completely determined by the current state of the game and the move (action) executed by a player (agent). (c) Differentiate between discrete and continuous environments. Provide an example of each (4) An environment is said to be discrete if its state-space is finite and, for each state, there are only finitely many percepts to be perceived and only finitely many actions to choose from. The game of chess is an example of such an environment. On the other hand, a continuous environment has infinitely many distinct states, infinitely many percepts, and infinitely many actions to choose from at any state. Taxi driving is an example of a continuous environment. Question 2 Searching [16] Consider the provided diagram and answer the questions that follow (the ℎ̂ value of each node is provided in brackets after the node name, and the 𝑔̂ value is provided next to the edges between nodes) e(4) k(2) a(10) m(1) b(12) n(0) d(5) l(1) f(7) g(4) c(4) h(5) i(4) 5 2 7 10 3 8 8 5 5 4 3 3 1 2 4 3 7 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 2 of 12 (a) Explain what an admissible heuristic is. (2) An admissible heuristic is one that never overestimates the true cost of reaching the nearest goal. (b) List the nodes and their 𝑓̂ values that are added to the frontier when node d is expanded. Assume that node a is already on the explored (closed) list. (3) l(10), i(14) Not enough information is provided to answer this question… Which search strategy should we use, Greedy-Best-First or A*? If A*, which node is the initial (root) node? You cannot calculate PATH-cost if you don’t know where the root is! Let’s ASSUME that A* should be used, and that node a is the start node. Expanding a gives e(4) a(10) b(12) d(5) c(4) 2 7 8 3 f(e) = 6 f(d) = 8 f(c) = 12 f(b) = 19 Next; e has the lowest f-cost, so it will be expanded next: e(4) a(10) b(12) d(5) c(4) 2 7 8 3 f(d) = 8 f(c) = 12 f(b) = 19 k(2)5 f(k) = 9 Finally, expanding node d: e(4) a(10) b(12) d(5) c(4) 2 7 8 3 f(i) = 14f(c) = 12 f(b) = 19 k(2)5 f(k) = 9 l(1) i(4) 7 6 f(l) = 10 Notice that k is already on the frontier. This is how I got to my answer… Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 3 of 12 (c) Suppose we have the following frontier list (i(14), c(12), g(20)). Which one of these nodes will be selected for expansion next? State why. (2) Node c: because it has the lowest f-cost among all current frontier nodes. (I assume that the values in brackets indicate f-costs) (d) Explain what is meant by consistence with respect to heuristic searches (1) If the heuristic function of a graph-search strategy is consistent, then the algorithm is guaranteed to be optimal (and complete when the branching factor is finite). For every node in the search tree, the following inequality must hold 𝒉(𝒏) ≤ 𝒄(𝒏, 𝒂, 𝒏′) + 𝒉(𝒏’). (e) Assume that a graph-search is used. Is the heuristic used in this diagram consistent? Explain why/why not. (2) No, this heuristic is not consistent! 𝟏𝟎 = 𝒉̂(𝐚) ≰ 𝒈̂(𝐚, 𝐞) + 𝒉̂(𝐞) = 𝟔 or 𝟏𝟎 = 𝒉̂(𝐚) ≰ 𝒈̂(𝐚, 𝐝) + 𝒉̂(𝐝) = 𝟖 (f) Consider the following diagram J K L M H I E F G A B C D Assume that loops are detected and that you consider moves in the order Up, Right, Down, Left. Also assume that the start node is node E, and the goal node is node G. List the order in which nodes are visited for a depth-first search. (6) E, A, B, C, D, G NB: Depth-first search uses a LIFO queue. A LIFO queue means that the most recently generated node is chosen for expansion. I used depth-first-GRAPH-search to obtain my solution (see diagram below) The labels on the left of each node has the form GENERATE| EXPAND, where GENERATE depicts the order in which nodes are generated and EXPAND depicts the order in which nodes are expanded (visited). Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 4 of 12 E H F A C B G D 1|1 2|_ 3|_ 4|2 6|4 5|3 Up Right Down Left 7|5 8|6 Question 3 Adversarial Search [14] Consider the following game tree and then answer the questions that follow (the static utility values for the leaf nodes are provided below each leaf node) A D E F G H I B J C 7 K 5 L 4 M 9 N 10 P 203 O Q 25 R 22 (a) Which choice should Max make (move B or move C)? Explain why. (2) Move B: The minimax (utility) value for MAX for move B is higher than that of move C. Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 5 of 12 A D E F G H I B J C 7 K 5 L 4 M 9 N 10 P 203 O Q 25 R 22 7 5 9 10 3 25 5 3 5 (b) Write down the 𝛼 and 𝛽 values for nodes B, D, E, and F. (4) Using the algorithm in our textbook: B = (−∞, 5), D = (7, ∞), E = (5, 7), F = (−∞, 5) OR Using the algorithm in the video: B = (−∞, 5), D = (7, ∞), E = (5, 7), F = (9, 5) I guess the algorithm used in the videos available from myUnisa (https://my.unisa.ac.za/access/content/group/COS3751-13-S2/alphabeta/), is as follows: function ALPHA-BETA-SEARCH(state) returns an action v ← MAX-VALUE(state, −∞, +∞) return the action in ACTIONS(state) with value v. function MAX-VALUE (state, α, β) returns a utility value if TERMINAL-TEST(state) then return UTILITY(state) for each a in ACTIONS(state) do α ← MAX(α, MIN-VALUE(RESULT(s, a), α, β)) if α ≥ β then return α return α. function MIN-VALUE(state, α, β) returns a utility value if TERMINAL-TEST(state) then return UTILITY(state) for each a in ACTIONS(state) do β ← MIN(β, MAX-VALUE(RESULT(s, a) , α, β)) if β ≤ α then return β return β Using this algorithm, I got the following alpha/beta values (green values indicate the value returned by a node) Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 6 of 12 A D E F G H I B J C 7 K 5 L 4 M 9 N 10 P 203 O Q 25 R 22 7 ∞ 5 7 9 5 10 ∞ 5 10 5 5 -∞ 5 5 ∞ Using the algorithm in the prescribed textbook, I obtained the following values. The 3-arrays next to nodes take the form 𝒗 𝜶 𝜷 A D E F G H I B J C 7 K 5 L 4 M 9 N 10 P 203 O Q 25 R 22 7 7 ∞ 5 5 7 9 -∞ 5 10 10 ∞ 3 5 10 3 5 10 5 -∞ 5 5 5 ∞ (c) If alpha/beta pruning is applied, a cut occurs. Indicate where this cut occurs, state what type of cut it is, and what the relevant 𝛼/𝛽 values are when the cut occurs (4) The right-most child of node C, namely I (and I’s children etc. of course), is pruned from the search tree. This is an 𝜶-cut. The relevant 𝜶/𝜷 values are 𝜶 = 𝟓 and 𝜷 = 𝟏𝟎 if you use the textbook’s algorithm OR 𝜶 = 𝟓 and 𝜷 = 𝟓 if you use the video’s algorithm. (d) Clearly explain why ordering in alpha/beta searching is important, and how it benefits alpha/beta searching. (2) Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 7 of 12 The right order of nodes can result in pruning larger section of the search tree earlier. This benefits alpha/beta searching because it reduces the runtime of the algorithm. (e) Is it possible to re-order the game tree to effect a cut earlier? Is so, explain which branches you would re-order. If it is not possible, explain why it would not make a difference to re-order the tree. (2) Yes, I will swap the order of branch G and H (This will result in G also being pruned) Question 4 Constraint Satisfaction Problems [14] Consider the problem of assigning registers on a central processing unit (CPU) to the variables in a program. Since a program may have many variables and there are a limited number of registers on the CPU, assigning registers to variables is an important problem. Since only certain variables are in use at different times during the execution of the program (variables that are being used at a particular time are called alive), the real task is merely to figure out which alive variables to assign to the limited number of registers. The problem is actually trivially solved by visually arranging the variables in such a way that those variables that are alive together lie adjacent to each other and colouring each program variable (a register is thus represented by a colour) –adjacent variables cannot have the same colour. For a certain program the following holds: 1- There are six variables in use in the program 2- Program variables A, B, and C are alive together. Program variables C, D, E, and F are alive together, and program variables A, E, and F are alive together. 3- There are four registers available for assignment to program variables. Do not confuse the program variables with the CSP variables for this question. (a) Define the variables for this CSP. (3) The variables for this CSP are the program variables. Thus 𝑿 = {𝑨, 𝑩, 𝑪, 𝑫, 𝑬, 𝑭} (b) Define the domain for each variable in the CSP. (2) The domain of each variable is the set of four registers. Thus 𝑫𝑿 = {𝑹𝟏, 𝑹𝟐, 𝑹𝟑, 𝑹𝟒} where each 𝑹𝒊 (𝟏 ≤ 𝒊 ≤ 𝟒) is an abbreviation meaning “Register 𝒊”. (c) Define the constraints for the variables in the CSP. (5) 𝑪 = {𝑨 = 𝑩, 𝑩 = 𝑪, 𝑨 = 𝑪, 𝑪 = 𝑫, 𝑫 = 𝑬, 𝑬 = 𝑭, 𝑪 = 𝑬, 𝑪 = 𝑭, 𝑫 = 𝑭, 𝑨 = 𝑬, 𝑨 = 𝑭} NB: 𝑽𝒊 = 𝑽𝒋 (where 𝑽𝒊, 𝑽𝒋 𝝐 𝑿) is a shorthand notation for 〈(𝑽𝒊, 𝑽𝒋), 𝑽𝒊 = 𝑽𝒋〉, which means variables 𝑉𝑖 and 𝑉𝑗 are alive together. Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 8 of 12 (d) Provide the solution to this problem if it exists. If no solution exists, explain what parameters from the problem would have to change in order to get to a solution.(4) One possible solution is: Variables A and D can use the same register; variables B and E can use the same variable; variable C requires its own register; and variable F require its own variable. For example, {𝑨 = 𝑹𝟏, 𝑩 = 𝑹𝟐, 𝑪 = 𝑹𝟑, 𝑫 = 𝑹𝟏, 𝑬 = 𝑹𝟐, 𝑭 = 𝑹𝟒} A B C D E F Register 1 (R₁) Register 2 (R₂ ) Register 3 (R₃ ) Register 4 (R₄ ) Question 5 Predicate Logic [15] (a) Clearly explain what a Horn clause is, and state why they are useful (3) A Horn clause is a disjunction of literals of which at most one is positive. Deciding entailment with Horn clauses can be done in time that is linear in the size of the knowledge base (backward- and forward-chaining). (b) Closely examine the following sentences in a knowledge base 𝑝 1. ¬𝐴 ∨ ¬𝐵 ∨ ¬𝐶 ∨ 𝐷 2. ¬𝐷 ∨ ¬𝐹 ∨ 𝐺 3. ¬𝐺 ∨ ¬𝐻 ∨ 𝐼 4. ¬𝐴 ∨ ¬𝐻 ∨ 𝐶 5. ¬𝐴 ∨ 𝐵 6. 𝐴 7. 𝐻 8. 𝐹 Show that 𝑝 ⊨ 𝐼 using forward chaining (12) First I rewrite these sentences in their equivalent implication form: 1. 𝑨 ∧ 𝑩 ∧ 𝑪 ⇒ 𝑫 2. 𝑫 ∧ 𝑭 ⇒ 𝑮 3. 𝑮 ∧ 𝑯 ⇒ 𝑰 4. 𝑨 ∧ 𝑯 ⇒ 𝑪 5. 𝑨 ⇒ 𝑩 6. 𝑨 7. 𝑯 8. 𝑭 Now I will attempt to derive 𝑰: 𝑨, 𝑯, and 𝑭 are facts, so I add them to my (currently empty) list of true symbols. The premise of 5 is only 𝑨; 𝑨 is known to be true, so I add 𝑩 to my list of true Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 9 of 12 symbols. The premise of 4 is 𝑨 ∧ 𝑯; both 𝑨 and 𝑯 are known to be true, so I add 𝑪 to my list of true symbols. The premise of 1 is 𝑨 ∧ 𝑩 ∧ 𝑪; all three of these are in my list of true symbols, so I can add 𝑫 to my list of true symbols. The premise of 2 is 𝑫 ∧ 𝑭; both of these are in my list of true symbols, so I add 𝑮. Finally, the premise of 3 is 𝑮 ∧ 𝑯; Both 𝑮 and 𝑯 are in my list of true symbols, so I am entitled to infer that 𝑰 is true. Hence, by means of forward chaining I have shown that 𝒑 ⊨ 𝑰 (as required) Question 6 First-Order Logic [8] Consider the following sentences in a knowledge base 𝑝 1. (∀𝑥)[(𝑝𝑎𝑠𝑠(𝑥, ℎ𝑖𝑠𝑡𝑜𝑟𝑦) ∧ 𝑤𝑖𝑛(𝑥, 𝑙𝑜𝑡𝑡𝑒𝑟𝑦)) ⇒ ℎ𝑎𝑝𝑝𝑦(𝑥)] 2. (∀𝑦)(∀𝑧)[(𝑠𝑡𝑢𝑑𝑦(𝑦) ∨ 𝑙𝑢𝑐𝑘𝑦(𝑦)) ⇒ 𝑝𝑎𝑠𝑠(𝑦, 𝑧)] 3. ¬𝑠𝑡𝑢𝑑𝑦(𝐽𝑜ℎ𝑛) 4. 𝑙𝑢𝑐𝑘𝑦(𝐽𝑜ℎ𝑛) 5. (∀𝑤)[𝑙𝑢𝑐𝑘𝑦(𝑤) ⇒ 𝑤𝑖𝑛(𝑤, 𝑙𝑜𝑡𝑡𝑒𝑟𝑦)] (a) Use backward chaining to prove that John is happy, show all your steps (8) According to tutorial letter 102, backward chaining for FOL is not part of the syllabus. Instead, I will use a proof of resolution with refutation to prove the query. However, I will choose my resolver pairs in such a way that a backward chaining proof is simulated. First, I rewrite the sentences in the above knowledge base into clause form: 1. ¬𝒑𝒂𝒔𝒔(𝒙, 𝒉𝒊𝒔𝒕𝒐𝒓𝒚) ∨ ¬𝒘𝒊𝒏(𝒙, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) ∨ 𝒉𝒂𝒑𝒑𝒚(𝒙) 2. ¬𝒔𝒕𝒖𝒅𝒚(𝒚) ∨ 𝒑𝒂𝒔𝒔(𝒚, 𝒛) 3. ¬𝒍𝒖𝒄𝒌𝒚(𝒚) ∨ 𝒑𝒂𝒔𝒔(𝒚, 𝒛) 4. ¬𝒔𝒕𝒖𝒅𝒚(𝑱𝒐𝒉𝒏) 5. 𝒍𝒖𝒄𝒌𝒚(𝑱𝒐𝒉𝒏) 6. ¬𝒍𝒖𝒄𝒌𝒚(𝒘) ∨ 𝒘𝒊𝒏(𝒘, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) To prove 𝒑 ⊨ 𝒉𝒂𝒑𝒑𝒚(𝑱𝒐𝒉𝒏) by means of resolution refutation, I must show that the empty clause follows from (𝒑 ∧ ¬𝒉𝒂𝒑𝒑𝒚(𝑱𝒐𝒉𝒏)): 1 ¬𝒑𝒂𝒔𝒔(𝒙, 𝒉𝒊𝒔𝒕𝒐𝒓𝒚) ∨ ¬𝒘𝒊𝒏(𝒙, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) ∨ 𝒉𝒂𝒑𝒑𝒚(𝒙) premise 2 ¬𝒔𝒕𝒖𝒅𝒚(𝒚) ∨ 𝒑𝒂𝒔𝒔(𝒚, 𝒛) premise 3 ¬𝒍𝒖𝒄𝒌𝒚(𝒚) ∨ 𝒑𝒂𝒔𝒔(𝒚, 𝒛) premise 4 ¬𝒔𝒕𝒖𝒅𝒚(𝑱𝒐𝒉𝒏) premise 5 𝒍𝒖𝒄𝒌𝒚(𝑱𝒐𝒉𝒏) premise 6 ¬𝒍𝒖𝒄𝒌𝒚(𝒘) ∨ 𝒘𝒊𝒏(𝒘, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) premise 7 ¬𝒉𝒂𝒑𝒑𝒚(𝑱𝒐𝒉𝒏) negated goal 8 ¬𝒑𝒂𝒔𝒔(𝑱𝒐𝒉𝒏, 𝒉𝒊𝒔𝒕𝒐𝒓𝒚) ∨ ¬𝒘𝒊𝒏(𝑱𝒐𝒉𝒏, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) 1&7 {x/John} 9 ¬𝒍𝒖𝒄𝒌𝒚(𝑱𝒐𝒉𝒏) ∨ ¬𝒘𝒊𝒏(𝑱𝒐𝒉𝒏, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) 3&8 {y/John, z/History 10 ¬𝒘𝒊𝒏(𝑱𝒐𝒉𝒏, 𝒍𝒐𝒕𝒕𝒆𝒓𝒚) 5&9 {} 11 ¬𝒍𝒖𝒄𝒌𝒚(𝑱𝒐𝒉𝒏) 6&10 {w/John} 12 NULL 5&11 {} Hence, by means of resolution refutation; John is indeed happy :-) Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 10 of 12 ¬happy(John) ¬pass(John, history) ∨ ¬win(John, lottery) ¬lucky(John) ∨ ¬win(John, lottery) ¬pass(x, history) ∨ ¬win(x, lottery) ∨ happy(x) ¬lucky(y) ∨ pass(y, z) lucky(John) ¬win(John,lottery)¬lucky(w) ∨ win(w, lottery) ¬lucky(John)lucky(John) Question 7 Machine Learning [16] (a) Explain what is meant by Supervised Learning. (2) In supervised learning the agent observes some example input–output pairs (training set) and learns a function that maps from input to output. (b) Consider the following table and answer the questions that follow Instance Classification Size Nationality Family 1 + Large French Single 2 + Small German Single 3 - Large German Married 4 - Small Italian Single 5 - Large Italian Single i. Using the entropy table on the last page of this document, calculate the entropy for the data. (2) I assume that “Classification” is the output, whereas “Size”, “Nationality”, and “Family” are the attributes (input). Thus, 2 of the 5 examples are positive, so 𝒑 = 𝟐 𝟓 = 𝟎. 𝟒. Using the table, I find that 𝑯(𝑪𝒍𝒂𝒔𝒔𝒊𝒇𝒊𝒄𝒂𝒕𝒊𝒐𝒏) = 𝑬[𝟐, 𝟑] = 𝟎. 𝟗𝟔 ii. On which characteristic should the first node be split? Clearly show why you choose that characteristic. Refer to the table on the last page of this document for entropy values. (7) I will make use of the following abbreviations: Cl = Classification Sz = Size Na = Nationality Fa = Family. Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 11 of 12 Calculate 𝑮𝒂𝒊𝒏(𝑺𝒛): 𝑮𝒂𝒊𝒏(𝑺𝒛) = 𝑯(𝑪𝒍) − 𝟑 𝟓 𝑬[𝟏, 𝟐] − 𝟐 𝟓 𝑬[𝟏, 𝟏] = 𝟎. 𝟗𝟔 − 𝟎. 𝟔 ∙ 𝟎. 𝟖𝟖 − 𝟎. 𝟒 ∙ 𝟏 = 𝟎. 𝟎𝟑𝟐 Calculate 𝑮𝒂𝒊𝒏(𝑵𝒂): 𝑮𝒂𝒊𝒏(𝑵𝒂) = 𝑯(𝑪𝒍) − 𝟏 𝟓 𝑬[𝟏, 𝟎] − 𝟐 𝟓 𝑬[𝟏, 𝟏] − 𝟐 𝟓 𝑬[𝟎, 𝟐] = 𝟎. 𝟗𝟔 − 𝟎. 𝟐 ∙ 𝟎 − 𝟎. 𝟒 ∙ 𝟏 − 𝟎. 𝟒 ∙ 𝟎 = 𝟎. 𝟓𝟔 Calculate 𝑮𝒂𝒊𝒏(𝑭𝒂): 𝑮𝒂𝒊𝒏(𝑭𝒂) = 𝑯(𝑪𝒍) − 𝟒 𝟓 𝑬[𝟐, 𝟐] − 𝟏 𝟓 𝑬[𝟎, 𝟏] = 𝟎. 𝟗𝟔 − 𝟎. 𝟖 ∙ 𝟏 − 𝟎. 𝟐 ∙ 𝟎 = 𝟎. 𝟏𝟔 According to my calculations, “Nationality” has the highest data gain, namely 0.56. Hence, I will choose “Nationality” to split on first (at the root)! Complete decision tree based on the given data: (You can split on either “Size” or “Family” at the {Nationality = “German”} test node) Nationality + Family - + - French German Italian Single Married (c) Many machine learning techniques suffer from the problem of over-fitting. Briefly discus two techniques that have been developed to reduce the problem of over- fitting during decision tree learning. (5) One technique, called decision tree pruning, works by eliminating nodes that are not clearly relevant: Start with a full decision tree; then look at a test node that has only leaf nodes as decedents: If the test appears to be irrelevant-detecting only noise in the data-then eliminate the test, replacing it with a leaf node. Repeat this process, considering each test with only leaf descendants, until each one has either been pruned or accepted as is. 𝝌𝟐 pruning is an example of such a strategy. Another technique involves limiting the number of input attributes and the size of the hypothesis space. Increasing the number of training examples is also a good idea! Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751 Examination Preparation ©ornelis Dubbelman-48269328 Page 12 of 12 Entropy Table 𝑝: Ratio of positive examples 𝐸: Corresponding entropy 𝑝 𝐸 0.00 0.00 0.10 0.47 0.20 0.72 0.30 0.88 0.40 0.96 0.50 1.00 0.60 0.98 0.70 0.88 0.80 0.72 0.90 0.47 1.00 0.00 Example: For 𝐸[4, 1], the ratio 𝑝 = 4 5, or 0.80. The corresponding entropy value is given by the table as 0.72 Good luck Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 1 Solution Total Marks: 150 Unique Assignment Number: 848630/772589 Study material: Chapters 1 through 4. You may skip sections 4.2 and 4.5. Important: When we use the phrase ‘deﬁne’ (particularly in Question 2), we are looking for a formal deﬁnition using some form of formal notation, and not simply an English description or deﬁnition. For example: ‘Deﬁne the initial state for an agent in Johannesburg’. Answer: In(Johannesburg). ‘Deﬁne the actions available to this agent given that the agent simply moves between major metropolitan areas’. Answer: Actions(In(Johannesburg)) = fGo(Bloemontein), Go(Durban), . . . g. When we want an English deﬁnition we will explicitly ask for it. Question 1: 13 Marks (1.1) (6)Explain the difference between a single and multi-agent environment. An agent solving a problem by itself is a single agent environmentX. The key dis- tinction is if an agent X’s behavior is best described as maximizing a performance measure whose value depends on agent Y’s behaviorXX. For example in a chess game the opponent agent X is trying to maximize its performance measure, which by the rules of chess minimises agent Y’s performance measureX. Thus chess is a com- petitive multi agent environment. In multiagent environments communication emerges as a rational behaviorXwhile non-existent in single agent environmentsX. Pg 42-43 (1.2) (4)Explain the difference between a Deterministic and Stochastic environment. In a deterministic environment the next state is completely Xdetermined by the current state and the agent’s action X. In a stochastic environment one cannot completely Xdetermine the next state based solely on the current environment and on the agent’s actions X. (1.3) (3)Consider a game of chess. Is this a fully observable, partially observable, or unob- servable environment? Clearly explain your answer. Fully observable X. The entire stateXcan be observed at each distinct state in the state spaceX. Question 2: 22 Marks (2.1) (5)List the 5 components that can be used to deﬁne a problem. 1. Initial stateX 2. ActionsX 3. Transition modelX 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 4. Goal testX 5. Path costX (2.2) (2)Differentiate between search space and goal space. The search space is the set of states that have to be searched for a solutionX, whereas a goal space is a set of goal statesX. (2.3) (1)What is the purpose of the explored set? Avoids inﬁnite loops since it holds the list of nodes that have already been explored. X (2.4) (6)List and discuss three types of queues that may be employed in a search. 1. FIFOX: used in DFS searches, nodes are added in reverse order to ensure that the last node added will be the ﬁrst node to be explored.X 2. LIFOX: Typically used in BFS searches: nodes are added in the order they are generated.X 3. Priority queueX: Nodes are added and sorted based on some key, this ensures that certain states take priority over others during the expansion phase.X (2.5) (8)List and explain the measures used to determine problem solving performance. 1. CompletenessX: Will the algorithm ﬁnd a solution if it exists? X 2. OptimalityX: Will the algorithm ﬁnd the best solution (optimal path cost among all solutions)? X 3. Time complexityX: How long does the algorithm take to ﬁnd a solution? X 4. Space complexityX: How much memory is needed to perform the search for a solution? X 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Question 3: 23 Marks Three (3) hikers (Andile, Barbara, and Ch ´e) have just descended down a valley to ﬁnd themselves confronted by a river they cannot get across. After walking downstream for a while they ﬁnd two young boys with a boat and ask them if they would help them get across the river. The boys agree, but inform the hikers that since their boat is so small, it can only hold only the two boys or one of the hikers at a time. We can assume that everyone knows how to row the boat. (3.1) (7)Deﬁne a state using a mathematical notation (pictures or any form of graphical notation will not be accepted). Discuss the appropriateness of your choice, and provide an example to show that it will be suitable to be employed during a search. We can abbreviate the hikers with the labels A, B, and C. The boys we could label b1 and b2. There are many possible answers. We need not distinguish between the boys as it would not make a difference to the solution, however, set theory dictates that sets do not contain duplicates, thus we need to properly indicate that the boys are two unique entities. State fA, B, C, b1, b2gfg(Xfor hikers, Xfor boys – Xif boys are unique) represents the two sidesXof the river and the people on that sideX. We can use a more compact representation fA, B, C, b1, b2gX, since if a person is not on the one side he/she will be on the other sideX. (3.2) (6)Deﬁne the start and goal states using your representation. Start state: fA, B, C, b1, b2gX2 There are 3 possible goal states! (I show the state representing the left (beginning) side of the river – the complement is also correct) 1. fg X2 2. fbig with i 2 f1, 2g X 3. fb1, b2g X (3.3) (2)Deﬁne an appropriate cost function or functions for this problem. Cost function: A cost function is not relevant hereX, since it would not impact which solution would be usedX(if more than one exists). (3.4) (8)Provide a formal deﬁnition of a valid action function for this problem – you need not provide a formal deﬁnition for the operation of the function. Discuss the operation of the function and provide an example to illustrate its use. Successor: move 1 hikerX, 1 boyX, or 2 boys Xto the other side. Mathematically we either remove one or two of the existing elements from our state representation when we move these people to the other side, or we add one or two missing elements to the set when we move these people back to this sideX. One such function could be: move(X , Y )Xwith X , Y 2 fA, B, C, b1, b2, X;Xg, X 6= Y X, where the function would alternately remove or add the function arguments from/to the state set (in the compact representation). 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 Question 4: 12 Marks (4.1) (3)Highlight the differences between a tree and graph search. Remember that a tree is a simple-connected acyclic graph. (That means that there are no loops, and that by deﬁnition there must be nodes that have no children.) A graph, on the other hand may have cycles or loops. The main difference between a tree search is thus that we don’t need to keep track of already explored nodes, since a simple tree cannot have revisited states. Thus, the tree search simple selects a leaf node from the frontier, goal tests, and if it is a goal it returns the path (solution) to that node.X Applying a tree search to a graph creates problems since there may be redundant paths and loops. The graph search solves this problem by augmenting the tree search with a ’closed list’ (or explored list). When nodes are generated during the search that are already on the closed list they are not added to the frontier.XX (4.2) (5)How does a Breadth First Search (BFS) differ from the general tree seach algorithm? What is the major reason for implementing the algorithm in this way? Provide an example to aid your discussion. BFS differs from a general tree search most notably during the goal test phase. In a general tree search the goal test phase happens on expansion. Since a BFS has de- graded performace in large search spaces, the goal test takes place during generation. Any suitable example to illustrate this concept is considered. X5 (4.3) (4)Consider an example of a sliding-block puzzle game state provided below (Figure 1). How many distinct states are there for puzzles of this sort? How many search nodes? Explain how you reached your answer. A B E I F H C N G J L M O K D Figure 1: Sliding-block puzzle It is interesting to note that half of random start states for the 15 puzzle are not solvable. For the 15-puzzle, we will always have 16! distinct states. However, since only half of the random start states are solvable, we have a possible search space of 16!=2.X4 Why use 16!? If we start with an empty board we can choose to place any of the 16 tokens (numbers 1 to 15 and space) in the top-left position, from here on we can choose any one of the remaining 15 tokens for the position just to the right of the top-left, and so we carry on: 16 \u0002 15 \u0002 14 \u0002 ... \u0002 2 \u0002 1 = 16!. 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace If you’re concerned about the number of distinct states for the example provided above, you will have to consider the number of moves that can be used to solve the puzzle – but that would only yield a possible lower-bound (assuming our search is super- efﬁcient) on the search space. From a space-complexity viewpoint, it will sufﬁce to state that the upper bound of the distinct number of states is 16!. Question 5: 6 Marks Consider the search tree in Figure 2. O M D K I C J H E L F G B N A Figure 2: Search Tree (Iterative Deepening Search (IDS)) (5.1) (6)Show the order in which the nodes will be expanded (from limit 0 to limit 4) given that IDS is used. Assume the goal node is F , and that nodes are expanded from left to right. So expansion means we apply legal actions to a chosen node – this, by deﬁnition, means that our order look somewhat different from what one may expect. Also, note that the IDS is a repeated invocation of the depth limited search. In the depth limited search, once we generate a node, we recursively call the depth limited search on that node. Thus, goal state checking happens immediately after generation for each node. In general, the children of nodes that are expanded are thus goal checked. 1. Limit 0: (No expansion – O is just goal tested) X 2. Limit 1: O X(M and E are just goal tested, not expanded) 3. Limit 2: O M E X 4. Limit 3: O M D C E LX2 5. Limit 4: None, search terminates once L is expanded – once L is expanded, F will be generated and goal tested on the recursive call. X 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 Visually, this is what happens (squares are goal tests and circles are expansions). Limit 0: O Limit 1: O M E Limit 2: O M D C E L B Limit 3: O M D K I C J H E L F Question 6: 16 Marks Consider the graph in Figure 3. (6.1) (4)Explain the concept of Uniform Cost Search (UCS). Provide an example to aid your discussion Uniform cost search is an uninformed search – thus no heuristics!. It calculates the cost of moving from this state to the next (keeping the cost of reaching the current state in mind), and chooses the cheapest (as deﬁned in the problem) next state from the frontierXX. It helps to think of it as explained in the textbook: it uses an evaluation function (similar 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B C D E F G H 11 20 15 4 24 22 14 12 9 Figure 3: Search Graph (Uniform Cost Search (UCS)) to an informed search such as A \u0003): ˆf (n) = ˆg(n) or just ˆg(n). exampleXX (6.2) (12)Suppose we start at C and the goal is G. Write down the nodes in the order they are expanded. Show your steps and calculations. The step cost between nodes is provided next to the edges in the graph. Since we’ve been talking about uniform cost, we’ll use the UCS algorithm. 1. C is placed on the frontier. (Technically we would put (C,0) on the frontier – see the next step for more detail) Frontier is: (C,0)X 2. Choose C (and remove) for expansion: generate the path (C,F, 4), (C,A, 20), and (C,E, 24) (where (C,A,20) means that there is a path from C to A which costs 20), and place on frontier. Frontier is: (C,F,4), (C,A,20), (C,E,24) X 3. Choose (and remove) (C,F,4) (lowest cost, but not goal) – generate (C,F,H,13) and place on the frontier. Frontier is: (C,F,H,13), (C,A,20), (C,E,24) X 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 4. Choose (and remove) (C,F,H,13) (lowest cost, but not goal) – generate (C,F,H,G,25) and place on the frontier. Frontier is: (C,A,20), (C,E,24), (C,F,H,G,25)X 5. Choose (and remove) (C,A,20) (lowest cost, but not goal) – generate (C,A,B,31) and place on the frontier. Frontier is: (C,E,24), (C,F,H,G,25),(C,A,B,31)X 6. Choose (and remove) (C,E,24) (lowest cost, but not goal) – generate (C,E,D,46) and place on the frontier. Frontier is: (C,F,H,G,25), (C,A,B,31), (C,E,D,46)X 7. Choose (and remove) (C,F,H,G,25) (lower cost, and goal) – search terminates.X Taking the nodes from the map as they are expanded, you thus have CX,FX,HX,AX,EX. Question 7: 4 Marks (7.1) (4)Differentiate between an admissible and a consistent heuristic. An admissible heuristic does not overestimate the actual cost of getting from a node in the search space to the goalX2. A consistent heuristic is more strict than an admissi- ble one: it obeys the triangle inequality: it is not possible for one side of a triangle to be longer than the sum of the lengths of the other two sides – thus, the heuristic should not estimate a higher cost from a node to a goal than a shorter actual path to the goal from that node.X2 Question 8: 31 Marks Consider Figure 4 and Table 1 and answer the questions that follow. Table 1 provides the estimated distances from each node to H (thus ˆh for each node). The label next to each edge provides the cost between nodes (thus ˆg). Node Estimated distance to N A 10 B 12 C 4 D 5 E 4 F 7 G 4 H 5 I 4 K 2 L 1 M 1 N 0 Table 1: Distance Table 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B C D F G H I L K M E N 7 8 3 10 10 5 8 5 7 6 4 4 3 3 2 5 10 1 Figure 4: A \u0003 Search (8.1) (10)Supose the start node is A, and the goal node is N. List the nodes in the order in which they are expanded (not generated). Show your steps (don’t just list the nodes, explain the reason for each choice). Lets start by adding A to the frontier so that the search can kick-off. In actual fact we add A with some additional information so that the search can discriminate between good choices during the search. We’ll add < P n s , cn s >, where P n s is a path than can be explored (from the start node S to node n), and cn s is the cost of getting to n added to the estimate of getting to G (the goal). But we know that for A\u0003, cn s is ˆf (n) = ˆh(G) + ˆg(n) So, we choose the node in the frontier with the lowest ˆf : < A, (10) >, and we expand it. Expanded thus far: A. Current frontier (ﬁrst item is always chosen next): 1. << A, D >, (8) > 2. << A, C >, (12) > 3. << A, B >, (19) > Now we choose, again, the node from the frontier with the lowest ˆf value: << A, D > , (8) >. This means we have to expand D next. Expanded thus far:A,D So we expand D, and the frontier then looks thus: 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 1. << A, D, K >, (9) > 2. << A, D, L >, (10) > 3. << A, C >, (12) > 4. << A, D, I >, (14) > 5. << A, B >, (19) > The search node with the lowest ˆf is the one with the path through K , so we choose that, and thus we expand K . Expanded thus far:A,D,K Frontier: 1. << A, D, L >, (10) > 2. << A, D, K , M >, (10) 3. << A, C >, (12) > 4. << A, D, I >, (14) > 5. << A, D, K , E >, (16) 6. << A, B >, (19) > Notice that I’ve placed the path to M below the path to L even though they have the same ˆf values. I did this as an internal conﬂict protocol (internal to the algorithm). As long as I am consistent in applying this conﬂict resolution (and it is not grossly wrong) everything should turn out ﬁne. In this case the rule is simple: paths with fewer nodes have priority. So we choose the path through L, and thus expand L. Expanded thus far: A,D,K,L. Frontier: 1. << A, D, K , M >, (10) 2. << A, C >, (12) > 3. << A, D, L, N >, (12) > 4. << A, D, I >, (14) > 5. << A, D, K , E >, (16) 6. << A, B >, (19) > Although we’ve found a path to N, the algorithm ﬁrst tries to ﬁnd a shorter route: it doesn’t exit once it ﬁnds a path to N. Now we get to choose the path through M. Expanded thus far: A,D,K,L,M Frontier: 1. << A, D, K , M, N >, (10) 2. << A, C >, (12) > 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 3. << A, D, I >, (14) > 4. << A, D, K , E >, (16) 5. << A, B >, (19) > Notice that we found a shorter route to N: we thus remove the old route << A, D, L, N > , (12) > from the frontier. Choose the node on the frontier with the lowest ˆf value. In this case it is actually our goal path. However, we have started the process of expansion, although we won’t apply actions to the selected node. So our ﬁnal answer is: AX2, DX2, KX2, LX2, MX2 (8.2) (4)When adding nodes to the frontier (during the search), is it enough to simply add nodes from the state space to the frontier? Justify your answer. Simply adding the nodes in the state space may not convey the needed information to solve the problem. It is not always the case, if the search space naturally encodes the solution (or an intermediate solution) then the nodes from the state space should should sufﬁce. For example: if the nodes in the search space for the previous question are simply nodes in the state-space, then the path to follow from start to ﬁnish is not properly encoded in the solution to the problem. We need to have the path to follow (or the route to travel) in order to be able to solve the problem. Thus it is often better to encode partial solutions in the nodes in the search space: in this way they become part of the solution to the problem, and will be used as they are in the frontier.XXXX (8.3) (10)Provide the content of the frontier at the time the search terminates. Frontier: 1. << A, D, K , M, N >, (10)X2 2. << A, C >, (12) >X2 3. << A, D, I >, (14) >X2 4. << A, D, K , E >, (16)X2 5. << A, B >, (19) >X2 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 (8.4) (7)Is the heuristic being applied consistent? Justify your answer by providing proof from the graph. NoX2. We can easily show that the heuristic is not consistent by providing a single case in which it does not satisfy the triangle inequalityX2. ˆh(A) > ˆg(D) + ˆh(D)X3 (it is somehow cheaper to reach the goal by moving to D from A and then moving onto the goal than it is estimated in reaching it from A), in other words, the one side of the triangle formed AN (cost = 10), is longer than the sum of the sides AD + DN (cost = 8), which violates the inequality. A D N 5 3 10 Question 9: 23 Marks A magic square is a square of n \u0002 n cells, and which has some very interesting properties: all the rows, columns, and diagonals, when summed, adds up to the magic constant. The magic constant is calculated as follows: M = n(n2 + 1) 2 Thus, for n = 3, M = 3(32+1) 2 = 15. The entries in the square are limited to the integers between 1 and n2. For example, a solution for n = 3 is: 4 3 8 9 5 1 2 7 6 Figure 5: Magic Square for n = 3 It is easy to verify that every row, column, and diagonal in the above example adds up to 15. (9.1) (4)Differentiate between a global and local maxima/minima. Local minima/maxima are local solutions in the search space that are optimal solutions to the problemX2. A global maxima/minima is a solution to the problem that is the best solution in the solution space (no other solution beats it).X2 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (9.2) (4)One way of solving a magic square is to randomly populate the entries, and then swap values until a solution is found. Deﬁne an appropriate objective function for this approach. Explain its function and provide and example to illustrate its use. A simple objective function is simply the number of rows, columns, and diagonals that sum to 15. The idea is then to favour moves that have higher values for the objective function – for example if we have a square with an objective function value of 4, chances are that we will only need to make minor adjustments to get to 5,6,7, and then 8. We can deﬁne some auxiliary functions to help deﬁne our objective function: r (x) which returns 1 if row x is 15, c(y) which returns 1 if row y sums to 15, and d and d 0 for each diagonal. r (x) = ( 1 if P3 j=1 Mxj = 15 0 otherwise c(y) = ( 1 if P3 k=1 Mky = 15 0 otherwise d = ( 1 if P3 j=1 Mjj = 15 0 otherwise d 0 = ( 1 if P3 k=1 Mk(4\u0000k) = 15 0 otherwise Finally we deﬁne our objective function: o(M) = 3X j=1 r (j) + 3X k=1 c(k) + d + d 0X4 (1) Another possible solution is to get the absolute value of 15 minus the sum of a row/column/diagonal, and add these together. The objective would then be to min- imise the objective function. r (x) =j 15 \u0000 3X j=1 Mxj j c(y) =j 15 \u0000 3X k=1 Mky j d =j 15 \u0000 3X j=1 Mjj j d 0 =j 15 \u0000 3X k=1 Mk (4\u0000k) j Finally we deﬁne our objective function: 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2021 o(M) = 3X j=1 r (j) + 3X k=1 c(k) + d + d 0 (2) (9.3) (5)Differentiate between a standard hill-climb search and a simulated annealing search. Would simulated annealing ﬁt the approach in the previous question? Explain your answer. (Hint: think about what simulated annealing is supposed to do with respect to local/global maxima, also think about shoulders and plateaux.) A standard hill-climb attempts to ﬁnd a maximum/minimum by ’climbing/descending the hill’ (moving in the direction of a bigger/smaller objective function result)X2. It may get stuck at a local max/min. Simulated annealing has some features that try to ’shake things up’ (amongst others it also employs the concept of hardening, or annealing) – in order to avoid getting stuck on plateauxX2. Simulated annealing works quite well in this case: a random board is chosen at the start, and a random successor is generated, if it is better (using the objective function) it is always accepted, if it is not better, it is accepted with probability e\u0001E=T : this means the longer we search, the less happy we are to accept ’poor’ moves (this allows us to quickly get out of local minima/maxima at the start).X. On a side note: remember that SA is supposed to give you a good chance of getting out of local minima/maxima: it does not always succeed. The magic square problem can quite easily be solved using a brute force search. (9.4) (10)Using the approach suggested above, show the ﬁrst 5 states in the search as well as the value of your objective function for each state. (Start off with a randomly populated magic square, and show 4 subsequent “moves”. In each case, show the value the objective function would take for each “move”.) . 9 2 6 3 5 7 1 8 4 Our objective function (the ﬁrst one in the sample solution) is 2. This is our random start, so we perform a random swap of the values on the board. Let’s assume a temperature T = 100.0, and we’ll use a simple linear discounting factor of 0.9 at each interval.X2 (This doesn’t mean T is linear.) 9 2 4 3 5 7 1 8 6 Here our objective function for the board is 4. This is better than the previous situation (\u0001E = 2), so we will deﬁnitely use this going forward. T was discounted to 90.0 at the start of the loop.X2 9 4 2 3 5 7 1 8 6 15 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace T is discounted to 81.0 Our objective function evaluates to 3, so we have \u0001E = \u00001. At this point we use thus choose this board with probability e\u0001E=T = e(\u00001=81.0) = 0.988 (this is an extremely high probability, so for our purposes let’s say we accept the boardX2. Think about it like this: suppose we create 100 cards, each one with a unique number from 1 to 100. We then colour 99 of them red, and one of them white. The cards are placed in a hat, and we randomly draw one: if the card is red, we accept the move, if it is white, we don’t. 3 4 2 9 5 7 1 8 6 T is discounted to 72.9. Our objective function evaluates to 2. This is even worse than before (but we let the annealing process worry about that). \u0001E = \u00001, and we accept the new board with probability e\u0001E=T = e(\u00001=72.9) = 0.986, also very high, and (again for illustrative purposes) we accept.X2 The penultimate state provided here does not follow from the one above, but it is done with a view on the very last state given (particularly to show how the temperature affects the acceptance of boards). Assume we arrived at the following during the search 3 4 8 9 5 1 2 6 7 (The objective function for this board evaluates to 6.)X2 Suppose now the following random board is: 3 4 8 9 5 1 2 6 7 And that T = 1.4 (after about 40 iterations). The objective function for this board evaluates to 5. That means \u0001E = \u00001, and now we accept this board with probability e\u00001=1.4 = 0.508. This is basically a coin ﬂip, and from here on things don’t get better for these ’worse’ cases. Copyright ©UNISA 2021 16 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 2 Solution Total Marks: 150 Unique Assignment Number: 738958/763908 Study material: Chapters 5 and 6. You may skip sections 5.5, 5.6, and 5.7. Question 1: 13 Marks (1.1) (3)Clearly explain what a utility function is, and why it is used during adversarial searches. A utility function provides an indication of the apparent numerical valueXof a state (either terminal or non-terminal)Xs for player p. It is used to ﬁnd the best available move for a playerX. (1.2) (4)Is the ideal strategy only available if we have perfect information? Explain your answer. NoX. Agents can still get the ideal strategy when playing without all the information X. This means the ideal strategy includes the notion of limited informationX, however, an agent that has perfect information will most likely outperform and agent that has limited/imperfect information for the same problemX. (1.3) (3)Explain how forward pruning works. Provide at least one approach to forward prun- ing in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering themX. Beam search [others are also considered] only considers a sample of the best moves at each plyX, but this may lead to the best move being pruned awayX. (1.4) (3)Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we pruneX. Otherwise minimax is an exhaustive searchX(for the parameters such as depth – plys – it is conﬁgured forX) and node orders do not matter. Question 2: 31 Marks Consider Figure 1 and answer the questions that follow. (The utility value of the leaf nodes are provided in brackets in the leaf node.) (2.1) (9)Provide the minimax values for all the nodes. A = -7X, B = -7X, C = -8X, D = -7X, E = 0X, F = 5X, G = -8X, H = -3X, I = 3X 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2021 A B C D J E K F L M G H I N O P Q R -7 0 -4 5 -8 -12 -3 3 -4 Figure 1: Minimax, alpha/beta A B C D J E K F L M G H I N O P Q R -7 0 -4 5 -8 -12 -3 3 -4 MAX(-7,-8) = -7 MIN(MIN(-7,0),5)) = -7 MAX = -7 MAX = 0 MAX(-4,5) = 5 MAX(-8,-12) = -8 MAX = -3 MAX(3,-4) = 3 MIN(MIN(-8,-3),3) = -8 (2.2) (2)Which move should MAX make? Explain your answer. BX. The utility value for MAX for move B is higher than that of move CX. (2.3) (14)Write down the \u000b=\f values for all the nodes (except the leaf nodes) if alpha/beta prun- ing is applied to the tree. Provided below is < node >= (\u000b, \f): A = (-7, 1)X2, B = (\u00001,-7)X2, C = (-7,1)X2, D = (-7, 1)X2, E = (\u00001,-7)X2, F = (-1,-7)X2, G = (-7, 1)X2. A visual representation is provided below (the number in parenthesis is the step in the progress of the algorithm). 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B C D J E K F L M G H I N O P Q R -7 0 -4 5 -8 -12 -3 3 -4 v = \b\b\u00001 \u0000 7 \u000b = \b\b\u00001 \u0000 7 \f = 1 v =ˆ1 \u0000 7 \u000b = \u00001 \f =ˆ1 \u0000 7 v = \b\b\u00001 \u0000 7 \u000b = \b\b\u00001 \u0000 7 \f = 1 v = \b\b\u000010 \u000b = \u00001 \f = \u00007 v = \b\b\u00001 \u0000 4 \u000b = \u00001 \f = \u00007 v = \b\b\u00001 \u0000 8 \u000b = \u00007 \f = 1 v =ˆ1 \u0000 8 \u000b = \u00007 \f = 1 When v = \u00008, v \u0014 \u000b ) \u000b-cut When v = \u00004, v \u0015 \f ) \f-cut (1) (2) (3) -7 (4) (5) 0 (6) (7) -4 (8) -7 (9) (10) (11) -8 (12) -8 The tree was traversed from left to right, and v = ˘˘˘\u00001 3 means that the original value of v was \u00001 but was replaced with 3 during execution of the algorithm. We follow the red dashed arrows: down, then up with a return value. (2.4) (6)Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). \u000b-cutXbelow C (H and I is not expanded)X2. \f-cutXbelow F (M is not expanded)X2 Also note: if there were an additional node below E, there would have been a \f-cut. This would have happened because after v = MAX (v , 0) = 0 (v = \u00001), we have that v \u0015 \f (\f = \u00007), which is the requirement for a \f-cut. Question 3: 23 Marks (3.1) Consider a simpliﬁed version of Nim: Two players (A and B) take turns removing items from a heap (just one heap). Each player may remove either one or two items from the heap. The heap starts off with ﬁve items, and player A moves ﬁrst. The objective of the game is to be the last player to remove items from the heap. That is, if it is your turn to move, and the heap is empty, you’ve lost the game. A partial game tree for the game is shown in Figure 2 on page 5. The state represented in each node is (P, n) where P 2 fA, Bg (the player whose turn it is to move next) and 0 \u0014 n \u0014 5 (the number of items remaining in the heap). Thus (A, 5) would mean that player A will move next, and there are ﬁve items left in the heap. The label next to each edge indicates the number of items removed by the player whose turn it was to move. Terminal states are shown in rectangles. The utility value for a win uw for player A is +1, and a loss ul is \u00001 (draws are not possible in this game). Players are greedy, and 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2021 if a win is possible, they will take it. (A,5) (B,4) (A,2) (B,0) 22 (A,3) (B,1) (A,0) 1 2 (B,2) (A,0) 2 11 1 (B,3) . . .2 Figure 2: Partial game tree for simpliﬁed Nim. Suppose you are trying to build a minimal tree for the game using expected utility values for different states (since you have access to the entire search tree you are able to use statistics based on the number of occurrences of events – or the maximum likelihood estimator). You want to limit the depth of the tree to 2 (the root node and one level below). (a) (5)Differentiate between utility and expected utility, provide an example to illustrate. Any search algorithm in AI makes use of an evaluation function. This function either returns a true untility, or an expected value (utility). Utility is an ideal evaluation of the state which provides a quantitive indication of the state’s desirability. This is typically done when it is possible to play a game to a terminal state, and then back up the utility values to branch (internal) nodes. If the number of actions from a state is numerous, and the depth to reach a terminal state is large, this becomes impractical. An expected utility is intended to be an evaluation of a state which makes use of features of the state to try and determine a utility that is expected from that state. In many cases expected utility could simply be the probability of winning from a particular state (see next question). X5 (b) (9)What is the expected utility value for state (B, 4) (E(B,4)) for player A? Show your calculations. Should A play to state (B, 4) by taking just 1 item from the heap? Why/why not (refer to the expected utility value you calculated when answering this part of the question)? 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace We simply calculate the number of possible wins and losses for A from (B, 4). There are 3 outcomes from this state, in which A will win exactly 1 time. Thus the probability (p) of a win from (B, 4) is p = 1 3 = 0.34X2 The probability (q = 1 \u0000 p) of losing from this position is q = 2 3 = 0.67X2. The expected utility value is E(B,4) = uw p + ulq = 1 \u0002 0.33 + \u00001 \u0002 0.67 = \u00000.34X3. Since there are no draw in this game, A will most probably lose if this state is reached (since our expected utility is closer to -1 (a loss) than 1 (a win))XX. (c) (9) Now calculate the expected utility value for (B, 3). Show your calculations. Will A beneﬁt from making this move instead of moving to (B, 4)? Justify your answer. We calculate the expected utility for (B, 3). Let’s ﬁrst draw a sub-tree of what the outcome will be: (B,3) (A,2) (B,0) 2 1 (A,1) (B,0 1 2 There are 2 possible outcomes in which A wins each time, thus: p = 2 2 = 1, q = 1 \u0000 p = 0 and the expected utility is E(B,3) = +1 \u0002 1 + \u00001 \u0002 0 = 1 a guaranteed win for A.X8. A should thus always take 2 items from a 5 item heap to guarantee a winX. Question 4: 11 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) (2)Deﬁne the Least Constraining Value (LCV) heuristic. The heuristic prefers values that rule outXthe fewest choices for neighboursX(it tries not to limit the number of choices that remain for neighbours). 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2021 (4.2) (3)Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u00001-consistent and so onX. This can only be done in exponential timeXwhich makes large problems intractable.X (4.3) (2)Deﬁne the degree heuristic. This heuristic attempts to reduce Xthe branching Xfactor on future choices. (4.4) (2)If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to ﬁnd a solution by simply backtracking? Explain your answer. NoX. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution).X (4.5) (2)Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistencyX2. (Or: it re- moves values from the domain of the neighbours of the variable for which the forward checking is being doneX0X0 – also acceptable answer.) Question 5: 43 Marks Consider the following cryptarithmetic puzzle: N E V E R + A L W A Y S N E A R L Y Cryparithmetic puzzles can be represented as CSPs if properly reformulated. Answer the ques- tions that follow. (5.1) (11)Deﬁne the variables for this cryptarithmetic puzzle. (Include any carry variables that may be required). It is important to deﬁne all the variables involved: including the carry variables. Please take note of the notation used, you have to at least be consistent in your application of the notation. The convention is to use the set ˜ (or X) for the variables, and D (with subscript) for the domains of variables. ˜ = fN, E, V , R, A, L, W , Y , S, C1, C2, C3, C4, C5g X9 X2 (carry variables) (5.2) (4)Provide the domains for the variables. We know that no number may begin with a 0, and that, no two of the variables may assigned the same digit. We also know that the carry variables has a very limited domain. We encode these in the domains. D˜=fN,A,C1,C2,C3,C4,C5g = [0, 9], DfN,Ag = [1, 9], DfC1,C2,C3,C4,C5g = [0, 1] X4 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.3) (8)Provide the constraints for this puzzle. 1. alldiff(N, E, V , R, A, L, W , Y , S)X 2. R + S = Y + C1 \u0002 10X 3. C1 + E + Y = L + C2 \u0002 10X 4. C2 + V + A = R + C3 \u0002 10X 5. C3 + E + W = A + C4 \u0002 10X 6. C4 + N + L = E + C5 \u0002 10X 7. C5 + A = NX 8. C5 = 1X (5.4) (10)Provide the solution to this crypt-arithmetic puzzle, show all the steps you took to arrive at the answer (also show which heuristic you employed, and your backtracking strategy (if used)). We use a plain brute force approach. We start by considering the constraints. Since C5 = 1, it means that A is one less than N. Thus, A cannot be 9, since that would make N = 10 which is not legal. So we reduce DA = [1, 8], then N = [2, 9] 1. We can now choose based on MRV, E = 0. Now C3 = 1 C1 = 1, DY = [9], but R + S 6= 19. 2. Choose E = 1, DL = [3, 9] (a) Choose V = 0. C2 = 1, DR = [3, 9], DA = [2, 8],DN = [3, 9] i. L = 3. DA = [4, 8], DN = [5, 9], DY = [2], but R + S 6= 2. For all L 2 f3, 4, 5, 6, 7, 8, 9g the same goes. Thus we backtrack to V . (b) Choose V = 2. DA = [3, 8],DN = [4, 9], i. R = 0. R 6= S. ii. R = 3. No legal value in A’s domain remains to get to 3 or 13. Same for R = 4 iii. R = 5. A = 3, N = 4. No legal values in DW remain. iv. R = 6. DA = [3, 4], DN = [4, 5], DW = [3]. A. W = 3. A = 4, N = 5. But L cannot be 5 or 6. v. R = 7. DA = [4, 5], DN = [5, 6], DW = [3, 4], DL = [5]. But then A or N will clash with L. vi. R = 8. DA = [5, 6], DN = [6, 7], DW = [3, 5]. A. Y = 3. S = 5, C1 = 1, but then L = 5. B. Y = 4. S = 6, C1 = 1, but then L = 6. This will carry on for all values of Y . 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2021 vii. R = 9. DA = [6, 7], DN = [7, 8], DL = [3, 4], but DY = [3, 8]. We’ve exhausted R. (c) So we carry on until V = 5. i. R = 2. DA = [6, 7], DN = [7, 8], C3 = 1. W = 4. But A 6= 6 since V +A 6= R. ii. R = 3. DA = [6, 8], DN = [7, 9], C3 = 1, DW = f2, 4, 6g. A. L = 0. N = 9, but E + W < 10. B. L = 2. Y = 0. DA = [7], D = 7, A = 8, N = 9, W = 6. Our solution is thus: 9 1 5 1 3 + 8 2 6 8 0 7 9 1 8 3 2 0 X10 (5.5) (10)Draw the constraint hypergraph for the puzzle. N EVR A L W Y S C1C2C3C4C5 X2 for correct alldiff node X2 for correct variable nodes X2 for correct aux nodes X2 for correct constraint edges between nodes X2 for correct alldiff edges. 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Question 6: 29 Marks Consider the problem of assigning registers on a central processing unit (CPU) to the variables in a program. Since a program may have many variables and there are a limited number of registers on the CPU, assigning registers to variables is an important problem. Since only certain variables are in use at different times during the execution of the program (vari- ables that are being used at a particular time are called alive), the real task is merely to ﬁgure out which alive variables to assign to the limited number of registers. This is a classic graph-colouring problem. For a certain program the following holds: 1. There are seven variables in use in the program. 2. Program variables A,B, and D are alive together. Program variables C,D,E, and F are alive together, and program variables A,E, and G are alive together. 3. There are four registers available for assignment to program variables. (6.1) (9)Deﬁne the variables for this CSP. X9 X = fA, B, C, D, E, F , Gg (6.2) (4)Deﬁne the domain for each variable in the CSP. Students can decide on any colour. Half mark eachX4 Dx2X = fR, G, B, Y g (6.3) (11)Deﬁne the constraints for the variables in the CSP. A 6= BX, A 6= DX, A 6= EX, A 6= GX, B 6= DX, C 6= DX, C 6= EX, C 6= F X, D 6= EX, D 6= F X, E 6= F X, G 6= E (6.4) (5)Provide the constraint graph for this problem. Does a solution exist? If no solution exists, explain what parameters from the problem would have to change in order to get to a solution. A solution does exist.X5 A B C D E FG Copyright ©UNISA 2021 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Solution SELF ASSESSMENT ASSIGNMENT Study material: Chapters 7, 8, 9, and 18. You may skip sections 6.6, 8.4, 9.3, 9.4. You only need to study 18.1, 18.2, and 18.3 Question 1 Exercise 7.10 c,f and g. Part c: Let P represent the sentence: P : (smoke ) ﬁre) ) (:smoke ) :ﬁre) We draw the truth table for P, where ‘s’ stands for ‘smoke’ and ‘f’ stands for ‘ﬁre’: s f s ) f :s :f :s ) :f P 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 0 0 0 1 1 1 1 1 1 0 0 1 1 Thus, P is satisﬁable since there is at least one model in which it is true. Part f: Let Q represent the sentence (Smoke ) Fire) ) ((Smoke ^ Heat) ) Fire). We draw the truth table for P, where ‘s’ stands for ‘smoke’, ‘f’ stands for ‘ﬁre’, and ‘h’ stands for ‘heat’: s f h s ) f s ^ h (s ^ h) ) f Q 0 0 0 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 Thus Q is valid, since it is true in all models. Part g: Let R represent the sentence: big _ dumb _ (big ) dumb). Then: R \u0011 big _ dumb _ (:big _ dumb) \u0011 big _ :big _ dumb. R is valid because (big _ :big) is valid and so is (big _ :big _ dumb) Thus R is satisﬁable since there is at least one model in which it is true. Question 2 Exercise 7.21 a and b. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 Part a: Suppose that [1, 1] is the lower-left corner square of the grid. The squares adjacent to [1, 1] are: [1, 2], [2, 2] and [2, 1]. The assertion that there are exactly two mines adjacent to [1, 1] is a dis- junction with three disjuncts, each one saying that two of the neighbours are true and the third neighbour is false. This is represented by the following sentence: (X12 ^ X22 ^ :X21) _ (X12 ^ :X22 ^ X21) _ (:X12 ^ X22 ^ X21) (1) Conversion to CNF: sentence 1 is in Disjunctive Normal Form (DNF). In other words it is a disjunc- tion of conjunctions of literals. It can be converted to a CNF sentence as follows. We temporarily ignore the third term of the sentence, and combine the ﬁrst two terms, namely (X12 ^ X22 ^ :X21) and (X12 ^ :X22 ^ X21), by using the law of distribution of _ over ^. This produces: (X12 _ X12) ^ (X12 _ :X22) ^ (X12 _ X21)^ (X22 _ X12) ^ (X22 _ :X22) ^ (X22 _ X21)^ (:X21 _ X12) ^ (:X21 _ :X22) ^ (:X21 _ X21) (2) The ﬁrst term of 2 is equivalent to X12 . Because this sentence is in CNF form, any clause containing X12 can be eliminated. Tautologies, namely (X22 _ :X22) and (:X21 _ X21), can also be eliminated. Therefore it reduces to: X12 ^ (X22 _ X21) ^ (:X21 _ :X22) (3) Now, combining sentence 3 with the third term of 1, by using the law of distribution of _ over ^, produces: (X12 _ :X12) ^ (:X12 _ X22 _ X21)^ (:X12 _ :X22 _ :X21)^ (X22 _ X12) ^ (X22 _ X21)^ (X22 _ :X22 _ :X21)^ (X21 _ X12) ^ (X21 _ X22)^ (X21 _ :X21 _ :X22) (4) Removing tautologies in sentence 4, such as (X22 _ :X22 _ :X21) , produces: (:X12 _ X22 _ X21) ^ (:X12 _ :X22 _ :X21)^ (X22 _ X12) ^ (X22 _ X21)^ (X21 _ X12) ^ (X21 _ X22) (5) Because sentence 5 is in CNF form, the ﬁrst term can be removed due to the presence of the fourth term. The last term can be removed because it is identical to the fourth. This results in the ﬁnal sentence: (:X12 _ :X22 _ :X21) ^ (X22 _ X12)^ (X22 _ X21) ^ (X21 _ X12) (6) This sentence expresses the following idea. The ﬁrst term ensures that at most two of the three neighbours are true. The last three terms ensure that at least two of the three neighbours are true. Part b: The easiest way to reply to this question is to construct a DNF sentence as in Part a, and convert it into a CNF sentence. There will be \u0000n k\u0001 = n! k!(n\u0000k) disjuncts, each one expressing the fact that k of n symbols are true and the others false. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Question 3 Convert the following propositional sentence to conjunctive normal form (CNF): :[A , (C _ E)) ) :((B ^ F ) ) :D)] :[(A , (C _ E)) ) :((B ^ F ) ) :D)] \u0011 :[:(A , (C _ E)) _ :((B ^ F ) ) :D)] (eliminate main implication) \u0011 ::(A , (C _ E)) ^ ::((B ^ F ) ) :D) (De Morgan) \u0011 (A , (C _ E)) ^ ((B ^ F ) ) :D) (eliminate double negation) \u0011 (A ) (C _ E)) ^ ((C _ E) ) A) ^ ((B ^ F ) ) :D) (eliminate biconditional) \u0011 (:A _ (C _ E)) ^ (:(C _ E) _ A) ^ (:(B ^ F ) _ :D) (eliminate all conditionals) \u0011 (:A _ (C _ E)) ^ ((:C ^ :E) _ A) ^ ((:B _ :F ) _ :D) (De Morgan) \u0011 (:A _ C _ E) ^ ((:C _ A) ^ (:E _ A)) ^ (:B _ :F _ :D) (Distributivity of _ over ^) \u0011 (:A _ C _ E) ^ (:C _ A) ^ (:E _ A) ^ (:B _ :F _ :D) The ﬁnal sentence is in Conjunctive Normal Form (CNF) and it is composed of 4 clauses. Question 4 Convert the following ﬁrst-order logic sentence to clause form: (8y)[(8x)[P(x)] ) (9x)[(8z)[Q(x, z)]_)(8z)[R(x, y, z)]]] • Eliminate implication: (8y)[:(8x)[P(x)] _ (9x)[(8z)[Q(x, z)] _ (8z)[R(x, y, z)]]] • Move : inwards (8y)[(9x)[:P(x)] _ (9x)[(8z)[Q(x, z)] _ (8z)[R(x, y, z)]]] • Standardize variables: The variable name x is used in the scope of two different quantiﬁers, so we change the name of one of them to avoid confusion when we drop the quantiﬁers. The same applies for the variable name z. (8y)[(9x)[:P(x)] _ (9u)[(8z)[Q(u, z)] _ (8v )[R(u, y, v )]]] Note that the scope of (8z) is the pred- icate Q(u, z), and the scope of (8v ) is the predicate R(u, y, v ). On the other hand, the scope of (8y ) is the whole formula. • Skolemize (8y)[[:P(f (y))] _ [(8z)[Q(g(y), z)] _ (8v )[R(g(y), y, v )]]] Here f and g are Skolem functions, and their arguments are all the universally quantiﬁed variables in whose scope the existential quantiﬁer appears. In this case, (9u) appears only in the scope of (8y). Note that the same variable u appears twice in the sentence, so we replace each occurrence of u with g(y). • Drop universal quantiﬁers: At this point, all remaining variables are universally quantiﬁed. Moreover, the sentence is equivalent to one in which all the universal quantiﬁers have been moved to the left: (8y)(8z)(8v )[[:P(f (y))] _ [Q(g(y), z)] _ [R(g(y), y, v )]] We can therefore drop the universal quantiﬁers::P(f (y)) _ Q(g(y), z) _ R(g(y ), y, v ) 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 The sentence is now in CNF and it has only one conjunct (one clause) consisting of a disjunction of three literals. Question 5 Consider the following English statements: • Anyone passing his history exam and winning the lottery is happy. • Anyone who studies or is lucky can pass his exams. • John did not study. • John is lucky. • Anyone who is lucky wins the lottery. (5.1) Translate the above English sentences to First Order Logic (FOL) statements. The sentences are translated as follows in FOL: 1. (8x)[(pass(x, history) ^ win(x, lottery)) ) happy (x)] 2. (8y)(8z)[(study(y) _ lucky(y )) ) pass(y, z)] 3. :study(john) 4. lucky(john) 5. (8w)[lucky (w) ) win(w, lottery)] It is important to standardize the variables (to use different variable names) to avoid confusion when dropping the universal quantiﬁers. (5.2) Convert the FOL statements obtained in 5.1 into clause form. The statements are converted as follows to clause form: 1. :pass(x, history) _ :win(x, lottery) _ happy (x) 2. :study(y) _ pass(y, z) 3. :lucky(y) _ pass(y, z) 4. :study(john) 5. lucky(john) 6. :lucky(w) _ win(w, lottery) Note that universal quantiﬁers have been dropped because all variables were univer- sally quantiﬁed. Skolem functions are introduced only to remove existential quantiﬁers. (See section 9.5 of R&N.) 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.3) Use resolution refutation to prove that John is happy. In order to use resolution refutation, we negate the goal, convert the negated goal to clause form if necessary, and add the resulting clause(s) to the set of premises (sentences 1 to 6 in Part 2. above). Here the goal is: happy (john). Therefore the negation of the goal is: :happy (john). We then resolve the premises together with the negated goal until the empty clause (Nil) is generated. 1. :pass(x, history) _ :win(x, lottery) _ happy (x) assumption 2. :study(y) _ pass(y , z) assumption 3. :lucky(y) _ pass(y, z) assumption 4. :study(john) assumption 5. lucky(john) assumption 6. :lucky(w) _ win(w, lottery) assumption 7. :happy(john) negation of goal 8. :win(x, lottery) _ happy(x) _ :lucky (x) 1&3, fx/yg, fhistory/zg 9. :win(john, lottery) _ happy(john) 5&8, fjohn/xg 10. :win(john, lottery) 9&7 11. win(john, lottery) 5&6, fjohn/wg 12. Nil 10&11 We have shown that the negation of the goal together with the premises produce a contradiction (empty clause). Therefore the goal happy(john) is true, which translates to ‘John is happy’. 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 x1 x2 x3 f(x1, x2, x3) 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 Table 1: Boolean function table Question 6 (6.1) Convert the Boolean function in table 1 into a decision tree: No information gain values were given, so it becomes a matter of picking the sequence in which the variables are to be evaluated. The next step would be to simplify the decision tree by consolidating equivalent leaf nodes. Variable order x1, x2, x3: x1 x2 x3 1 0 0 1 0 x3 1 0 1 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 This can be simpliﬁed to: 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x1 x2 x3 1 0 0 1 0 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 Variable order x1, x3, x2: x1 x3 1 0 x2 0 0 1 1 1 0 x3 x2 1 0 0 1 0 x2 0 0 1 1 1 1 Variable order x2, x1, x3: x2 x3 x2 1 0 0 1 0 x2 1 0 0 1 1 0 x3 1 00 x2 0 0 1 1 1 1 Variable order x2, x3, x1: 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 x2 x3 1 0 0 1 0 x3 x1 1 0 0 1 0 1 1 1 Variable order x3, x2, x1: x3 x2 1 0 x1 1 0 0 1 1 0 x2 0 0 1 1 1 Variable order x3, x1, x2: x3 x1 1 0 x2 1 0 0 1 1 0 x1 x2 0 0 1 1 0 x2 0 0 1 1 1 1 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (6.2) When we construct a decision tree without the beneﬁt of gain values, the order in which we evaluate the variables is important. Why? It may be possible to consolidate leaf nodes with similar values to produce a smaller, more compact tree. Question 7 The National Credit Act introduced in South Africa in 2007 places more responsibility on a bank to determine whether the loan applicant will be able to afford it. Blue Bank has a table of information on 14 loan applications they have received in the past. (7.1) Use the information in this table to construct a decision tree that will assist the bank in determining the RISK associated with a new loan application. No. Credit history Debt Collateral Income RISK 1 Bad High No < R15k High 2 unknown High No R15k - R35k High 3 unknown Low No R15k - R35k Medium 4 unknown Low No < R15k High 5 unknown Low No > R35k Low 6 unknown Low Yes > R35k Low 7 Bad Low No < R15k High 8 Bad Low Yes > R35k Medium 9 Good Low No > R35k Low 10 Good High Yes > R35k Low 11 Good High No < R15k High 12 Good High No R15k - R35k Medium 13 Good High No > R35k Low 14 Bad High No R15k - R35k High Table 2: Risk information table In order to determine the information gain of any different attributes of a certain collec- tion of data, the calculation of entropy is important – the notion of information gain is deﬁned in terms of entropy. Entropy can be described as a measure of impurity of an arbitrary collection of exam- ples. Russell & Norvig describe entropy as a measure of the uncertainty of a random variable, and mention that the acquisition of information corresponds to a reduction in entropy. Namely a random variable with only one value has no uncertainty and thus its entropy is deﬁned as zero; thus we gain no information by observing its value. For any attribute A, if no information can be gained regarding the decision from at- tribute A, then the entropy of attribute A is equal to 0. If all the members of a class are split equally by any attribute A, then the entropy of A is 1. For any collection S the maximum entropy value is 1. Formally, the entropy of a random variable V with value vk , each with probability P(vk ) 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 is deﬁned as: H(V ) = nX k=1 \u0000P(vk )log2 1 P(vk ) = \u0000 nX k=1 P(vk )log2 1 P(vk ) (7) Maybe a more comprehensible way of deﬁning the entropy of any collection S is as follows: Entropy(S) = \u0000 cX i=1 pilog2(pi) (8) This corresponds to what Russell and Norvig refer to as information content. If the possible answers vi have probabilities P(vi) then the information content I of the actual answer is given by: I(P(v1), ... , P(vn)) = nX i=1 \u0000P(vi)log2P(vi) (9) You may see the negative as a way of making the values of pilog2(pi) positive because all pi < 1, i.e. each represents a probability of the sample set. In what follows we will use the ID3 algorithm to develop our decision tree. Our collection of 14 examples S, has four meaningful attributes (Credit History, Debt, Collateral, Income), and a 3-wise classiﬁcation (LOW, MEDIUM, HIGH). Since there are no repeat values in the No. attribute it plays no role in the classiﬁcation and can be ignored (although we will show the No. attribute in further tables so that we know which examples we are working with). For purposes of clarity in the formulae, we will shorten the attribute labels and values as follows: • Credit History = CH • Debt = D • Collateral = C • Income = I • BAD = B • UNKNOWN = U • GOOD = G • HIGH = H • LOW = L • <R15K = 15K • R15K-R35K = 15K-35K • >R35K = 35K 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace • MEDIUM = M We will also not be repeating calculations at every step: we show the full set of calcu- lations for the ﬁrst level of the tree, after that we will only show the ﬁnal result of the calculation. Summarise the example set, S = f1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14g, as: S = [5L, 3M, 6H] We start by calculating the Entropy for our set of examples: Entropy(S) = 3X i=1 \u0000pilog2pi = \u0000( 5 14)log2( 5 14 ) \u0000 ( 3 14 )log2( 3 14) \u0000 ( 6 14)log2( 6 14 ) = \u0000( 5 14)(log25 \u0000 log214) \u0000 ( 3 14 )(log23 \u0000 log214) \u0000 ( 6 14 )(log26 \u0000 log214) = \u0000( 5 14) \u0012 log5 log2 \u0000 log14 log2 \u0013 \u0000 ( 3 14) \u0012 log3 log2 \u0000 log14 log2 \u0013 \u0000 ( 6 14) \u0012 log6 log2 \u0000 log14 log2 \u0013 = 0.531 + 0.476 + 0.524 = 1.531(max = 1.585) We have to determine the information gain (IG) of the different attributes in order to select the best choice for the root node. The information gain measures the expected reduction of entropy – the higher the IG, the higher the expectation of reduction of entropy. In what follows we calculate the information gain for each of the four attributes. Credit History: Values (CH ) = B, G, U S = [5L, 3M, 6H] SB [0L, 1M, 3H] SG [3L, 1M, 1H] SU [2L, 1M, 2H] Entropy(SB) = \u0000(0 4 )log2( 0 4) \u0000 ( 1 4)log2(1 4 ) \u0000 (3 4 )log2( 3 4) = 0.811 Entropy(SG) = \u0000( 3 5)log2(3 5 ) \u0000 (1 5 )log2( 1 5) \u0000 ( 1 5)log2(1 5 ) = 1.371 Entropy(SU) = \u0000( 2 5 )log2( 2 5) \u0000 (1 5 )log2( 1 5) \u0000 ( 2 5)log2(2 5 ) = 1.522 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 Gain(S, CH) = Entropy(S) \u0000 X v 2Values(A) jSv j jSj Entropy(Sv ) = Entropy(S) \u0000 ( 4 14 )Entropy(SB) \u0000 ( 5 14 )Entropy(SG) \u0000 ( 5 14 )Entropy(SU) = 1.531 \u0000 ( 4 14 )0.811 \u0000 ( 5 14 )1.371 \u0000 ( 5 14)1.522 = 0.266 Debt: Values(D) = L, H S = [5L, 3M, 6H] SL [3L, 2M, 2H] SH [2L, 1M, 4H] Entropy(SL) = \u0000( 3 7)log2(3 7 ) \u0000 ( 2 7 )log2( 2 7) \u0000 (2 7 )log2( 2 7 ) = 1.557 Entropy(SH) = \u0000( 2 7)log2(2 7 ) \u0000 (1 7 )log2( 1 7) \u0000 ( 4 7)log2(4 7 ) = 1.379 Gain(S, D) = Entropy(S) \u0000 ( 7 14)Entropy(SL) \u0000 ( 7 14 )Entropy(SH) = 1.531 \u0000 ( 7 14 )1.557 \u0000 ( 7 14)1.379 = 0.063 Collateral: Values (C) = Y,N S = [5L, 3M, 6H] SY [2L, 1M, 0H] SN [3L, 2M, 6H] Entropy(SY ) = \u0000( 2 3)log2(2 3 ) \u0000 (1 3 )log2( 1 3) \u0000 ( 0 3)log2(0 3 ) = 0.918 Entropy(SN) = \u0000( 3 11)log2( 3 11 ) \u0000 ( 2 11 )log2( 2 11) \u0000 ( 6 11)log2( 6 11 ) = 1.435 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Gain(S, C) = Entropy(S) \u0000 ( 3 14 )Entropy(SY ) \u0000 ( 11 14)Entropy(SN) = 1.531 \u0000 ( 3 14)0.918 \u0000 ( 11 14)1.435 = 0.207 Income: Values (I ) = 15 , 15-35, 35 S = [5L, 3M, 6H] S15 [0L, 0M, 4H] S15\u000035 [0L, 2M, 2H] S35 [5L, 1M, 0H] Entropy(S15) = \u0000(0 4 )log2( 0 4) \u0000 ( 0 4)log2(0 4 ) \u0000 (4 4 )log2( 4 4) = 0 Entropy(S15\u000035) = \u0000( 0 4)log2(0 4 ) \u0000 (2 4 )log2( 2 4) \u0000 ( 2 4)log2(2 4 ) = 1 Entropy(S35) = (5 6 )log2( 5 6) \u0000 (1 6 )log2( 1 6 ) \u0000 ( 0 6)log2(0 6 ) = 0.650 Gain(S, I) = Entropy(S) \u0000 ( 4 14)Entropy(S15) \u0000 ( 4 14 )Entropy(S15\u000035) \u0000 ( 6 14 )Entropy(S35) = 1.531 \u0000 ( 4 14 )0 \u0000 ( 4 14 )1 \u0000 ( 6 14)0.650 = 0.967 Attribute Income provides the highest information gain (0.967), i.e. the best prediction for our target attribute, Risk. Income becomes the root node of our decision tree. Income < 15K 15K \u0000 35K > 35K The ID3 algorithm now performs a recursion with the three subsets of our exam- ples, based on the three possible values of the Income attribute (<R15K, R15K-R35K, >R35K). The ﬁrst subset, corresponding to Income = f< R15K g, is: 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 No. Credit History Debt Collateral Income RISK 1 BAD HIGH NO < R15k HIGH 4 UNKNOWN LOW NO < R15k HIGH 7 BAD LOW NO < R15k HIGH 11 GOOD HIGH NO < R15k HIGH We notice that the target attribute is the same for all four of our examples, i.e. all four examples produce the same target value, HIGH. We have our ﬁrst leaf node, labelled HIGH. Income HIGH < 15K 15K \u0000 35K > 35K The second subset, corresponding to Income = fR15K \u0000 R35K g, is: No. Credit History Debt Collateral Income RISK 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM 12 GOOD HIGH NO R15K-R35K MEDIUM 14 BAD HIGH NO R15K-R35K HIGH Our subset collection of 4 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classiﬁcation (MEDIUM, HIGH): S15K \u000035K = f2, 3, 12, 14g = [2M, 2H]. We start by calculating the Entropy for this subset: Entropy(S15K \u000035K ) = 2X i=1 \u0000pilog2pi = \u0000(2 4 )log2( 2 4) \u0000 ( 2 4)log2(2 4 ) = 0.5 + 0.5 = 1 Calculate the information gain for the attributes of the subset (entropy for each attribute is calculated in the same fashion as above). Credit History: Gain(S15K \u000035K , CH) = Entropy(S15K \u000035K ) \u0000 ( 1 4)Entropy(SB) \u0000 (1 4 )Entropy(SG) \u0000 (2 4 )Entropy(SU) = 1 \u0000 (1 4 )0 \u0000 ( 1 4 )0 \u0000 ( 2 4)1 = 0.5 15 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Debt: Gain(S15K \u000035K , D) = Entropy(S15K \u000035K ) \u0000 (1 4 )Entropy(SL) \u0000 ( 3 4)Entropy(SH) = 1 \u0000 ( 1 4)0 \u0000 ( 3 4)0.918 = 0.312 Collateral: Gain(S15K \u000035K , C) = Entropy(S15K \u000035K ) \u0000 ( 0 4)Entropy(SY ) \u0000 (4 4 )Entropy(SN) = 1 \u0000 (0 4 )0 \u0000 (4 4 )1 = 0 Attribute Credit History provides the highest Information Gain in this subset (0.5). Thus it becomes our next decision node. Income HIGH < 15K Credit History Bad Good Unknown 15K \u0000 35K > 35K The third subset, corresponding to Income = f> R35kg, is then used. No. Credit History Debt Collateral Income RISK 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW 8 BAD LOW YES >R35K MEDIUM 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 6 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classiﬁcation (LOW, MEDIUM): S35K = f5, 6, 8, 9, 10, 13g = [5L, 1M] 16 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 Start by calculating the Entropy for this subset: Entropy(S35K ) = 2X i=1 \u0000pi log2pi = \u0000( 5 6 ) log2 (5 6 ) \u0000 (1 6 ) log2 ( 1 6) = 0.65 We now proceed to calculate the information gain for each of the three attributes in the subset: Credit History: Values(CH) = B, G, U S35K = [5L, 1M] SB [0L, 1M] SG [3L, 0M] SU [2L, 0M] Entropy(SB) = \u0000( 0 1)log2(0 1 ) \u0000 (1 1 )log2( 1 1) = 0 Entropy(SG) = \u0000( 3 3)log2(3 3 ) \u0000 (0 3 )log2( 0 3) = 0 Entropy(SU) = \u0000( 2 2)log2(2 2 ) \u0000 (0 2 )log2( 0 2) = = 0 Gain(S35K , CH) = Entropy(S35K ) \u0000 ( 1 6)Entropy(SB) \u0000 (3 6 )Entropy(SG) \u0000 (2 6 )Entropy(SH) = 0.65 \u0000 ( 1 6)0 \u0000 (3 6 )0 \u0000 (2 6 )0 = 0.65 Debt: Values(D) = L, H S35K = [5L, 1M] SL [5L, 1M] SH [2L, 0M] 17 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Entropy(SL) = \u0000( 3 4)log2( 3 4 ) \u0000 ( 1 4)log2(1 4 ) = 0.811 Entropy(SG) = \u0000(2 2)log2( 2 2 ) \u0000 ( 0 2)log2(0 2 ) = 0 Gain(S35K , D) = Entropy(S35K ) \u0000 (4 6 )Entropy(SL) \u0000 ( 2 6)Entropy(SH) = 0.65 \u0000 (4 6 )0.811 \u0000 ( 2 6)0 = 0.109 Collateral: Values(D) = Y , N S35K = [5L, 1M] SY [2L, 1M] SN [3L, 0M] Entropy(SL) = \u0000(2 3 )log2( 2 3) \u0000 ( 1 3)log2(1 3 ) = 0.918 Entropy(SG) = \u0000(3 3 )log2( 3 3) \u0000 ( 0 3)log2(0 3 ) = 0 Gain(S35K , D) = Entropy(S35K ) \u0000 (3 6 )Entropy(SY ) \u0000 ( 3 6)Entropy(SN) = 0.65 \u0000 ( 3 6 )0.918 \u0000 (3 6 )0 = 0.191 In summary: Gain(S35K , CH) = 0.65 Gain(S35K , D) = 0.109 Gain(S35K , Collateral) = 0.191 Attribute Credit History provides the highest Information Gain in this subset and be- comes the decision node on this branch of the decision tree. 18 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 Income HIGH < 15K Credit History Bad Good Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K The algorithm continues with recursion to the next level. The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = Bad provides a single example (14). No. Credit History Debt Collateral Income RISK 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: HIGH. Income HIGH < 15K Credit History HIGH Bad Good Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = Good is also a single example (12). No. Credit History Debt Collateral Income RISK 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: MEDIUM. 19 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History HIGH Bad MEDIUM Good Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = Unknown has two examples (2,3). No. Credit History Debt Collateral Income RISK 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collat- eral), and a binary classiﬁcation (MEDIUM, HIGH shortened for clarity to M,H): SUnknown = f2, 3g = [1M, 1H]. We again calculate the entropy for the subset: Entropy(S) = \u0000( 1 2)log2(1 2 ) \u0000 ( 1 2)log2( 1 2) = 1 Debt Values(D) = L, H SUNKNOWN = [1L, 1M] SL [2L, 1M] SH [3L, 0M] 20 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 Entropy(SL) = \u0000( 1 1)log2( 1 1 ) \u0000 ( 0 1)log2(0 1 ) = 0 Entropy(SH) = \u0000(0 1)log2( 0 1 ) \u0000 ( 1 1)log2(1 1 ) = 0 Gain(SUNKNOWN, D) = Entropy(SUNKNOWN) \u0000 (1 2)Entropy(SL) \u0000 ( 1 2)Entropy(SH) = 1 \u0000 ( 1 2)0.918 \u0000 (1 2 )0 = 1 Collateral Values(D) = N SUNKNOWN = [1M, 1H] SN [1M, 1H] Entropy(SN) = \u0000( 1 2)log2(1 2 ) \u0000 (1 2 )log2( 1 2) = 1 Gain(SUNKNOWN, C) = Entropy(SUNKNOWN) \u0000 ( 2 2)Entropy(SN) = 1 \u0000 (2 2 )1 = 0 In summary: Gain(SUNKNOWN, D) = 1 Gain(SUNKNOWN, Collateral) = 0 Debt gives us perfect information gain, and thus becomes the next decision node. 21 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History HIGH Bad MEDIUM Good DEBT HIGH LOW Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K We return to credit history (we ﬁrst ﬁnish all the nodes on the same level). The subset of Credit History that corresponds to the Income = ¿R35K and Credit History = Bad contains only 1 example (8). No. Credit History Debt Collateral Income RISK 8 BAD LOW YES >R35K MEDIUM We thus have another leaf node: MEDIUM. Income HIGH < 15K Credit History HIGH Bad MEDIUM Good DEBT HIGH LOW Unknown 15K \u0000 35K Credit History MEDIUM Bad Good Unknown > 35K 22 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 The subset of Credit History that corresponds to Income = >R35K and Credit History = Good provides three examples (9,10,13): No. Credit History Debt Collateral Income RISK 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 3 examples S, has two meaningful attributes (Debt, Collat- eral), and a single classiﬁcation (Low). Hence we again have a leaf node LOW. Income HIGH < 15K Credit History HIGH Bad MEDIUM Good DEBT HIGH LOW Unknown 15K \u0000 35K Credit History MEDIUM Bad LOW Good Unknown > 35K The subset of Credit History that corresponds to the Income = >R35K and Credit History = Unknown is provides 2 examples (5,6). No. Credit History Debt Collateral Income RISK 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collat- eral), and a single classiﬁcation (Low). Hence we again have a leaf node LOW. 23 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History HIGH Bad MEDIUM Good DEBT HIGH LOW Unknown 15K \u0000 35K Credit History MEDIUM Bad LOW Good LOW Unknown > 35K We can now do the last set of calculations. With Debt = High we have only one exam- ple left (2), which makes this a leaf node. No. Credit History Debt Collateral Income RISK 2 UNKNOWN HIGH NO R15K-R35K HIGH Similarly, when Debt = Low we have one example left (3). This creates the ﬁnal leaf node. No. Credit History Debt Collateral Income RISK 3 UNKNOWN LOW NO R15K-R35K MEDIUM These last two steps complete our decision tree (note that Collateral plays no role in the decision based on this decision tree). 24 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2021 Income HIGH < 15K Credit History HIGH Bad MEDIUM Good DEBT HIGH HIGH MEDIUM LOW Unknown 15K \u0000 35K Credit History MEDIUM Bad LOW Good LOW Unknown > 35K Copyright ©UNISA 2021 25 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 1 Solution Unique Assignment Number: 757471 Study material: Chapters 1 through 4. You may skip sections 4.2 and 4.5. Important: When we use the phrase `de\fne' (particularly in Question 2), we are looking for a formal de\fnition using some form of formal notation, and not simply an English description or de\fnition. For example: `De\fne the initial state for an agent in Johannesburg'. Answer: In(Johannesburg). `De\fne the actions available to this agent given that the agent simply moves between major metropolitan areas'. Answer: Actions(In(Johannesburg)) = fGo(Bloemontein), Go(Durban), . . . g. When we want an English de\fnition we will explicitly ask for it. Question 1 (1.1) Consider an agent that is designed to deliver emergency supplies to miners that are trapped in a mine. The agent is small enough to navigate through most small openings, but can burrow through soft rock when necessary, because there is a lot of sand and dirt in the shafts, the agent may slip occasionally when attempting to move. Once the agent detects that it has delivered medical supplies to a survivor, it returns to the rescue services team. These agents are typically only deployed once it has been determined that no more shifts in the earth is possible, and the survivors' location has been pinned down (survivors won't move around). Choose from among the following environmental descriptions, and justify your choices in each case. Answer the following questions. Justify your answer in each case. (a) Is the environment deterministic, or stochastic? The agent can move through the environment easily enough, however, one has to keep in mind that moving around in the area may not result in the desired outcome. Burrowing may de\fnitely not result in predictable outcomes. This is a stochastic environment. (b) Is the environment discrete, or continuous? Given the information above, the environment is continuous. Even though the con\fguration of the mine shafts (rubble \flling the shafts) may not change, and the survivors stay put, the agent's location sweeps through a range of values. (c) Is the environment static, or dynamic? Based on the information, the environment does not change while the agent is deliberating. It is thus static. (1.2) Is this an example of a model-based, or re\rex-based agent? Justify your answer. Model-based. The agent has to keep track of its environment in order to plan its search. It also has to keep track of how to get back to the rescuers. Thus it cannot be a re\rex agent. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2020 Question 2 Four soccer teams have to take part in a round-robin tournament. The problem is to determine a schedule of matches so that each team plays each other team once in the minimum number of rounds. Matches can take place in parallel. There are many ways to solve this problem, one of which is to specify it as a state space and search for the goal state. Say we number the teams 1, 2, 3 and 4. For each team, we can keep track of which other teams it has played so far by means of a set. So for team 1, the set f2; 4g means it has played against teams 2 and 4 so far. The entire state of which teams have played which other teams can then be represented by an ordered 4-tuple, where each element is a set of the teams that a team has played. The start/initial state is therefore sI = (fg; fg; fg; fg) because initially, team 1 has not played any other teams, team 2 hasn't played any other teams, etc. (2.1) What is the goal state of the state space? sG = (f2; 3; 4g; f1; 3; 4g; f1; 2; 4g; f1; 2; 3g) (2.2) De\fne an action called Schedule which can be applied to a state to get to a successor state. Hint: it helps to consider how you want the action to transform a state into a successor state. Explain what an applicable action means (the rules for transforming a state into another state) for your Schedule action. Let Schedule(x) represent the matching of team 1 with team x. The other two teams that must play against one another can be determined from it. Schedule is an applicable action to state s if x 2 f2; 3; 4gbut x =2 S[1]. (2.3) What are the successor states of the start state? S1;1 = (f2g; f1g; f4g; f3g); S1;2 = (f3g; f4g; f1g; f2g); S1;3 = (f4g; f3g; f2g; f1g) (2.4) What are the applicable actions to the state S1;1 = (f2g; f1g; f4g; f3g)? a3 = Schedule(3); and a4 = Schedule(4). (2.5) Specify the transition model for the applicable actions you speci\fed for state S1;1 above. Result(S1;1; a3) 7! S2;1 = (f2; 3g; f1; 4g; f1; 4g; f2; 3g) Result(S1;1; a4) 7! S2;2 = (f2; 4g; f1; 3g; f2; 4g; f1; 3g) (2.6) Calculate the size of the search space (include the initial state in your calculation). Justify your answer. The tree state space for this is recursively de\fned as follows: For a grouping of n teams, the number of nodes on each level is. 1. Base case: l0 = 1, 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 2. Recursive case: lk = (n \u0000 k) \u0002 lk\u00001 The total number of nodes is thus Pn k=0 lk = 1 + 3 + 6 + 6 = 15. Visually: Question 3 (3.1) Explain how a Depth First Search (DFS) ensures that it always expands the deepest node \frst. Provide an example to aid your discussion. DFS goes about searching in one of two ways: either by implementing its frontier explicitly as a stack, or by searching recursively thereby employing the function call stack as its implicit stack. When implemented as an explicit stack, the last node's generated children are placed on the stack and will therefor be chosen for expansion \frst, this placement of the last nodes children in the frontier results in the deepest node being expanded \frst. If the implementation is recursive, it simply means that the algorithm calls itself recursively on the children nodes it generates from a particular node. This means it carries on down the tree expanding children nodes as it goes along. It thus uses the execution call stack as its queue. Example evaluated based on discussion. (3.2) Explain when one might want to choose DFS over Breadth First Search (BFS). (Hint: In which version of the algorithm does one have an advantage over the other?) DFS has a clear space complexity advantage over BFS when a tree search is per- formed. Question 4 Consider the search tree in Figure 1. Show the order in which the nodes will be expanded at each level (start with level 0 and continue until the goal test is successful), given that IDS is used. Assume the goal node is B, and that nodes are expanded from left to right (M is expanded before E and so on). (Hint: make sure you understand the di\u000berence between expansion and generation, and also that you understand when goal checks occur.) 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2020 O M D K I C J H E L F G B N A Figure 1: Search Tree (Iterative Deepening Search (IDS)) So expansion means we apply legal actions to a chosen node { this, by de\fnition, means that our order look somewhat di\u000berent from what one may expect. Also, note that the IDS is a repeated invocation of the depth limited search. In the depth limited search, once we generate a node, we recursively call the depth limited search on that node. Thus, goal state checking happens immediately after generation for each node. In general, the children of nodes that are expanded are thus goal checked. 1. Limit 0: (No expansion { O is just goal tested) 2. Limit 1: O (M and E are just goal tested, not expanded) 3. Limit 2: O M E 4. Limit 3: O M D C E L 5. Limit 4: None, search terminates once L is expanded { once L is expanded, F will be generated and goal tested on the recursive call. Visually, this is what happens (squares are goal tests and circles are expansions). Limit 0: O Limit 1: O M E 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Limit 2: O M D C E L B Limit 3: O M D K I C J H E L F Question 5 Consider the graph provided in Figure 2, and answer the questions that follow. The step cost between nodes is provided next to the edges. (5.1) Provide an example to show that a straight line distance used as a heuristic in a greedy best-\frst search may not provide an optimal solution. Since a SLD heuristic provides the shortest direct distance to the goal from any given node, a greedy search may select nodes on the path that appear closer to the goal but that have higher step costs. Greedy searches of this nature ignore step cost and focus solely on the heuristic cost. A simple example may be as follows: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2020 O B G H A E M DK J FL N C I 227 248 197 471 143 170156 262 142 280 112 241 257 388302 35 241 Figure 2: Search A B C D E 99 80 97 101 211 Node SLD to D A 253 B 193 C 100 E 176 A greedy best \frst search would \fnd a path through E, which is longer than the path through B, and C. (5.2) Perform a Uniform Cost Search (UCS) on the graph. The start node is N and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 N(^g = 0) . . . . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^g value. Step Node expanded Frontier 1 N(^g = 0) 2 N K-N(^g = 0) 3 K-N D-K-N(^g = 527), O-K-N(^g = 564) 4 D-K-N I-D-K-N(^g = 670), O-K-N(^g = 564), E-D-K- N(^g = 812) 5 I-D-K-N A-I-D-K-N(^g = 1060), O-K-N(^g = 564), E-D-K- N(^g = 812) 6 O-K-N G-O-K-N(^g = 720), A-I-D-K-N(^g = 1060), E-D- K-N(^g = 812) 7 G-O-K-N A-I-D-K-N(^g = 1060), E-D-K-N(^g = 812) 8 E-D-K-N C-E-D-K-N(^g = 947), A-I-D-K-N(^g = 1060), 9 C-E-D-K-N H-C-E-D-K-N(^g = 1188), L-C-E-D-K-N(^g = 1239), A-I-D-K-N(^g = 1060), 10 A-I-D-K-N H-C-E-D-K-N(^g = 1188), L-C-E-D-K-N(^g = 1239), M-A-I-D-K-N(^g = 1172), 11 M-A-I-D-K-N H-C-E-D-K-N(^g = 1188), L-C-E-D-K-N(^g = 1204), F-M-A-I-D-K-N(^g = 1634), 12 H-C-E-D-K-N B-H-C-E-D-K-N(^g = 1330), J-H-C-E-D-K-N(^g = 1468), L-C-E-D-K-N(^g = 1204), F-M-A-I-D-K- N(^g = 1634), 13 L-C-E-D-K-N B-H-C-E-D-K-N(^g = 1330), J-H-C-E-D-K-N(^g = 1468), F-L-C-E-D-K-N(^g = 1239), F-M-A-I-D-K- N(^g = 1634), 14 F-L-C-E-D-K-N B-H-C-E-D-K-N(^g = 1330), J-H-C-E-D-K-N(^g = 1468), F-M-A-I-D-K-N(^g = 1634), (5.3) Perform an A \u0003 search on the graph in Figure 2. The start node is N and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use table 1 for the ^h values for each node in the graph. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 N(^g = 0, ^h = 20, ^f = 20) . . . . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^f value. 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2020 Node Estimated COST to goal A 550 B 660 C 280 D 550 E 420 F 0 G 570 H 510 I 570 J 270 K 760 L 30 M 450 N 800 O 600 Table 1: Estimated Distance to Goal for A \u0003 search. Remember that the cost (both step and path) are calculations with respect to the e\u000bort expended in order to reach a node. In a navigation setting, for example, this could mean distance, time, or fuel. In other settings it might mean something else: hourly wages paid, volume of paint used, compute cycles on a cloud CPU, number of hours inoperative, etc. Nodes can thus also just be a snapshot of the world, and need not just be location on a map { think about it carefully: if your search leads you to node X, all you've done is created a snapshot of a potential world in which you (or the agent) are in world-state represented by node X. IF X is a city on a map, and the search has plotted a path to X, it is simply a state in which the agent has travelled to reach X { and thus simply a snapshot of the potential world. (For example, we can use A\u0003 to solve the Australian map colouring CSP.) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Step Node expanded Frontier 1 N( ^f = 800, ^g = 0, ^h = 800) 2 N K-N (1062,302,760) 3 K-N O-K-N (1164,564,600), D-K-N (1079,529,550) 4 D-K-N O-K-N (1164,564,600), E-D- K-N (1197,777,420), I-D-K-N (1242,672,570) 5 O-K-N G-O-K-N (1290,720,570), E-D- K-N (1197,777,420), I-D-K-N (1242,672,570) 6 E-D-K-N G-O-K-N (1290,720,570), C-E- D-K-N (1227,947,280), I-D-K-N (1242,672,570) 7 C-E-D-K-N G-O-K-N (1290,720,570), L-C-E- D-K-N (1234,1204,30), H-C-E- D-K-N (1698,1188,510), I-D-K-N (1242,672,570) 8 L-C-E-D-K-N G-O-K-N (1290,720,570), F-L-C- E-D-K-N (1239,1239,0), J-L-C- E-D-K-N (1715,1445,270), H-C-E- D-K-N (1698,1188,510), I-D-K-N (1242,672,570) 9 F-L-C-E-D-K-N G-O-K-N (1290,720,570), J-L-C- E-D-K-N (1715,1445,270), H-C-E- D-K-N (1698,1188,510), I-D-K-N (1242,672,570) Question 6 A magic square is a square of n \u0002 n cells, and which has some very interesting properties: all the rows, columns, and diagonals, when summed, adds up to the magic constant. The magic constant is calculated as follows: M = n(n2 + 1) 2 Thus, for n = 3, M = 3(32+1) 2 = 15. The entries in the square are limited to the integers between 1 and n2. For example, a solution for n = 3 is given in Figure 3. It is easy to verify that every row, column, and diagonal in the above example adds up to 15. Using local search algorithms, we can perform a search as follows: \u000f Initialise a board with digits between 1 and n 2 placed randomly, \u000f De\fne an objective function to aid the local search, \u000f Generate a successor state from the current state by randomly swapping two values 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2020 4 3 8 9 5 1 2 7 6 Figure 3: Magic Square for n = 3 \u000f An optimum (minimum/maximum) is considered a goal. Consider the random start state given in Figure 4 (we represent the state graphically to aid your e\u000bort, and you are welcome to provide graphical representations of successor states if asked): 5 3 8 9 4 6 1 7 2 Figure 4: Magic Square for n = 3 (6.1) Provide a good objective function that can be used as a minimizer (i.e. a global minimum, a loss function) for the problem. Hint: 1. An objective function (also called either a loss, or reward function) is a function that maps the current state to some linear value which can be used to judge the \ftness or goodness of the state. When we want to avoid loss, we de\fne an objective function with respect to loss, and we try to minimize loss by minimising the evaluation of the state using the objective function (i.e. we look for a state that results in the smallest value when evaluated using the objective function). When we want reward, we de\fne an objective function with respect to reward and we try to maximize the objective function. 2. First write down the function in plain English, and then provide the mathematical equation for it. 3. Use the rows, columns, and diagonals in the state as part of your equation. The simplest solution to this problem is to use a function that uses the di\u000berence between the actual column, row, and diagonals and the ideal. We square the values in order to compensate for negative values. We de\fne the following 1. Ci; i 2 f1; 2; : : : ; ng is the sum of column i. 2. Rj; j 2 f1; 2; : : : ; ng is the sum of row j 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 3. Dk; k 2 f1; 2g is the sum of diagonal k Our objective function is thus: O(S) = nX i=1 (15 \u0000 Ci) 2 + nX j=1 (15 \u0000 Rj)2 + 2X k=1(15 \u0000 Dk) 2 Each state S is thus evaluated, and the algorithm will try to minimise O(S). (6.2) Now that you have de\fned your objective function, use it to evaluate the start state as provided in Figure 4. Show your calculations. Our magic square sums look as follows 13 5 3 8 16 9 4 6 19 1 7 2 10 15 14 16 11 Our function thus evaluates to: O(S) = 02 + 1 2 + \u00001 2 + \u00001 2 + \u00004 2 + 5 2 + 4 2 + \u00001 2 = 0 + 1 + 1 + 1 + 16 + 25 + 16 + 1 = 61 (6.3) A hill-climb/hill-descent local search generates a series of successors, and takes the best one from among them (using the objective function). Beginning from the initial state in Figure 4, provide two successors, one that is worse, and one that is an improvement. Show why the successor is better, or worse by using the objective function to evaluate it. Remember: generate all possible successors, and choose the better/worse from among them. Remember, a successor state is generated by randomly swapping two entries. Better: 5 3 8 9 4 2 1 7 6 This evaluates to: O(S) = \u00001 2 + 02 + 12 + 02 + 12 \u0000 1 2 + 22 + 02 = 1 + 1 + 1 + 1 + 4 = 8 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2020 Worse: 5 3 8 2 4 6 1 7 9 This evaluates to: O(S) = \u00001 2 + 32 + \u00002 2 + 72 + 12 \u0000 8 2 + \u00003 2 + 22 = 1 + 9 + 4 + 49 + 1 + 64 + 9 + 4 = 141 (6.4) Suppose we use simulated annealing to solve the puzzle. Use a starting value of T = 100, and a discounting value of 0:9. Provide the new T and \u0001E values for the better state. Also provide the T , \u0001E and probability for accepting the worse state. . For the better state T is set to 100 at the end of the loop. \u0001E = 56. For the worse state T = 100, \u0001E = \u000077 which means we choose the board with probability: e \u000077=100 = 0:46 Copyright c\rUNISA 2020 (v2020.1.1) 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 2 Solution Unique Assignment Number: 879267 Study material: Chapters 5, 6, 7, and 8. You may skip sections 5.5, 5.6, and 5.7, 7.6, and 8.4. Question 1 (1.1) Clearly explain what an evaluation function is, and why it is used during adversarial searches. An evaluation function provides the apparent value of a state s. It is thus an estimate of the ultimate utility of the most likely terminal state reached from s. (1.2) Is the ideal strategy only available if we have perfect information? Explain your answer. No. Agents can still get the ideal strategy when playing without all the informa- tion. This means the ideal strategy includes the notion of limited information, however, an agent that has perfect information will most likely outperform and agent that has limited/imperfect information for the same problem. (1.3) Explain how forward pruning works. Provide at least one approach to forward pruning in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering them. Beam search [others are also considered] only considers a sample of the best moves at each ply, but this may lead to the best move being pruned away. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we prune. Otherwise minimax is an exhaustive search (for the parameters such as depth { plys { it is con\fgured for) and node orders do not matter. Question 2 Consider Figure 1 and answer the questions that follow. (The utility value of the leaf nodes are provided below the in brackets in the leaf node.) (2.1) Provide the minimax values for all the nodes. A = 7, B = 7, C = 6, E = 9, G = 6 (2.2) Which move should MAX make? Explain your answer. B. The utility value for MAX for move B is higher than that of move C. (2.3) Write down the \u000b=\f values for all the nodes (except the leaf nodes) if alpha/beta pruning is applied to the tree. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2020 A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 Figure 1: Minimax, alpha/beta Provided below is < node >= (\u000b; \f): 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 v \u0015 \f: J cut v \u0014 \u000b: H,M cut v = \b\b\u00001 7 \u000b = \b\b\u00001 7 \f = 1 v =ˆ1 7 \u000b = \u00001 \f =ˆ1 7 v =ˆ1 6 \u000b = 7 \f = 1 v = \b\b\u00001 9 \u000b = \u00001 \f = 7 v = \b\b\u00001 ˆˆ\u00003 6 \u000b = \b\b\u00001 ˆˆ\u00003 6 \f = 1 (1) (2) (3) 7 (4) (5) (6) 9 (7) 9 (8) (9) 9 (10) 7 (11) (12) (13) (14) -5 (15) (16) 6 (17) 6 (18) 6 The \fnal values are: A = (7; 1); B = (\u00001; 7); E = (\u00001; 7); C = (7; 1); G = (6; 1) (2.4) Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). J was beta-cut, H and M were alpha-cut. Question 3 Answer the following questions on Constraint Satisfaction Problems (CSPs). (3.1) De\fne the Least Constraining Value (LCV) heuristic. The heuristic prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). (3.2) Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u0000 1-consistent and so on. This can only be done in exponential time which makes large problems intractable. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2020 (3.3) De\fne the degree heuristic. This heuristic attempts to reduce the branching factor on future choices. (3.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to \fnd a solution by simply backtracking? Explain your answer. No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (3.5) Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistency[2]. (Or: it removes values from the domain of the neighbours of the variable for which the forward checking is being done[0][0] { also acceptable answer.) Question 4 Consider the crossword puzzle provided in Figure 2. 1 2 3 4 5 6 7 Figure 2: Crossword Puzzle It is possible to represent the problem of generating puzzles as a CSP. Suppose you are given the puzzle grid as above, as well as a dictionary W of words to use for generating the puzzle. The variables for this problem is easily represented as the collection of vertical or horizontal cells. Such a collection is called a box. A horizontal box is identi\fed as Ai with i being the number of the box, and a vertical box is Dj with j being the number of the box. Boxes consisting of only one cell is not allowed. Suppose you are given the following functions: 1. BLen(v): returns the number of cells that a box contains, for example BLen(A1) = 4 2. W Len(w): returns the length of a word w, for example W Len( 0hi 0) = 2 3. Cell(v; n): returns the letter in cell n of variable v. For example, if A1 = `Ahoy', then Cell(A1; 2) = `h'. Answer the following questions. 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (4.1) Provide the variables for this problem. Make sure to use the correct notation. X = fA1; A3; A6; A7; D1; D2; D4; D5g (4.2) De\fne the domain for the variables, make sure to use the correct notation, and to use all the information provided. (Hint: Remember that the number of cells in a box and the number of letters in a word must match.) Dx2X = fwjw 2 W ^ W Len(w) = BLen(x)g (must include a reference to the dictionary). (4.3) De\fne the constraints for this problem. 1. Cell(A1; 1) = Cell(D1; 1) 2. Cell(A1; 3) = Cell(D2; 1) 3. Cell(A3; 2) = Cell(D4; 1) 4. Cell(A3; 3) = Cell(D2; 3) 5. Cell(A3; 4) = Cell(D5; 1) 6. Cell(A6; 2) = Cell(D4; 3) 7. Cell(A6; 4) = Cell(D5; 3) 8. Cell(A7; 2) = Cell(D4; 5) 9. Cell(A7; 4) = Cell(D5; 5) 10. Alldi\u000b(A1; A3; A6; A7; D1; D2; D4; D5) (4.4) You are given the following list of words as your dictionary. W = f GAB, WIN, VAN, VET, GET, GIVE, GRAB, GROW, DRUM, BEND, BARE, DRAB, DRAG, EYES, FEEL, FOOL, EELS, ERRS, TARDY, BARES, EARLY, DUMPS, FEELS, DRUMS g. Use the Minimum Remaining Values (MRV) heuristic to generate the crossword, apply arc-consistency when you've made an assignment to a variable. The Solution is: G I V E A A B E N D A U D R U M L P E Y E S This answer is marked based on your attempt. However, note the following: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2020 1. Domain reduction must be applied after each assignment. 2. Only variables with the smallest domain must be considered for assignment. This means that once assignment has taken place, and domain reduction has been ap- plied, then only variables with the smallest domains can be considered. 3. Domain reduction is based on the constraints. Thus each time assignment takes place, the domain of the remaining variables are reduced based on the words in the dictionary that meet the constraints. 4. Providing only the solution will earn you only 1 mark. Question 5 Consider the following English sentences: 1. Anyone who passes their history exam, and wins the lottery is happy. 2. Anyone who studies, or who is lucky will pass their exam. 3. John did not study. 4. John is lucky. 5. Anybody who is lucky will win the lottery. a (5.1) Provide a First-order Logic (FOL) vocabulary for the sentences. 1. Lucky(p). A predicate (property). Person p is lucky. 2. P ass(p; s). A predicate. Person p, passes subject s. 3. W in(p; e). A predicate. Person p wins event e. 4. Study(p). A predicate. Person p studies. 5. Happy(p). A predicate. Person p is happy. 6. John. A constant depicting people. 7. History. A constant depicting subjects. 8. Lottery. A constant depicting events. 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.2) Using your vocabulary, translate the sentences in FOL. 1. (8x)[(P ass(x; History) ^ W in(x; Lottery)) ) Happy(x)] 2. (8y)(8z)[(Study(y) _ Lucky(y)) ) P ass(y; z)] 3. :Study(john) 4. Lucky(john) 5. (8w)[Lucky(w) ) W in(w; Lottery)] It is important to standardise the variables (to use di\u000berent variable names) to avoid confusion when dropping the universal quanti\fers. (5.3) Convert the statements obtained in (5.2) into clausal form. Variables must be standard- ised. The statements are converted as follows to clause form: 1. :pass(x; history) _ :win(x; lottery) _ happy(x) 2. :study(y) _ pass(y; z) 3. :lucky(y) _ pass(y; z) 4. :study(john) 5. lucky(john) 6. :lucky(w) _ win(w; lottery) Note that universal quanti\fers have been dropped because all variables were universally quanti\fed. (5.4) Use resolution refutation to prove that John is happy. 7 :happy(john) negation of goal 8 :win(x; lottery) _ happy(x) _ :lucky(x), 1&3; fx=yg; fhistory=zg 9 :win(john; lottery) _ happy(john), 5&8; fjohn=xg 10 :win(john; lottery), 9&7 11 win(john; lottery), 5&6; fjohn=wg 12 ;, 10&11 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2020 Question 6 Do excercise 8.9 b, d, f, g in the textbook. The translation is straight forward using the vocabulary provided. b. Occupation(Joe; Actor) ^ 9p(p 6= Actor ^ Occupation(Joe; p)) d. :9p(Occupation(p; Lawyer) ^ Customer(Joe; p)) f. 9p(Occupation(p; Lawyer) ^ 8q(Customer(q; p) ) Occupation(q; Doctor))) g. 8p(Occupation(p; Surgeon) ) 9q(Occupation(q; Lawyer) ^ Customer(q; p))) Copyright c\rUNISA 2020 (v2020.1.0) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Solution SELF ASSESSMENT ASSIGNMENT Study material: Chapters 9, and 18. You may skip sections 9.3, and 9.4. You only need to study 18.1, 18.2, and 18.3 Question 1 Convert the following First Order Logic (FOL) sentence to Conjunctive Normal Form (CNF): 8y(8xP (x) ) 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Eliminate implication: 8y(:8xP (x) _ 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Move : inwards: 8y(9x:P (x) _ 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Standardize variables: The variable name x is used in the scope of two di\u000berent quanti\fers, so we change the name of one of them to avoid confusion when we drop the quanti\fers. The same applies for the variable name z. 8y(9x:P (x) _ 9u(8zQ(u; z) _ 8vR(u; y; v))) Note that the scope of 8z is the predicate Q(u; z), and the scope of 8v is the predicate R(u; y; v). On the other hand, the scope of 8y is the whole formula. \u000f Skolemize: 8y(:P (f (y)) _ 8zQ(g(y); z) _ 8vR(g(y); y; v)) Here f and g are Skolem functions, and their arguments are all the universally quanti\fed vari- ables in whose scope the existential quanti\fer appears. In this case, 9u appears only in the scope of 8y. Note that the same variable u appears twice in the sentence, so we replace each occurrence of u with g(y). \u000f Drop universal quanti\fers: At this point, all remaining variables are universally quanti\fed. Moreover, the sentence is equivalent to one in which all the universal quanti\fers have been moved to the left: 8y8z8v(:P (f (y)) _ Q(g(y); z) _ R(g(y); y; v)) We can therefore drop the universal quanti\fers: :P (f (y)) _ Q(g(y); z) _ R(g(y); y; v) The sentence is now in CNF and it has only one conjunct (one clause) consisting of a disjunction of three literals. Question 2 Consider the following English statements: 1. Anyone who passes their history exam and who wins the lottery is happy. 2. Anyone who studies or is lucky, passes their exams. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 3. John did not study. 4. John is lucky. 5. Anyone who is lucky wins the lottery. (2.1) Provide a vocabulary for the statements. \u000f P ass(p; s). Predicate. Person p passes subject s. \u000f W in(p; g). Predicate. Person p wins game g. \u000f Happy(p). Property. Person p is happy. \u000f Study(p). Predicate. Person p studies. \u000f Lucky(p). Property. Person p is lucky. \u000f History. Constant for a subject. \u000f Lottery. Constant for a game that can be won. \u000f John. Constant for a person. (2.2) Translate the above English sentences to FOL statements using the vocabulary you de- \fned above. The sentences are translated as follows to FOL: 1. 8p((P ass(p; History) ^ W in(p; Lottery)) ) Happy(p)) 2. 8q8r((Study(q) _ Lucky(q)) ) P ass(q; r)) 3. :Study(John) 4. Lucky(John) 5. 8s(Lucky(s) ) W in(s; Lottery)) It is important to standardize the variables (to use di\u000berent variable names) to avoid confusion when dropping the universal quanti\fers. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (2.3) Convert the FOL statements obtained in 2.2 into CNF. The statements are converted as follows to CNF: 1. 8p((P ass(p; History) ^ W in(p; Lottery)) ) Happy(p)) \u0011 8p(:(P ass(p; History) ^ W in(p; Lottery) _ Happy(p)) \u0011 8p(:P ass(p; History) _ :W in(p; Lottery) _ Happy(p)) 2. 8q8r((Study(q) _ Lucky(q)) ) P ass(q; r)) \u0011 8q8r(:(Study(q) _ Lucky(q)) _ P ass(q; r)) \u0011 8q8r((:Study(q) ^ :Lucky(q)) _ P ass(q; r)) \u0011 (:Study(q) ^ :Lucky(q)) _ P ass(q; r) \u0011 (:Study(q) _ P ass(q; r)) ^ (:Lucky(q) _ P ass(q; r)) 3. No action required. 4. No action required. 5. 8s(Lucky(s) ) W in(s; Lottery)) \u0011 :Lucky(s) _ W in(s; Lottery) We thus end up with the following clauses: 1. :P ass(p; History) _ :W in(p; Lottery) _ Happy(p) 2. :Study(q) _ P ass(q; r) 3. :Lucky(q) _ P ass(q; r) 4. :Study(John) 5. Lucky(John) 6. :Lucky(s) _ W in(s; Lottery) Note that universal quanti\fers have been dropped because all variables were universally quanti\fed. Skolem functions are only introduced to remove existential quanti\fers. (See section 9.5 of R&N.) 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 (2.4) Use resolution refutation to prove that John is happy. In order to use resolution refutation, we negate the goal, convert the negated goal to clause form if necessary, and add the resulting clause(s) to the set of premises (clauses 1 to 6 in part (2.3) above). Here the goal is: Happy(John). Therefore the negation of the goal is: :Happy(John). We then resolve the premises together with the negated goal until the empty clause (Nil) is generated. Review the ground resolution theorem to make sure you understand why this ap- proach works. Also review section 7.5: Remember that \u000b j= \f only if (\u000b ^ :\f) is unsatis\fable. 1. :P ass(p; History) _ :W in(p; Lottery) _ Happy(p) premise 2. :Study(q) _ P ass(q; r) premise 3. :Lucky(q) _ P ass(q; r) premise 4. :Study(John) premise 5. Lucky(John) premise 6. :Lucky(s) _ win(s; Lottery) premise 7. :Happy(John) negation of goal 8. :W in(p; Lottery) _ happy(p) _ :Lucky(p) 1&3, fp/qg, fhistory/rg 9. :W in(John; Lottery) _ Happy(John) 5&8, fJohn/pg 10. :W in(John; Lottery) 9&7 11. W in(John; Lottery) 5&6, fJohn/wg 12. ; 10&11 We have shown that the negation of the goal together with the premises produce a contradiction (empty clause). Therefore the goal, namely Happy(John), is entailed by the premises. It is important to show which clauses form part of the resolution to produce the resolvent. You must also always show the substitutions. Remember: given a fact with a constant, one cannot simply replace the constant with a variable to derive a new (general) statement. For example, suppose we add Carol to the list of persons in the vocabulary for the above problem. We cannot derive: Lucky(x) fx=Johng, and then Lucky(Carol) fCarol=xg 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x1 x2 x3 f(x1, x2, x3) 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 Table 1: Boolean function table Question 3 (3.1) Convert the Boolean function in Table 1 to a decision tree: No information gain values were given, so it becomes a matter of picking the se- quence in which the variables are to be evaluated. The next step would be to simplify the decision tree by consolidating equivalent leaf nodes. Variable order x1; x2; x3: x1 x2 x3 1 0 0 1 0 x3 1 0 1 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 This can be simpli\fed to: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 x1 x2 x3 1 0 0 1 0 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 Variable order x1, x3, x2: x1 x3 1 0 x2 0 0 1 1 1 0 x3 x2 1 0 0 1 0 x2 0 0 1 1 1 1 Variable order x2, x1, x3: x2 x3 x2 1 0 0 1 0 x2 1 0 0 1 1 0 x3 1 00 x2 0 0 1 1 1 1 Variable order x2, x3, x1: 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x2 x3 1 0 0 1 0 x3 x1 1 0 0 1 0 1 1 1 Variable order x3, x2, x1: x3 x2 1 0 x1 1 0 0 1 1 0 x2 0 0 1 1 1 Variable order x3, x1, x2: x3 x1 1 0 x2 1 0 0 1 1 0 x1 x2 0 0 1 1 0 x2 0 0 1 1 1 1 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 (3.2) When we construct a decision tree without the bene\ft of gain values, the order in which we evaluate the variables is important. Why? It may be possible to consolidate leaf nodes with similar values to produce a smaller, more compact tree. Question 4 The National Credit Act introduced in South Africa in 2007 places more responsibility on a bank to determine whether the loan applicant will be able to a\u000bord it. Blue Bank has a table of information on 14 loan applications they have received in the past: No. Credit history Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 2 UNKNOWN HIGH NO R15k - R35k HIGH 3 UNKNOWN LOW NO R15k - R35k MEDIUM 4 UNKNOWN LOW NO < R15k HIGH 5 UNKNOWN LOW NO > R35k LOW 6 UNKNOWN LOW YES > R35k LOW 7 BAD LOW NO < R15k HIGH 8 BAD LOW YES > R35k MEDIUM 9 GOOD LOW NO > R35k LOW 10 GOOD HIGH YES > R35k LOW 11 GOOD HIGH NO < R15k HIGH 12 GOOD HIGH NO R15k - R35k MEDIUM 13 GOOD HIGH NO > R35k LOW 14 BAD HIGH NO R15k - R35k HIGH Table 2: Risk information table Use the information in Table 2 to construct a decision tree that will assist the bank in determining the risk associated with a new loan application. In order to determine the information gain of any di\u000berent attributes of a certain collection of data, the calculation of entropy is important the notion of information gain is de\fned in terms of entropy. Entropy can be described as a measure of impurity of an arbitrary collection of examples. Russell & Norvig describe entropy as a measure of the uncertainty of a random variable, and mention that the acquisition of information corresponds to a reduction in entropy. Namely a random variable with only one value has no uncertainty and thus its entropy is de\fned as zero; thus we gain no information by observing its value. For any attribute A, if no information can be gained regarding the decision from attribute A, then the entropy of attribute A is equal to 0. If all the members of a class are split equally by any attribute A, then the entropy of A is 1. For any collection S the maximum entropy value is 1. Formally, the entropy of a random variable V with value vk, each with probability P (vk) is de\fned as: H(V ) = nX k=1 \u0000P (vk)log2 1 P (vk) = \u0000 nX k=1 P (vk)log2 1 P (vk) (1) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Maybe a more comprehensible way of de\fning the entropy of any collection S is as follows: Entropy(S) = \u0000 cX i=1 pilog2(pi) (2) This corresponds to what Russell and Norvig refer to as information content. If the possible answers vi have probabilities P (vi) then the information content I of the actual answer is given by: I(P (v1); : : : ; P (vn)) = nX i=1 \u0000P (vi)log2P (vi) (3) You may see the negative as a way of making the values of pilog2(pi) positive because all pi < 1, i.e. each represents a probability of the sample set. In what follows we will use the ID3 algorithm to develop our decision tree. Our collection of 14 examples S, has four meaningful attributes (Credit History, Debt, Collateral, Income), and a 3-wise classi\fcation (LOW, MEDIUM, HIGH). Since there are no repeat values in the No. attribute it plays no role in the classi\fcation and can be ignored (although we will show the No. attribute in further tables so that we know which examples we are working with). For purposes of clarity in the formulae, we will shorten the attribute labels and values as follows: \u000f Credit History = CH \u000f Debt = D \u000f Collateral = C \u000f Income = I \u000f BAD = B \u000f UNKNOWN = U \u000f GOOD = G \u000f HIGH = H \u000f LOW = L \u000f <R15K = 15K \u000f R15K-R35K = 15K-35K \u000f >R35K = 35K \u000f MEDIUM = M We will also not be repeating calculations at every step: we show the full set of calculations for the \frst level of the tree, after that we will only show the \fnal result of the calculation. Summarise the example set, S = f1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14g, as: S = [5L; 3M ; 6H] We start by calculating the Entropy for our set of examples: 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Entropy(S) = 3X i=1 \u0000pilog2pi = \u0000( 5 14)log2( 5 14) \u0000 ( 3 14)log2( 3 14) \u0000 ( 6 14)log2( 6 14) = \u0000( 5 14)(log25 \u0000 log214) \u0000 ( 3 14)(log23 \u0000 log214) \u0000 ( 6 14)(log26 \u0000 log214) = \u0000( 5 14) \u0012 log5 log2 \u0000 log14 log2 \u0013 \u0000 ( 3 14) \u0012 log3 log2 \u0000 log14 log2 \u0013 \u0000 ( 6 14) \u0012 log6 log2 \u0000 log14 log2 \u0013 = 0:531 + 0:476 + 0:524 = 1:531(max = 1:585) We have to determine the information gain (IG) of the di\u000berent attributes in order to select the best choice for the root node. The information gain measures the expected reduction of entropy { the higher the IG, the higher the expectation of reduction of entropy. In what follows we calculate the information gain for each of the four attributes. Credit History: Values (CH ) = B, G, U S = [5L; 3M ; 6H] SB [0L; 1M ; 3H] SG [3L; 1M ; 1H] SU [2L; 1M ; 2H] Entropy(SB) = \u0000(0 4 )log2(0 4) \u0000 (1 4 )log2(1 4) \u0000 (3 4 )log2(3 4) = 0:811 Entropy(SG) = \u0000(3 5 )log2(3 5) \u0000 (1 5 )log2(1 5) \u0000 (1 5 )log2(1 5 ) = 1:371 Entropy(SU ) = \u0000(2 5 )log2(2 5) \u0000 (1 5 )log2(1 5) \u0000 (2 5 )log2(2 5) = 1:522 Gain(S; CH) = Entropy(S) \u0000 X v2V alues(A) jSvj jSj Entropy(Sv) = Entropy(S) \u0000 ( 4 14)Entropy(SB) \u0000 ( 5 14)Entropy(SG) \u0000 ( 5 14)Entropy(SU ) = 1:531 \u0000 ( 4 14)0:811 \u0000 ( 5 14)1:371 \u0000 ( 5 14)1:522 = 0:266 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Debt: Values(D) = L, H S = [5L; 3M ; 6H] SL [3L; 2M ; 2H] SH [2L; 1M ; 4H] Entropy(SL) = \u0000(3 7)log2(3 7 ) \u0000 (2 7)log2(2 7 ) \u0000 (2 7)log2(2 7 ) = 1:557 Entropy(SH) = \u0000(2 7 )log2(2 7) \u0000 (1 7 )log2(1 7) \u0000 (4 7 )log2(4 7) = 1:379 Gain(S; D) = Entropy(S) \u0000 ( 7 14)Entropy(SL) \u0000 ( 7 14)Entropy(SH) = 1:531 \u0000 ( 7 14)1:557 \u0000 ( 7 14)1:379 = 0:063 Collateral: Values (C) = Y,N S = [5L; 3M ; 6H] SY [2L; 1M ; 0H] SN [3L; 2M ; 6H] Entropy(SY ) = \u0000(2 3 )log2(2 3) \u0000 (1 3 )log2(1 3) \u0000 (0 3 )log2(0 3) = 0:918 Entropy(SN ) = \u0000( 3 11)log2( 3 11) \u0000 ( 2 11)log2( 2 11) \u0000 ( 6 11)log2( 6 11) = 1:435 Gain(S; C) = Entropy(S) \u0000 ( 3 14)Entropy(SY ) \u0000 (11 14)Entropy(SN ) = 1:531 \u0000 ( 3 14)0:918 \u0000 (11 14)1:435 = 0:207 Income: Values (I ) = 15 , 15-35, 35 S = [5L; 3M ; 6H] S15 [0L; 0M ; 4H] 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 S15\u000035 [0L; 2M ; 2H] S35 [5L; 1M ; 0H] Entropy(S15) = \u0000(0 4 )log2(0 4) \u0000 (0 4 )log2(0 4) \u0000 (4 4 )log2(4 4) = 0 Entropy(S15\u000035) = \u0000(0 4)log2(0 4 ) \u0000 (2 4)log2(2 4 ) \u0000 (2 4)log2(2 4 ) = 1 Entropy(S35) = (5 6 )log2(5 6) \u0000 (1 6 )log2(1 6) \u0000 (0 6 )log2(0 6) = 0:650 Gain(S; I) = Entropy(S) \u0000 ( 4 14)Entropy(S15) \u0000 ( 4 14)Entropy(S15\u000035) \u0000 ( 6 14)Entropy(S35) = 1:531 \u0000 ( 4 14)0 \u0000 ( 4 14)1 \u0000 ( 6 14)0:650 = 0:967 Attribute Income provides the highest information gain (0.967), i.e. the best prediction for our target attribute, Risk. Income becomes the root node of our decision tree. Income < 15K 15K \u0000 35K > 35K The ID3 algorithm now performs a recursion with the three subsets of our examples, based on the three possible values of the Income attribute (<R15K, R15K-R35K, >R35K). The \frst subset, corresponding to Income = f< R15Kg, is: No. Credit History Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 4 UNKNOWN LOW NO < R15k HIGH 7 BAD LOW NO < R15k HIGH 11 GOOD HIGH NO < R15k HIGH We notice that the target attribute is the same for all four of our examples, i.e. all four examples produce the same target value, HIGH. We have our \frst leaf node, labelled HIGH. 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K 15K \u0000 35K > 35K The second subset, corresponding to Income = fR15K \u0000 R35Kg, is: No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM 12 GOOD HIGH NO R15K-R35K MEDIUM 14 BAD HIGH NO R15K-R35K HIGH Our subset collection of 4 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classi\fcation (MEDIUM, HIGH): S15K\u000035K = f2; 3; 12; 14g = [2M ; 2H]. We start by calculating the Entropy for this subset: Entropy(S15K\u000035K) = 2X i=1 \u0000pilog2pi = \u0000(2 4 )log2(2 4) \u0000 (2 4 )log2(2 4) = 0:5 + 0:5 = 1 Calculate the information gain for the attributes of the subset (entropy for each attribute is calculated in the same fashion as above). Credit History: Gain(S15K\u000035K; CH) = Entropy(S15K\u000035K) \u0000 (1 4 )Entropy(SB) \u0000 (1 4 )Entropy(SG) \u0000 (2 4 )Entropy(SU ) = 1 \u0000 (1 4)0 \u0000 (1 4 )0 \u0000 (2 4)1 = 0:5 Debt: Gain(S15K\u000035K; D) = Entropy(S15K\u000035K) \u0000 (1 4 )Entropy(SL) \u0000 (3 4)Entropy(SH) = 1 \u0000 (1 4 )0 \u0000 (3 4)0:918 = 0:312 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Collateral: Gain(S15K\u000035K; C) = Entropy(S15K\u000035K) \u0000 (0 4)Entropy(SY ) \u0000 (4 4)Entropy(SN ) = 1 \u0000 (0 4 )0 \u0000 (4 4)1 = 0 Attribute Credit History provides the highest Information Gain in this subset (0.5). Thus it becomes our next decision node. Income HIGH < 15K Credit History BAD GOOD UNKNOWN 15K \u0000 35K > 35K The third subset, corresponding to Income = f> R35kg, is then used. No. Credit History Debt Collateral Income Risk 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW 8 BAD LOW YES >R35K MEDIUM 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 6 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classi\fcation (LOW, MEDIUM): S35K = f5; 6; 8; 9; 10; 13g = [5L; 1M ] Start by calculating the Entropy for this subset: Entropy(S35K) = 2X i=1 \u0000pi log2pi = \u0000(5 6) log2 (5 6 ) \u0000 (1 6) log2 (1 6 ) = 0:65 15 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace We now proceed to calculate the information gain for each of the three attributes in the subset: Credit History: V alues(CH) = B; G; U S35K = [5L; 1M ] SB [0L; 1M ] SG [3L; 0M ] SU [2L; 0M ] Entropy(SB) = \u0000(0 1 )log2(0 1) \u0000 (1 1 )log2(1 1) = 0 Entropy(SG) = \u0000(3 3 )log2(3 3) \u0000 (0 3 )log2(0 3) = 0 Entropy(SU ) = \u0000(2 2 )log2(2 2) \u0000 (0 2 )log2(0 2) = = 0 Gain(S35K; CH) = Entropy(S35K) \u0000 (1 6 )Entropy(SB) \u0000 (3 6)Entropy(SG) \u0000 (2 6)Entropy(SH) = 0:65 \u0000 (1 6 )0 \u0000 (3 6)0 \u0000 (2 6 )0 = 0:65 Debt: V alues(D) = L; H S35K = [5L; 1M ] SL [5L; 1M ] SH [2L; 0M ] 16 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Entropy(SL) = \u0000(3 4 )log2(3 4) \u0000 (1 4 )log2(1 4) = 0:811 Entropy(SG) = \u0000(2 2 )log2(2 2) \u0000 (0 2 )log2(0 2) = 0 Gain(S35K; D) = Entropy(S35K) \u0000 (4 6)Entropy(SL) \u0000 (2 6 )Entropy(SH) = 0:65 \u0000 (4 6)0:811 \u0000 (2 6 )0 = 0:109 Collateral: V alues(D) = Y; N S35K = [5L; 1M ] SY [2L; 1M ] SN [3L; 0M ] Entropy(SL) = \u0000(2 3)log2(2 3 ) \u0000 (1 3)log2(1 3 ) = 0:918 Entropy(SG) = \u0000(3 3)log2(3 3 ) \u0000 (0 3)log2(0 3 ) = 0 Gain(S35K; D) = Entropy(S35K) \u0000 (3 6)Entropy(SY ) \u0000 (3 6)Entropy(SN ) = 0:65 \u0000 (3 6)0:918 \u0000 (3 6)0 = 0:191 In summary: Gain(S35K; CH) = 0:65 Gain(S35K; D) = 0:109 Gain(S35K; Collateral) = 0:191 Attribute Credit History provides the highest Information Gain in this subset and becomes the decision node on this branch of the decision tree. 17 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History BAD GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The algorithm continues with recursion to the next level. The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = BAD provides a single example (14). No. Credit History Debt Collateral Income Risk 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: HIGH. Income HIGH < 15K Credit History HIGH BAD GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = GOOD is also a single example (12). No. Credit History Debt Collateral Income Risk 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: MEDIUM. 18 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = UNKNOWN has two examples (2,3). No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a binary classi\fcation (MEDIUM, HIGH shortened for clarity to M,H): SU nknown = f2; 3g = [1M ; 1H]. We again calculate the entropy for the subset: Entropy(S) = \u0000(1 2 )log2(1 2) \u0000 (1 2 )log2(1 2) = 1 Debt V alues(D) = L; H SU N KN OW N = [1L; 1M ] SL [2L; 1M ] SH [3L; 0M ] 19 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Entropy(SL) = \u0000(1 1 )log2(1 1) \u0000 (0 1 )log2(0 1) = 0 Entropy(SH) = \u0000(0 1 )log2(0 1) \u0000 (1 1 )log2(1 1) = 0 Gain(SU N KN OW N ; D) = Entropy(SU N KN OW N ) \u0000 (1 2)Entropy(SL) \u0000 (1 2 )Entropy(SH) = 1 \u0000 (1 2 )0:918 \u0000 (1 2 )0 = 1 Collateral V alues(D) = N SU N KN OW N = [1M ; 1H] SN [1M ; 1H] Entropy(SN ) = \u0000(1 2)log2(1 2 ) \u0000 (1 2)log2(1 2 ) = 1 Gain(SU N KN OW N ; C) = Entropy(SU N KN OW N ) \u0000 (2 2)Entropy(SN ) = 1 \u0000 (2 2 )1 = 0 In summary: Gain(SU N KN OW N ; D) = 1 Gain(SU N KN OW N ; Collateral) = 0 Debt gives us perfect information gain, and thus becomes the next decision node. 20 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Income HIGH < 15K Credit History HIGH BAD MEDIUM Good Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K We return to credit history (we \frst \fnish all the nodes on the same level). The subset of Credit History that corresponds to the Income = >R35K and Credit History = BAD contains only 1 example (8). No. Credit History Debt Collateral Income Risk 8 BAD LOW YES >R35K MEDIUM We thus have another leaf node: MEDIUM. Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD GOOD UNKNOWN > 35K 21 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace The subset of Credit History that corresponds to Income = >R35K and Credit History = GOOD provides three examples (9,10,13): No. Credit History Debt Collateral Income Risk 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 3 examples S, has two meaningful attributes (Debt, Collateral), and a single classi\fcation (LOW). Hence we again have a leaf node LOW. Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = >R35K and Credit History = UNKNOWN is provides 2 examples (5,6). No. Credit History Debt Collateral Income Risk 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a single classi\fcation (LOW). Hence we again have a leaf node LOW. 22 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD LOW UNKNOWN > 35K We can now do the last set of calculations. With Debt = HIGH we have only one example left (2), which makes this a leaf node. No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH Similarly, when Debt = LOW we have one example left (3). This creates the \fnal leaf node. No. Credit History Debt Collateral Income Risk 3 UNKNOWN LOW NO R15K-R35K MEDIUM These last two steps complete our decision tree (note that Collateral plays no role in the decision based on this decision tree). 23 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH HIGH MEDIUM LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD LOW UNKNOWN > 35K Copyright c\rUNISA 2020 (v2020.1.0) 24 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 1 Solution Unique Assignment Number: 860759 Study material: Chapters 1 through 4. You may skip sections 4.2 and 4.5. Important: When we use the phrase `de\fne' (particularly in Question 2), we are looking for a formal de\fnition using some form of formal notation, and not simply an English description or de\fnition. For example: `De\fne the initial state for an agent in Johannesburg'. Answer: In(Johannesburg). `De\fne the actions available to this agent given that the agent simply moves between major metropolitan areas'. Answer: Actions(In(Johannesburg)) = fGo(Bloemontein), Go(Durban), . . . g. When we want an English de\fnition we will explicitly ask for it. Question 1 (1.1) Consider an agent that is designed to deliver emergency supplies to miners that are trapped in a mine. The agent is small enough to navigate through most small openings, but can burrow through soft rock when necessary, because there is a lot of sand and dirt in the shafts, the agent may slip occasionally when attempting to move. Once the agent detects that it has delivered medical supplies to a survivor, it returns to the rescue services team. These agents are typically only deployed once it has been determined that no more shifts in the earth is possible, and the survivors' location has been pinned down (survivors won't move around). Choose from among the following environmental descriptions, and justify your choices in each case. Answer the following questions. Justify your answer in each case. (a) Explain the type of environment that this agent operates in. Compare your choice of environment to others to explain why your choice is better. The agent can move through the environment easily enough, however, one has to keep in mind that moving around in the area may not result in the desired outcome. Burrowing may de\fnitely not result in predictable outcomes. This is a stochastic environment. (b) Is the environment discrete, or continuous? Given the information above, the environment is continuous. Even though the con\fguration of the mine shafts (rubble \flling the shafts) may not change, and the survivors stay put, the agent's location sweeps through a range of values. (c) Is the environment static, or dynamic? Based on the information, the environment does not change while the agent is deliberating. It is thus static. (1.2) Is the environment fully, or partially observable? It is important to consider the environment in terms of what the agent needs in order to complete its task. It is also important to realise that this is simply a toy problem 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2020 and we need not concern ourselves with issues outside of the described environment. The agent cannot account for events that happen in areas that it cannot directly observe. therefore the environment is partially observable. Question 2 Four soccer teams have to take part in a round-robin tournament. The problem is to determine a schedule of matches so that each team plays each other team once in the minimum number of rounds. Matches can take place in parallel. There are many ways to solve this problem, one of which is to specify it as a state space and search for the goal state. Say we number the teams 1, 2, 3 and 4. For each team, we can keep track of which other teams it has played so far by means of a set. So for team 1, the set f2; 4g means it has played against teams 2 and 4 so far. The entire state of which teams have played which other teams can then be represented by an ordered 4-tuple, where each element is a set of the teams that a team has played. The start/initial state is therefore sI = (fg; fg; fg; fg) because initially, team 1 has not played any other teams, team 2 hasn't played any other teams, etc. (2.1) What is the goal state of the state space? sG = (f2; 3; 4g; f1; 3; 4g; f1; 2; 4g; f1; 2; 3g) (2.2) De\fne an action called Schedule which can be applied to a state to get to a successor state. Hint: it helps to consider how you want the action to transform a state into a successor state. Explain what an applicable action means (the rules for transforming a state into another state) for your Schedule action. Let Schedule(x) represent the matching of team 1 with team x. The other two teams that must play against one another can be determined from it. Schedule is an applicable action to state s if x 2 f2; 3; 4gbut x =2 S[1]. (2.3) What are the successor states of the start state? S1;1 = (f2g; f1g; f4g; f3g); S1;2 = (f3g; f4g; f1g; f2g); S1;3 = (f4g; f3g; f2g; f1g) (2.4) What are the applicable actions to the state S1;1 = (f2g; f1g; f4g; f3g)? a3 = Schedule(3); and a4 = Schedule(4). (2.5) Specify the transition model for the applicable actions you speci\fed for state S1;1 above. Result(S1;1; a3) 7! S2;1 = (f2; 3g; f1; 4g; f1; 4g; f2; 3g) Result(S1;1; a4) 7! S2;2 = (f2; 4g; f1; 3g; f2; 4g; f1; 3g) 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (2.6) Calculate the size of the search space (include the initial state in your calculation). Justify your answer. The tree state space for this is recursively de\fned as follows: For a grouping of n teams, the number of nodes on each level is. 1. Base case: l0 = 1, 2. Recursive case: lk = (n \u0000 k) \u0002 lk\u00001 The total number of nodes is thus Pn k=0 lk = 1 + 3 + 6 + 6 = 15. Visually: Question 3 (3.1) Explain how a Depth First Search (DFS) ensures that it always expands the deepest node \frst. Provide an example to aid your discussion. DFS goes about searching in one of two ways: either by implementing its frontier explicitly as a stack, or by searching recursively thereby employing the function call stack as its implicit stack. When implemented as an explicit stack, the last node's generated children are placed on the stack and will therefor be chosen for expansion \frst, this placement of the last nodes children in the frontier results in the deepest node being expanded \frst. If the implementation is recursive, it simply means that the algorithm calls itself recursively on the children nodes it generates from a particular node. This means it carries on down the tree expanding children nodes as it goes along. It thus uses the execution call stack as its queue. Example evaluated based on discussion. (3.2) Explain when one might want to choose DFS over Breadth First Search (BFS). (Hint: In which version of the algorithm does one have an advantage over the other?) DFS has a clear space complexity advantage over BFS when a tree search is per- formed. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2020 Question 4 Consider the search tree in Figure 1. Show the order in which the nodes will be generated at each O M D K I C J H E L F G B N A Figure 1: Search Tree (Iterative Deepening Search (IDS)) level (start with level 0 and continue until the goal test is successful), given that BFS is used. Assume the goal node is L, and that nodes are expanded from left to right (M is expanded before E and so on). (Hint: make sure you understand the di\u000berence between expansion and generation, and also that you understand when goal checks occur.) Generation is the result of an expansion. In BFS, the goal test is performed during generation. 1. O is generated and goal tested, 2. O is expanded, and M, and E are generated (and goal tested) 3. M is expanded and D and C are generated (and goal tested), 4. E is expanded and L is generated. Question 5 Consider the graph provided in Figure 2, and answer the questions that follow. The step cost between nodes is provided next to the edges. (5.1) Provide an example to show that a straight line distance used as a heuristic in a greedy best-\frst search may not provide an optimal solution. Since a SLD heuristic provides the shortest direct distance to the goal from any given node, a greedy search may select nodes on the path that appear closer to the goal but that have higher step costs. Greedy searches of this nature ignore step cost and focus solely on the heuristic cost. A simple example may be as follows: 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace O B G H A E M DK J FL N C I 227 248 197 471 143 170156 262 142 280 112 241 257 388302 35 241 Figure 2: Search A B C D E 99 80 97 101 211 Node SLD to D A 253 B 193 C 100 E 176 A greedy best \frst search would \fnd a path through E, which is longer than the path through B, and C. (5.2) Perform a Uniform Cost Search (UCS) on the graph. The start node is H and the goal node is K. Provide a tree that depicts the search. Let each node in the tree represent a path, and the arcs between nodes be weighted using the value of ^g. Provide the \fnal path from the start to the goal. Start the tree with node H, for example: H ?? ?? ?? ?? 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2020 Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^g value. H H-B 142 H-C H-C-E H-C-E-G H-C-E-G-O H-C-E-G-O-K 1026 764 608 H-C-E-D H-C-E-D-K 886 659 411 H-C-L H-C-L-F H-C-L-F-M 1004 533 498 241 H-J 280 521 (5.3) Perform an A \u0003 search on the graph in Figure 2. The start node is N and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use table 1 for the ^h values for each node in the graph. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 N(^g = 0, ^h = 20, ^f = 20) . . . . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^f value. Remember that the cost (both step and path) are calculations with respect to the e\u000bort expended in order to reach a node. In a navigation setting, for example, this could mean distance, time, or fuel. In other settings it might mean something else: hourly wages paid, volume of paint used, compute cycles on a cloud CPU, number of hours inoperative, etc. Nodes can thus also just be a snapshot of the world, and need not just 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Node Estimated COST to goal A 550 B 660 C 280 D 550 E 420 F 0 G 570 H 510 I 570 J 270 K 760 L 30 M 450 N 800 O 600 Table 1: Estimated Distance to Goal for A \u0003 search. be location on a map { think about it carefully: if your search leads you to node X, all you've done is created a snapshot of a potential world in which you (or the agent) are in world-state represented by node X. IF X is a city on a map, and the search has plotted a path to X, it is simply a state in which the agent has travelled to reach X { and thus simply a snapshot of the potential world. (For example, we can use A\u0003 to solve the Australian map colouring CSP.) 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2020 Step Node expanded Frontier 1 N( ^f = 800, ^g = 0, ^h = 800) 2 N K-N (1062,302,760) 3 K-N O-K-N (1164,564,600), D-K-N (1079,529,550) 4 D-K-N O-K-N (1164,564,600), E-D- K-N (1197,777,420), I-D-K-N (1242,672,570) 5 O-K-N G-O-K-N (1290,720,570), E-D- K-N (1197,777,420), I-D-K-N (1242,672,570) 6 E-D-K-N G-O-K-N (1290,720,570), C-E- D-K-N (1227,947,280), I-D-K-N (1242,672,570) 7 C-E-D-K-N G-O-K-N (1290,720,570), L-C-E- D-K-N (1234,1204,30), H-C-E- D-K-N (1698,1188,510), I-D-K-N (1242,672,570) 8 L-C-E-D-K-N G-O-K-N (1290,720,570), F-L-C- E-D-K-N (1239,1239,0), J-L-C- E-D-K-N (1715,1445,270), H-C-E- D-K-N (1698,1188,510), I-D-K-N (1242,672,570) 9 F-L-C-E-D-K-N G-O-K-N (1290,720,570), J-L-C- E-D-K-N (1715,1445,270), H-C-E- D-K-N (1698,1188,510), I-D-K-N (1242,672,570) Question 6 A magic square is a square of n \u0002 n cells, and which has some very interesting properties: all the rows, columns, and diagonals, when summed, adds up to the magic constant. The magic constant is calculated as follows: M = n(n2 + 1) 2 Thus, for n = 3, M = 3(32+1) 2 = 15. The entries in the square are limited to the integers between 1 and n2. For example, a solution for n = 3 is given in Figure 3. It is easy to verify that every row, column, and diagonal in the above example adds up to 15. Using local search algorithms, we can perform a search as follows: \u000f Initialise a board with digits between 1 and n 2 placed randomly, \u000f De\fne an objective function to aid the local search, \u000f Generate a successor state from the current state by randomly swapping two values 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 4 3 8 9 5 1 2 7 6 Figure 3: Magic Square for n = 3 \u000f An optimum (minimum/maximum) is considered a goal. Consider the random start state given in Figure 4 (we represent the state graphically to aid your e\u000bort, and you are welcome to provide graphical representations of successor states if asked): 5 3 8 9 4 6 1 7 2 Figure 4: Magic Square for n = 3 (6.1) Provide a good objective function that can be used as a minimizer (i.e. a global minimum, a loss function) for the problem. Hint: 1. An objective function (also called either a loss, or reward function) is a function that maps the current state to some linear value which can be used to judge the \ftness or goodness of the state. When we want to avoid loss, we de\fne an objective function with respect to loss, and we try to minimize loss by minimising the evaluation of the state using the objective function (i.e. we look for a state that results in the smallest value when evaluated using the objective function). When we want reward, we de\fne an objective function with respect to reward and we try to maximize the objective function. 2. First write down the function in plain English, and then provide the mathematical equation for it. 3. Use the rows, columns, and diagonals in the state as part of your equation. The simplest solution to this problem is to use a function that uses the di\u000berence between the actual column, row, and diagonals and the ideal. We square the values in order to compensate for negative values. We de\fne the following 1. Ci; i 2 f1; 2; : : : ; ng is the sum of column i. 2. Rj; j 2 f1; 2; : : : ; ng is the sum of row j 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2020 3. Dk; k 2 f1; 2g is the sum of diagonal k Our objective function is thus: O(S) = nX i=1 (15 \u0000 Ci) 2 + nX j=1 (15 \u0000 Rj)2 + 2X k=1(15 \u0000 Dk) 2 Each state S is thus evaluated, and the algorithm will try to minimise O(S). (6.2) Now that you have de\fned your objective function, use it to evaluate the start state as provided in Figure 4. Show your calculations. Our magic square sums look as follows 13 5 3 8 16 9 4 6 19 1 7 2 10 15 14 16 11 Our function thus evaluates to: O(S) = 02 + 1 2 + \u00001 2 + \u00001 2 + \u00004 2 + 5 2 + 4 2 + \u00001 2 = 0 + 1 + 1 + 1 + 16 + 25 + 16 + 1 = 61 (6.3) A hill-climb/hill-descent local search generates a series of successors, and takes the best one from among them (using the objective function). Beginning from the initial state in Figure 4, provide two successors, one that is worse, and one that is an improvement. Show why the successor is better, or worse by using the objective function to evaluate it. Remember: generate all possible successors, and choose the better/worse from among them. Remember, a successor state is generated by randomly swapping two entries. Better: 5 3 8 9 4 2 1 7 6 This evaluates to: O(S) = \u00001 2 + 02 + 12 + 02 + 12 \u0000 1 2 + 22 + 02 = 1 + 1 + 1 + 1 + 4 = 8 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Worse: 5 3 8 2 4 6 1 7 9 This evaluates to: O(S) = \u00001 2 + 32 + \u00002 2 + 72 + 12 \u0000 8 2 + \u00003 2 + 22 = 1 + 9 + 4 + 49 + 1 + 64 + 9 + 4 = 141 (6.4) Suppose we use simulated annealing to solve the puzzle. Use a starting value of T = 100, and a discounting value of 0:9. Provide the new T and \u0001E values for the better state. Also provide the T , \u0001E and probability for accepting the worse state. . For the better state T is set to 100 at the end of the loop. \u0001E = 56. For the worse state T = 100, \u0001E = \u000077 which means we choose the board with probability: e \u000077=100 = 0:46 Copyright c\rUNISA 2020 (v2020.2.1) 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 2 Solution Unique Assignment Number: 624233 Study material: Chapters 5, 6, 7, and 8. You may skip sections 5.5, 5.6, and 5.7, 7.6, and 8.4. Question 1 (1.1) Clearly explain what an evaluation function is, and why it is used during adversarial searches. An evaluation function provides the apparent value of a state s. It is thus an estimate of the ultimate utility of the most likely terminal state reached from s. (1.2) Is the ideal strategy only available if we have perfect information? Explain your answer. No. Agents can still get the ideal strategy when playing without all the informa- tion. This means the ideal strategy includes the notion of limited information, however, an agent that has perfect information will most likely outperform and agent that has limited/imperfect information for the same problem. (1.3) Explain how forward pruning works. Provide at least one approach to forward pruning in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering them. Beam search [others are also considered] only considers a sample of the best moves at each ply, but this may lead to the best move being pruned away. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we prune. Otherwise minimax is an exhaustive search (for the parameters such as depth { plys { it is con\fgured for) and node orders do not matter. Question 2 Consider \fgure 1 and answer the questions that follow. (The utility value of the leaf nodes are provided in brackets in the leaf node.) (2.1) Provide the minimax values for all the nodes. A = 3, B = 3, C = 1, D = 3, E = 5, F = 7, G = 1, H = 2, I = 9 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2020 A B C D J E K F L M G H I N O P Q R 3 5 2 7 1 1 2 9 4 Figure 1: Minimax, alpha/beta A B C D J E K F L M G H I N O P Q R 3 5 2 7 1 1 2 9 4 MAX(3,1) = 3 MIN(MIN(3,5),7)) = 3 MAX = 3 MAX = 5 MAX(2,7) = 7 MAX(1,1) = 1 MAX = 2 MAX(9,4) = 9 MIN(MIN(1,2),9) = 1 (2.2) Which move should MAX make? Explain your answer. B. The utility value for MAX for move B is higher than that of move C. (2.3) Write down the minimax values for all the nodes (except the leaf nodes) if alpha/beta pruning is applied to the tree. Provided below is < node >= (\u000b; \f): A = (3, 1), B = (\u00001,3), C = (3,1), D = (3, 1), E = (\u00001,3), F = (2,3), G = (3, 1). 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B C D J E K F L M G H I N O P Q R 3 5 2 7 1 1 2 9 4 v = \b\b\u00001 3 \u000b = \b\b\u00001 3 \f = 1 v =ˆ1 3 \u000b = \u00001 \f =ˆ1 3 v = \b\b\u00001 3 \u000b = \b\b\u00001 3 \f = 1 v = \b\b\u00001 5 \u000b = \u00001 \f = 3 v = \b\b\u00001 \u0003 2 7 \u000b = \b\b\u00001 2 \f = 3 v = \b\b\u00001 1 \u000b = 3 \f = 1 v =ˆ1 1 \u000b = 3 \f = 1 When v = 1, v \u0014 \u000b ) \u000b-cut 3 5 7 3 1 1 Note, that when providing only mini-max for the tree when Alpha/Beta is applied, simply use the v-value. The tree was traversed from left to right, and v = ˘˘˘\u00001 3 means that the original value of v was \u00001 but was replaced with 3 during execution of the algorithm. (2.4) Write down which nodes were cut (if any), and if so, what type of cut was made (alpha, or beta). \u000b-cut below C (H and I is not expanded). Also note: if there were an additional node below E, there would have been a \f-cut. This would have happened because after v = M AX(v; 5) = 5 (v = \u00001), we have that v \u0015 \f (\f = 3), which is the requirement for a \f-cut. The same goes for node F (when v = 7, v \u0015 \f). Question 3 Answer the following questions on Constraint Satisfaction Problems (CSPs). (3.1) De\fne the Least Constraining Value (LCV) heuristic. The heuristic prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). (3.2) Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u0000 1-consistent and so on. This can only be done in exponential time which makes large problems intractable. (3.3) De\fne the degree heuristic. This heuristic attempts to reduce the branching factor on future choices. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2020 (3.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to \fnd a solution by simply backtracking? Explain your answer. No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (3.5) Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistency[2]. (Or: it removes values from the domain of the neighbours of the variable for which the forward checking is being done[0][0] { also acceptable answer.) Question 4 Consider the crossword puzzle provided in Figure 2. 1 2 3 5 6 7 Figure 2: Crossword Puzzle It is possible to represent the problem of generating puzzles as a CSP. Suppose you are given the puzzle grid as above, as well as a dictionary W of words to use for generating the puzzle. The variables for this problem are easily represented as the collection of vertical or horizontal cells. Such a collection is called a box. A horizontal box is identi\fed as Ai with i being the number of the box, and a vertical box is Dj with j being the number of the box. Horizontal and vertical boxes start at their leftmost and topmost cell (thus, for example, one cannot have two or more horizontal or vertical boxes that overlap). Boxes consisting of only one cell is not allowed. No two boxes may contain the same words. Suppose you are given the following functions: 1. BLen(v): returns the number of cells that a box contains, for example BLen(A1) = 4 2. W Len(w): returns the length of a word w, for example W Len( 0hi 0) = 2 3. Cell(v; n): returns the letter in cell n of variable v. For example, if A1 = `Ahoy', then Cell(A1; 2) = `h'. Answer the following questions. (4.1) Provide the variables for this problem. Make sure to use the correct notation. 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace X = fA1; A3; A6; A7; D2; D3; D5g (4.2) De\fne the domain for the variables, make sure to use the correct notation, and to use all the information provided. (Hint: Remember that the number of cells in a box and the number of letters in a word must match.) Dx2X = fwjw 2 W ^ W Len(w) = BLen(x)g (must include a reference to the dictionary). (4.3) De\fne the constraints for this problem. 1. Cell(A1; 2) = Cell(D2; 1) 2. Cell(A3; 1) = Cell(D3; 1) 3. Cell(A3; 5) = Cell(D5; 1) 4. Cell(A6; 1) = Cell(D3; 3) 5. Cell(A6; 4) = Cell(D5; 3) 6. Cell(A7; 1) = Cell(D3; 5) 7. Cell(A7; 4) = Cell(D5; 5) 8. Alldi\u000b(A1; A3; A6; A7; D2; D3; D5) (4.4) You are given the following list of words as your dictionary. W = f GAB, WIN, ACT, VAN, VET, GET, GIVE, GAIN, ARUM, DRUM, BEND, BARE, LIPS, DRAG, EYES, FEEL, FOOL, EELS, ERRS, ITEM, TARDY, BARES, EARLY, IRATE, MUMPS, FEELS, DRUMS g. Use the Minimum Remaining Values (MRV) heuristic to generate the crossword, apply arc-consistency when you've made an assignment to a variable. The Solution is: G A I N C I T E M R U A R U M T P E Y E S This answer is marked based on your attempt. However, note the following: 1. Domain reduction must be applied after each assignment. 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2020 2. Only variables with the smallest domain must be considered for assignment. This means that once assignment has taken place, and domain reduction has been ap- plied, then only variables with the smallest domains can be considered. 3. Domain reduction is based on the constraints. Thus each time assignment takes place, the domain of the remaining variables are reduced based on the words in the dictionary that meet the constraints. 4. Providing only the solution will earn you only 1 mark. Question 5 Consider the following English sentences: 1. Anyone who passes their history exam, and wins the lottery is happy. 2. Anyone who studies, or who is lucky will pass their exam. 3. John did not study. 4. John is lucky. 5. Anybody who is lucky will win the lottery. a (5.1) Provide a First-order Logic (FOL) vocabulary for the sentences. 1. Lucky(p). A predicate (property). Person p is lucky. 2. P ass(p; s). A predicate. Person p, passes subject s. 3. W in(p; e). A predicate. Person p wins event e. 4. Study(p). A predicate. Person p studies. 5. Happy(p). A predicate. Person p is happy. 6. John. A constant depicting people. 7. History. A constant depicting subjects. 8. Lottery. A constant depicting events. 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.2) Using your vocabulary, translate the sentences in FOL. 1. (8x)[(P ass(x; History) ^ W in(x; Lottery)) ) Happy(x)] 2. (8y)(8z)[(Study(y) _ Lucky(y)) ) P ass(y; z)] 3. :Study(john) 4. Lucky(john) 5. (8w)[Lucky(w) ) W in(w; Lottery)] It is important to standardise the variables (to use di\u000berent variable names) to avoid confusion when dropping the universal quanti\fers. (5.3) Convert the statements obtained in (5.2) into clausal form. Variables must be standard- ised. The statements are converted as follows to clause form: 1. :pass(x; history) _ :win(x; lottery) _ happy(x) 2. :study(y) _ pass(y; z) 3. :lucky(y) _ pass(y; z) 4. :study(john) 5. lucky(john) 6. :lucky(w) _ win(w; lottery) Note that universal quanti\fers have been dropped because all variables were universally quanti\fed. (5.4) Use resolution refutation to prove that John is happy. 7 :happy(john) negation of goal 8 :win(x; lottery) _ happy(x) _ :lucky(x), 1&3; fx=yg; fhistory=zg 9 :win(john; lottery) _ happy(john), 5&8; fjohn=xg 10 :win(john; lottery), 9&7 11 win(john; lottery), 5&6; fjohn=wg 12 ;, 10&11 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2020 Question 6 Do excercise 8.9 b, d, f, g in the textbook. The translation is straight forward using the vocabulary provided. b. Occupation(Joe; Actor) ^ 9p(p 6= Actor ^ Occupation(Joe; p)) d. :9p(Occupation(p; Lawyer) ^ Customer(Joe; p)) f. 9p(Occupation(p; Lawyer) ^ 8q(Customer(q; p) ) Occupation(q; Doctor))) g. 8p(Occupation(p; Surgeon) ) 9q(Occupation(q; Lawyer) ^ Customer(q; p))) Copyright c\rUNISA 2020 (v2020.2.1) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Solution SELF ASSESSMENT ASSIGNMENT Study material: Chapters 9, and 18. You may skip sections 9.3, and 9.4. You only need to study 18.1, 18.2, and 18.3 Question 1 Convert the following First Order Logic (FOL) sentence to Conjunctive Normal Form (CNF): 8y(8xP (x) ) 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Eliminate implication: 8y(:8xP (x) _ 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Move : inwards: 8y(9x:P (x) _ 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Standardize variables: The variable name x is used in the scope of two di\u000berent quanti\fers, so we change the name of one of them to avoid confusion when we drop the quanti\fers. The same applies for the variable name z. 8y(9x:P (x) _ 9u(8zQ(u; z) _ 8vR(u; y; v))) Note that the scope of 8z is the predicate Q(u; z), and the scope of 8v is the predicate R(u; y; v). On the other hand, the scope of 8y is the whole formula. \u000f Skolemize: 8y(:P (f (y)) _ 8zQ(g(y); z) _ 8vR(g(y); y; v)) Here f and g are Skolem functions, and their arguments are all the universally quanti\fed vari- ables in whose scope the existential quanti\fer appears. In this case, 9u appears only in the scope of 8y. Note that the same variable u appears twice in the sentence, so we replace each occurrence of u with g(y). \u000f Drop universal quanti\fers: At this point, all remaining variables are universally quanti\fed. Moreover, the sentence is equivalent to one in which all the universal quanti\fers have been moved to the left: 8y8z8v(:P (f (y)) _ Q(g(y); z) _ R(g(y); y; v)) We can therefore drop the universal quanti\fers: :P (f (y)) _ Q(g(y); z) _ R(g(y); y; v) The sentence is now in CNF and it has only one conjunct (one clause) consisting of a disjunction of three literals. Question 2 Consider the following English statements: 1. Anyone who passes their history exam and who wins the lottery is happy. 2. Anyone who studies or is lucky, passes their exams. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 3. John did not study. 4. John is lucky. 5. Anyone who is lucky wins the lottery. (2.1) Provide a vocabulary for the statements. \u000f P ass(p; s). Predicate. Person p passes subject s. \u000f W in(p; g). Predicate. Person p wins game g. \u000f Happy(p). Property. Person p is happy. \u000f Study(p). Predicate. Person p studies. \u000f Lucky(p). Property. Person p is lucky. \u000f History. Constant for a subject. \u000f Lottery. Constant for a game that can be won. \u000f John. Constant for a person. (2.2) Translate the above English sentences to FOL statements using the vocabulary you de- \fned above. The sentences are translated as follows to FOL: 1. 8p((P ass(p; History) ^ W in(p; Lottery)) ) Happy(p)) 2. 8q8r((Study(q) _ Lucky(q)) ) P ass(q; r)) 3. :Study(John) 4. Lucky(John) 5. 8s(Lucky(s) ) W in(s; Lottery)) It is important to standardize the variables (to use di\u000berent variable names) to avoid confusion when dropping the universal quanti\fers. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (2.3) Convert the FOL statements obtained in 2.2 into CNF. The statements are converted as follows to CNF: 1. 8p((P ass(p; History) ^ W in(p; Lottery)) ) Happy(p)) \u0011 8p(:(P ass(p; History) ^ W in(p; Lottery) _ Happy(p)) \u0011 8p(:P ass(p; History) _ :W in(p; Lottery) _ Happy(p)) 2. 8q8r((Study(q) _ Lucky(q)) ) P ass(q; r)) \u0011 8q8r(:(Study(q) _ Lucky(q)) _ P ass(q; r)) \u0011 8q8r((:Study(q) ^ :Lucky(q)) _ P ass(q; r)) \u0011 (:Study(q) ^ :Lucky(q)) _ P ass(q; r) \u0011 (:Study(q) _ P ass(q; r)) ^ (:Lucky(q) _ P ass(q; r)) 3. No action required. 4. No action required. 5. 8s(Lucky(s) ) W in(s; Lottery)) \u0011 :Lucky(s) _ W in(s; Lottery) We thus end up with the following clauses: 1. :P ass(p; History) _ :W in(p; Lottery) _ Happy(p) 2. :Study(q) _ P ass(q; r) 3. :Lucky(q) _ P ass(q; r) 4. :Study(John) 5. Lucky(John) 6. :Lucky(s) _ W in(s; Lottery) Note that universal quanti\fers have been dropped because all variables were universally quanti\fed. Skolem functions are only introduced to remove existential quanti\fers. (See section 9.5 of R&N.) 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 (2.4) Use resolution refutation to prove that John is happy. In order to use resolution refutation, we negate the goal, convert the negated goal to clause form if necessary, and add the resulting clause(s) to the set of premises (clauses 1 to 6 in part (2.3) above). Here the goal is: Happy(John). Therefore the negation of the goal is: :Happy(John). We then resolve the premises together with the negated goal until the empty clause (Nil) is generated. Review the ground resolution theorem to make sure you understand why this ap- proach works. Also review section 7.5: Remember that \u000b j= \f only if (\u000b ^ :\f) is unsatis\fable. 1. :P ass(p; History) _ :W in(p; Lottery) _ Happy(p) premise 2. :Study(q) _ P ass(q; r) premise 3. :Lucky(q) _ P ass(q; r) premise 4. :Study(John) premise 5. Lucky(John) premise 6. :Lucky(s) _ win(s; Lottery) premise 7. :Happy(John) negation of goal 8. :W in(p; Lottery) _ happy(p) _ :Lucky(p) 1&3, fp/qg, fhistory/rg 9. :W in(John; Lottery) _ Happy(John) 5&8, fJohn/pg 10. :W in(John; Lottery) 9&7 11. W in(John; Lottery) 5&6, fJohn/wg 12. ; 10&11 We have shown that the negation of the goal together with the premises produce a contradiction (empty clause). Therefore the goal, namely Happy(John), is entailed by the premises. It is important to show which clauses form part of the resolution to produce the resolvent. You must also always show the substitutions. Remember: given a fact with a constant, one cannot simply replace the constant with a variable to derive a new (general) statement. For example, suppose we add Carol to the list of persons in the vocabulary for the above problem. We cannot derive: Lucky(x) fx=Johng, and then Lucky(Carol) fCarol=xg 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x1 x2 x3 f(x1, x2, x3) 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 Table 1: Boolean function table Question 3 (3.1) Convert the Boolean function in Table 1 to a decision tree: No information gain values were given, so it becomes a matter of picking the se- quence in which the variables are to be evaluated. The next step would be to simplify the decision tree by consolidating equivalent leaf nodes. Variable order x1; x2; x3: x1 x2 x3 1 0 0 1 0 x3 1 0 1 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 This can be simpli\fed to: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 x1 x2 x3 1 0 0 1 0 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 Variable order x1, x3, x2: x1 x3 1 0 x2 0 0 1 1 1 0 x3 x2 1 0 0 1 0 x2 0 0 1 1 1 1 Variable order x2, x1, x3: x2 x3 x2 1 0 0 1 0 x2 1 0 0 1 1 0 x3 1 00 x2 0 0 1 1 1 1 Variable order x2, x3, x1: 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x2 x3 1 0 0 1 0 x3 x1 1 0 0 1 0 1 1 1 Variable order x3, x2, x1: x3 x2 1 0 x1 1 0 0 1 1 0 x2 0 0 1 1 1 Variable order x3, x1, x2: x3 x1 1 0 x2 1 0 0 1 1 0 x1 x2 0 0 1 1 0 x2 0 0 1 1 1 1 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 (3.2) When we construct a decision tree without the bene\ft of gain values, the order in which we evaluate the variables is important. Why? It may be possible to consolidate leaf nodes with similar values to produce a smaller, more compact tree. Question 4 The National Credit Act introduced in South Africa in 2007 places more responsibility on a bank to determine whether the loan applicant will be able to a\u000bord it. Blue Bank has a table of information on 14 loan applications they have received in the past: No. Credit history Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 2 UNKNOWN HIGH NO R15k - R35k HIGH 3 UNKNOWN LOW NO R15k - R35k MEDIUM 4 UNKNOWN LOW NO < R15k HIGH 5 UNKNOWN LOW NO > R35k LOW 6 UNKNOWN LOW YES > R35k LOW 7 BAD LOW NO < R15k HIGH 8 BAD LOW YES > R35k MEDIUM 9 GOOD LOW NO > R35k LOW 10 GOOD HIGH YES > R35k LOW 11 GOOD HIGH NO < R15k HIGH 12 GOOD HIGH NO R15k - R35k MEDIUM 13 GOOD HIGH NO > R35k LOW 14 BAD HIGH NO R15k - R35k HIGH Table 2: Risk information table Use the information in Table 2 to construct a decision tree that will assist the bank in determining the risk associated with a new loan application. In order to determine the information gain of any di\u000berent attributes of a certain collection of data, the calculation of entropy is important the notion of information gain is de\fned in terms of entropy. Entropy can be described as a measure of impurity of an arbitrary collection of examples. Russell & Norvig describe entropy as a measure of the uncertainty of a random variable, and mention that the acquisition of information corresponds to a reduction in entropy. Namely a random variable with only one value has no uncertainty and thus its entropy is de\fned as zero; thus we gain no information by observing its value. For any attribute A, if no information can be gained regarding the decision from attribute A, then the entropy of attribute A is equal to 0. If all the members of a class are split equally by any attribute A, then the entropy of A is 1. For any collection S the maximum entropy value is 1. Formally, the entropy of a random variable V with value vk, each with probability P (vk) is de\fned as: H(V ) = nX k=1 \u0000P (vk)log2 1 P (vk) = \u0000 nX k=1 P (vk)log2 1 P (vk) (1) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Maybe a more comprehensible way of de\fning the entropy of any collection S is as follows: Entropy(S) = \u0000 cX i=1 pilog2(pi) (2) This corresponds to what Russell and Norvig refer to as information content. If the possible answers vi have probabilities P (vi) then the information content I of the actual answer is given by: I(P (v1); : : : ; P (vn)) = nX i=1 \u0000P (vi)log2P (vi) (3) You may see the negative as a way of making the values of pilog2(pi) positive because all pi < 1, i.e. each represents a probability of the sample set. In what follows we will use the ID3 algorithm to develop our decision tree. Our collection of 14 examples S, has four meaningful attributes (Credit History, Debt, Collateral, Income), and a 3-wise classi\fcation (LOW, MEDIUM, HIGH). Since there are no repeat values in the No. attribute it plays no role in the classi\fcation and can be ignored (although we will show the No. attribute in further tables so that we know which examples we are working with). For purposes of clarity in the formulae, we will shorten the attribute labels and values as follows: \u000f Credit History = CH \u000f Debt = D \u000f Collateral = C \u000f Income = I \u000f BAD = B \u000f UNKNOWN = U \u000f GOOD = G \u000f HIGH = H \u000f LOW = L \u000f <R15K = 15K \u000f R15K-R35K = 15K-35K \u000f >R35K = 35K \u000f MEDIUM = M We will also not be repeating calculations at every step: we show the full set of calculations for the \frst level of the tree, after that we will only show the \fnal result of the calculation. Summarise the example set, S = f1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14g, as: S = [5L; 3M ; 6H] We start by calculating the Entropy for our set of examples: 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Entropy(S) = 3X i=1 \u0000pilog2pi = \u0000( 5 14)log2( 5 14) \u0000 ( 3 14)log2( 3 14) \u0000 ( 6 14)log2( 6 14) = \u0000( 5 14)(log25 \u0000 log214) \u0000 ( 3 14)(log23 \u0000 log214) \u0000 ( 6 14)(log26 \u0000 log214) = \u0000( 5 14) \u0012 log5 log2 \u0000 log14 log2 \u0013 \u0000 ( 3 14) \u0012 log3 log2 \u0000 log14 log2 \u0013 \u0000 ( 6 14) \u0012 log6 log2 \u0000 log14 log2 \u0013 = 0:531 + 0:476 + 0:524 = 1:531(max = 1:585) We have to determine the information gain (IG) of the di\u000berent attributes in order to select the best choice for the root node. The information gain measures the expected reduction of entropy { the higher the IG, the higher the expectation of reduction of entropy. In what follows we calculate the information gain for each of the four attributes. Credit History: Values (CH ) = B, G, U S = [5L; 3M ; 6H] SB [0L; 1M ; 3H] SG [3L; 1M ; 1H] SU [2L; 1M ; 2H] Entropy(SB) = \u0000(0 4 )log2(0 4) \u0000 (1 4 )log2(1 4) \u0000 (3 4 )log2(3 4) = 0:811 Entropy(SG) = \u0000(3 5 )log2(3 5) \u0000 (1 5 )log2(1 5) \u0000 (1 5 )log2(1 5 ) = 1:371 Entropy(SU ) = \u0000(2 5 )log2(2 5) \u0000 (1 5 )log2(1 5) \u0000 (2 5 )log2(2 5) = 1:522 Gain(S; CH) = Entropy(S) \u0000 X v2V alues(A) jSvj jSj Entropy(Sv) = Entropy(S) \u0000 ( 4 14)Entropy(SB) \u0000 ( 5 14)Entropy(SG) \u0000 ( 5 14)Entropy(SU ) = 1:531 \u0000 ( 4 14)0:811 \u0000 ( 5 14)1:371 \u0000 ( 5 14)1:522 = 0:266 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Debt: Values(D) = L, H S = [5L; 3M ; 6H] SL [3L; 2M ; 2H] SH [2L; 1M ; 4H] Entropy(SL) = \u0000(3 7)log2(3 7 ) \u0000 (2 7)log2(2 7 ) \u0000 (2 7)log2(2 7 ) = 1:557 Entropy(SH) = \u0000(2 7 )log2(2 7) \u0000 (1 7 )log2(1 7) \u0000 (4 7 )log2(4 7) = 1:379 Gain(S; D) = Entropy(S) \u0000 ( 7 14)Entropy(SL) \u0000 ( 7 14)Entropy(SH) = 1:531 \u0000 ( 7 14)1:557 \u0000 ( 7 14)1:379 = 0:063 Collateral: Values (C) = Y,N S = [5L; 3M ; 6H] SY [2L; 1M ; 0H] SN [3L; 2M ; 6H] Entropy(SY ) = \u0000(2 3 )log2(2 3) \u0000 (1 3 )log2(1 3) \u0000 (0 3 )log2(0 3) = 0:918 Entropy(SN ) = \u0000( 3 11)log2( 3 11) \u0000 ( 2 11)log2( 2 11) \u0000 ( 6 11)log2( 6 11) = 1:435 Gain(S; C) = Entropy(S) \u0000 ( 3 14)Entropy(SY ) \u0000 (11 14)Entropy(SN ) = 1:531 \u0000 ( 3 14)0:918 \u0000 (11 14)1:435 = 0:207 Income: Values (I ) = 15 , 15-35, 35 S = [5L; 3M ; 6H] S15 [0L; 0M ; 4H] 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 S15\u000035 [0L; 2M ; 2H] S35 [5L; 1M ; 0H] Entropy(S15) = \u0000(0 4 )log2(0 4) \u0000 (0 4 )log2(0 4) \u0000 (4 4 )log2(4 4) = 0 Entropy(S15\u000035) = \u0000(0 4)log2(0 4 ) \u0000 (2 4)log2(2 4 ) \u0000 (2 4)log2(2 4 ) = 1 Entropy(S35) = (5 6 )log2(5 6) \u0000 (1 6 )log2(1 6) \u0000 (0 6 )log2(0 6) = 0:650 Gain(S; I) = Entropy(S) \u0000 ( 4 14)Entropy(S15) \u0000 ( 4 14)Entropy(S15\u000035) \u0000 ( 6 14)Entropy(S35) = 1:531 \u0000 ( 4 14)0 \u0000 ( 4 14)1 \u0000 ( 6 14)0:650 = 0:967 Attribute Income provides the highest information gain (0.967), i.e. the best prediction for our target attribute, Risk. Income becomes the root node of our decision tree. Income < 15K 15K \u0000 35K > 35K The ID3 algorithm now performs a recursion with the three subsets of our examples, based on the three possible values of the Income attribute (<R15K, R15K-R35K, >R35K). The \frst subset, corresponding to Income = f< R15Kg, is: No. Credit History Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 4 UNKNOWN LOW NO < R15k HIGH 7 BAD LOW NO < R15k HIGH 11 GOOD HIGH NO < R15k HIGH We notice that the target attribute is the same for all four of our examples, i.e. all four examples produce the same target value, HIGH. We have our \frst leaf node, labelled HIGH. 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K 15K \u0000 35K > 35K The second subset, corresponding to Income = fR15K \u0000 R35Kg, is: No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM 12 GOOD HIGH NO R15K-R35K MEDIUM 14 BAD HIGH NO R15K-R35K HIGH Our subset collection of 4 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classi\fcation (MEDIUM, HIGH): S15K\u000035K = f2; 3; 12; 14g = [2M ; 2H]. We start by calculating the Entropy for this subset: Entropy(S15K\u000035K) = 2X i=1 \u0000pilog2pi = \u0000(2 4 )log2(2 4) \u0000 (2 4 )log2(2 4) = 0:5 + 0:5 = 1 Calculate the information gain for the attributes of the subset (entropy for each attribute is calculated in the same fashion as above). Credit History: Gain(S15K\u000035K; CH) = Entropy(S15K\u000035K) \u0000 (1 4 )Entropy(SB) \u0000 (1 4 )Entropy(SG) \u0000 (2 4 )Entropy(SU ) = 1 \u0000 (1 4)0 \u0000 (1 4 )0 \u0000 (2 4)1 = 0:5 Debt: Gain(S15K\u000035K; D) = Entropy(S15K\u000035K) \u0000 (1 4 )Entropy(SL) \u0000 (3 4)Entropy(SH) = 1 \u0000 (1 4 )0 \u0000 (3 4)0:918 = 0:312 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Collateral: Gain(S15K\u000035K; C) = Entropy(S15K\u000035K) \u0000 (0 4)Entropy(SY ) \u0000 (4 4)Entropy(SN ) = 1 \u0000 (0 4 )0 \u0000 (4 4)1 = 0 Attribute Credit History provides the highest Information Gain in this subset (0.5). Thus it becomes our next decision node. Income HIGH < 15K Credit History BAD GOOD UNKNOWN 15K \u0000 35K > 35K The third subset, corresponding to Income = f> R35kg, is then used. No. Credit History Debt Collateral Income Risk 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW 8 BAD LOW YES >R35K MEDIUM 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 6 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classi\fcation (LOW, MEDIUM): S35K = f5; 6; 8; 9; 10; 13g = [5L; 1M ] Start by calculating the Entropy for this subset: Entropy(S35K) = 2X i=1 \u0000pi log2pi = \u0000(5 6) log2 (5 6 ) \u0000 (1 6) log2 (1 6 ) = 0:65 15 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace We now proceed to calculate the information gain for each of the three attributes in the subset: Credit History: V alues(CH) = B; G; U S35K = [5L; 1M ] SB [0L; 1M ] SG [3L; 0M ] SU [2L; 0M ] Entropy(SB) = \u0000(0 1 )log2(0 1) \u0000 (1 1 )log2(1 1) = 0 Entropy(SG) = \u0000(3 3 )log2(3 3) \u0000 (0 3 )log2(0 3) = 0 Entropy(SU ) = \u0000(2 2 )log2(2 2) \u0000 (0 2 )log2(0 2) = = 0 Gain(S35K; CH) = Entropy(S35K) \u0000 (1 6 )Entropy(SB) \u0000 (3 6)Entropy(SG) \u0000 (2 6)Entropy(SH) = 0:65 \u0000 (1 6 )0 \u0000 (3 6)0 \u0000 (2 6 )0 = 0:65 Debt: V alues(D) = L; H S35K = [5L; 1M ] SL [5L; 1M ] SH [2L; 0M ] 16 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Entropy(SL) = \u0000(3 4 )log2(3 4) \u0000 (1 4 )log2(1 4) = 0:811 Entropy(SG) = \u0000(2 2 )log2(2 2) \u0000 (0 2 )log2(0 2) = 0 Gain(S35K; D) = Entropy(S35K) \u0000 (4 6)Entropy(SL) \u0000 (2 6 )Entropy(SH) = 0:65 \u0000 (4 6)0:811 \u0000 (2 6 )0 = 0:109 Collateral: V alues(D) = Y; N S35K = [5L; 1M ] SY [2L; 1M ] SN [3L; 0M ] Entropy(SL) = \u0000(2 3)log2(2 3 ) \u0000 (1 3)log2(1 3 ) = 0:918 Entropy(SG) = \u0000(3 3)log2(3 3 ) \u0000 (0 3)log2(0 3 ) = 0 Gain(S35K; D) = Entropy(S35K) \u0000 (3 6)Entropy(SY ) \u0000 (3 6)Entropy(SN ) = 0:65 \u0000 (3 6)0:918 \u0000 (3 6)0 = 0:191 In summary: Gain(S35K; CH) = 0:65 Gain(S35K; D) = 0:109 Gain(S35K; Collateral) = 0:191 Attribute Credit History provides the highest Information Gain in this subset and becomes the decision node on this branch of the decision tree. 17 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History BAD GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The algorithm continues with recursion to the next level. The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = BAD provides a single example (14). No. Credit History Debt Collateral Income Risk 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: HIGH. Income HIGH < 15K Credit History HIGH BAD GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = GOOD is also a single example (12). No. Credit History Debt Collateral Income Risk 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: MEDIUM. 18 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = UNKNOWN has two examples (2,3). No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a binary classi\fcation (MEDIUM, HIGH shortened for clarity to M,H): SU nknown = f2; 3g = [1M ; 1H]. We again calculate the entropy for the subset: Entropy(S) = \u0000(1 2 )log2(1 2) \u0000 (1 2 )log2(1 2) = 1 Debt V alues(D) = L; H SU N KN OW N = [1L; 1M ] SL [2L; 1M ] SH [3L; 0M ] 19 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Entropy(SL) = \u0000(1 1 )log2(1 1) \u0000 (0 1 )log2(0 1) = 0 Entropy(SH) = \u0000(0 1 )log2(0 1) \u0000 (1 1 )log2(1 1) = 0 Gain(SU N KN OW N ; D) = Entropy(SU N KN OW N ) \u0000 (1 2)Entropy(SL) \u0000 (1 2 )Entropy(SH) = 1 \u0000 (1 2 )0:918 \u0000 (1 2 )0 = 1 Collateral V alues(D) = N SU N KN OW N = [1M ; 1H] SN [1M ; 1H] Entropy(SN ) = \u0000(1 2)log2(1 2 ) \u0000 (1 2)log2(1 2 ) = 1 Gain(SU N KN OW N ; C) = Entropy(SU N KN OW N ) \u0000 (2 2)Entropy(SN ) = 1 \u0000 (2 2 )1 = 0 In summary: Gain(SU N KN OW N ; D) = 1 Gain(SU N KN OW N ; Collateral) = 0 Debt gives us perfect information gain, and thus becomes the next decision node. 20 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Income HIGH < 15K Credit History HIGH BAD MEDIUM Good Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K We return to credit history (we \frst \fnish all the nodes on the same level). The subset of Credit History that corresponds to the Income = >R35K and Credit History = BAD contains only 1 example (8). No. Credit History Debt Collateral Income Risk 8 BAD LOW YES >R35K MEDIUM We thus have another leaf node: MEDIUM. Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD GOOD UNKNOWN > 35K 21 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace The subset of Credit History that corresponds to Income = >R35K and Credit History = GOOD provides three examples (9,10,13): No. Credit History Debt Collateral Income Risk 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 3 examples S, has two meaningful attributes (Debt, Collateral), and a single classi\fcation (LOW). Hence we again have a leaf node LOW. Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = >R35K and Credit History = UNKNOWN is provides 2 examples (5,6). No. Credit History Debt Collateral Income Risk 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a single classi\fcation (LOW). Hence we again have a leaf node LOW. 22 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2020 Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD LOW UNKNOWN > 35K We can now do the last set of calculations. With Debt = HIGH we have only one example left (2), which makes this a leaf node. No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH Similarly, when Debt = LOW we have one example left (3). This creates the \fnal leaf node. No. Credit History Debt Collateral Income Risk 3 UNKNOWN LOW NO R15K-R35K MEDIUM These last two steps complete our decision tree (note that Collateral plays no role in the decision based on this decision tree). 23 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH HIGH MEDIUM LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD LOW UNKNOWN > 35K Copyright c\rUNISA 2020 (v2020.1.0) 24 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 1 Solution Total Marks: 62 Unique Assignment Number: 741522 Study material: Chapters 1 through 4. You may skip sections 4.2 and 4.5. Important: When we use the phrase `de\fne' (particularly in Question 2), we are looking for a formal de\fnition using some form of formal notation, and not simply an English description or de\fnition. For example: `De\fne the initial state for an agent in Johannesburg'. Answer: In(Johannesburg). `De\fne the actions available to this agent given that the agent simply moves between major metropolitan areas'. Answer: Actions(In(Johannesburg)) = fGo(Bloemontein), Go(Durban), . . . g. When we want an English de\fnition we will explicitly ask for it. Question 1: 8 Marks (1.1) The road safety of children at school road-crossings are extremely important1. Consider a agent that controls the booms at a school-crossing. When there are children that want to cross the road, the agent should lower the booms, so that the road tra\u000ec stops, and the children can cross safely. The agent should not close the boom when there are vehicles in the crossing, or raise the booms when there are children in the crossing. The agent thus has sensors to detect children on the side of the road, and sensors to detect if there are objects in the crossing. Answer the following questions. Justify your answer in each case. (a) (2)Is the environment fully, or partially observable? It is important to consider the environment in terms of what the agent needs in order to complete its task. It is also important to realise that this is simply a toy problem and we need not concern ourselves with issues outside of the described environment. The agent need not be aware of children other than those who need to cross the road, i.e. those that are in the immediate vicinity of the crossing. It also does not need to track all cars, just those that may be in the crossing when the booms should be lowered. Given all the above, this may be considered enough to make the environment fully observable. (b) (2)Is the environment competitive, or cooperative? There is only one agent in operation. It is thus a single-agent environment which is by de\fnition neither competitive, nor cooperative. (c) (2)Is the environment static, or dynamic? The environment may change while the agent is deliberating, for example, more children may arrive wishing to cross the road, while the agent is determining if it is 1https://www.arrivealive.co.za/Scholar-Patrol-and-Road-Safety 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2019 safe to lift the boom, or while other students are still crossing. Changing environments like this are dynamic. (1.2) (2)Is this an example of a model-based, or re\rex-based agent? Justify your answer. This is a simple re\rex-based agent. It can determine exactly how to behave by simple polling of its sensors. Question 2: 10 Marks One night three friends come to a rickety bridge spanning a torrential river. They want to cross it, but do not trust the bridge to carry all of them at the same time. They decide to cross the bridge two at a time. To make matters worse, the bridge is in such disrepair that some of the wooden planks that make up the bridge have fallen away leaving gaping holes { making the crossing very dangerous. Luckily the three friends (Andile, Bob, and Charlize) have a battery powered torch with them. They decide that the people crossing the bridge will take the torch with them. Bob, however, hurt his ankle while walking in the dark, and he can only manage a slow limp across the bridge. The friends are worried that the torch may run out of power, before they all manage to cross, and decide to \fgure out how to get everyone across in the least amount of time. By their estimate, Andile can cover the length of the bridge in 12 minutes, Bob can do so in 19, and Charlize in 13. Suppose the state is represented as a set S \u0012 fAndile; Bob; Charlize; T orchg. If pi 2 S, then pi is on the right-hand side of the bridge, otherwise they (it) are on the left-hand side. T orch represents the torch and, as with the people, if it is present in S, then it means the torch is on the right-hand side of the bridge, otherwise it is on the left-hand side. As people (and the torch) move from one side of the bridge to the other, they are added/removed to the set representing the current state. For example, suppose we start with S = fAndile; Bob; Charlize; T orchg and Andile walks across the bridge with the torch, we have S0 = fBob; Charlizeg. (2.1) (1)De\fne the goal state for this problem. Since the goal is that everyone (and the torch) is on the other side the bridge, and the state representation speci\fes what is on this side, the goal state is the empty set, i.e. fg. (2.2) (3)Suppose the current state is S = fBobg. De\fne the applicable actions for this state. (Hint: you \frst need to de\fne the notation for the actions, and then specify the applicable actions for this state.) All actions for this problem can be written as Cross(P ) with P \u0012 fAndile; Charlize; Bobg, and 1 \u0014 jP j \u0014 2. This speci\fes that one or two of the three people can cross the bridge at a time. Note that the action does not track the torch; it will move along with the people who cross. The transition function must move the Torch accordingly. Since state S speci\fes that Bob is on the other side of the bridge without the torch, Andile and Charlize must be on this side with the torch. The applicable actions from state S are thus: 1. Cross(fAndileg) 2. Cross(fCharlizeg) 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 3. Cross(fAndile; Charlizeg) (2.3) (6)Provide the transition model for the search, but limit your answer to the case where S = fAndile; Bob; T orchg. You will again have to provide the applicable actions before providing the transition model. Make sure you show the resulting states when applying the actions. The applicable actions for this state are: 1. a0 = Cross(fAndileg) 2. a1 = Cross(fBobg) 3. a2 = Cross(fAndile; Bobg) Our transition model is then all the resulting states when applying these actions. 1. Result(a0; S) 7! S0 = fBobg 2. Result(a1; S) 7! S0 = fAndileg 3. Result(a2; S) 7! S0 = fg Question 3: 5 Marks (3.1) (3)Explain how a Breadth First Search (BFS) ensures that it always expands the shallowest node \frst. Provide an example to aid your discussion. BFS uses a FIFO queue for its frontier. This means whenever a node is expanded, the generated nodes are placed on the frontier as they are generated. This means a node's immediate children are placed on the queue, and will be expanded before any nodes further away from the node is expanded. Example evaluated based on correctness of FIFO discussion. (3.2) (2)Explain when one might want to choose Depth First Search (DFS) over BFS. (Hint: In which version of the algorithm does one have an advantage over the other?) DFS has a clear space complexity advantage over BFS when a tree search is per- formed. Question 4: 5 Marks Consider the search tree in Figure 1. Show the order in which the nodes will be expanded at each level (start with level 0 and continue until the goal test is successful), given that IDS is used. Assume the goal node is G, and that nodes are expanded from left to right (M is expanded before E and so on). (Hint: make sure you understand the di\u000berence between expansion and generation, and also that you understand when goal checks occur.) Expansion means we apply legal actions to a chosen node { this, by de\fnition, means that our order looks somewhat di\u000berent from what one may expect. Also, note that the IDS is a repeated invocation of the depth limited search. In the depth limited search, once we generate a node, we 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2019 O M D K I C J H E L F G B N A Figure 1: Search Tree (Iterative Deepening Search (IDS)) recursively call the depth limited search on that node. Thus, goal state checking happens immediately after generation for each node. In general, the children of nodes that are expanded are thus goal checked. 1. Limit 0: (No expansion { O is just goal tested) 2. Limit 1: O (M and E are just goal tested, not expanded) 3. Limit 2: O M E 4. Limit 3: O M D C E L 5. Limit 4: None, search terminates once L is expanded { once L is expanded, G will be generated and goal tested on the recursive call. Visually, this is what happens (squares are goal tests and circles are expansions). Limit 0: O Limit 1: O M E Limit 2: 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace O M D C E L B Limit 3: O M D K I C J H E L F G Question 5: 16 Marks Consider the graph provided in Figure 2, and answer the questions that follow. The step cost between nodes is provided next to the edges. (5.1) (3)Prove that a consistent heuristic is admissable. (Hint: if you can prove that admissibility holds for nodes 1 step away from the goal, then you can prove that nodes k-steps away from the goal is admissible). We \frst repeat the two applicable de\fnitions: A heuristic is consistent if its estimate of the cost to the goal is always less- than-or-equal to the sum of the actual cost to any successor node plus its estimate from that node to the goal. As an equation: h(n) \u0014 c(n; n 0) + h(n0) where n is a node and n 0 is a neighbour of n. Also, h(m) = 0 if m is the goal. A heuristic is admissible if the estimated cost to the goal is always less-than- or-equal to the actual cost to the goal. As an equation: h(n) \u0014 c(n; m) 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2019 H B G K N D E C J A O L I M F 4 8 10 7 5 8 4 6 7 4 3 2 7 5 8 Figure 2: Search As suggested in the hint, we give a proof by induction: Say h is consistent. 1. Base case: Assume that the goal is a neighbour of n, i.e. n0 = m. Since h is consistent, h(n0) = 0 and h(n) \u0014 c(n; n 0) + 0. So h is admissible, 1 step from the goal. 2. Inductive case: Let n 0 be a node on the shortest path between n and m, k steps from m, and say h(n 0) \u0014 c(n0; m). Since h is consistent, h(n) \u0014 c(n; n 0) + h(n0). So h(n) \u0014 c(n; n 0) + c(n 0; m) = c(n; m). Since n is k + 1 steps from the goal, we conclude that the heuristic is admissible. (5.2) (11)Perform a Uniform Cost Search (UCS) on the graph. The start node is M and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 M(^g = 0) . . . . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^g value. 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Step Node expanded Frontier 1. M(^g = 0) 2 M E-M(7), O-M(7), G-M(10) 3 E-M O-M(7), G-M(10), A-O-M(12), N-O-M(14), C-E-M(15) 4 O-M G-M(10), A-O-M(12), N-O-M(14), C-E-M(15) 5 G-M A-O-M(12), H-G-M(14), N-O-M(14), C-E-M(15), F-G-M(18) 5 A-O-M H-G-M(14), N-O-M(14), C-E-M(15), F-G-M(18) 7 H-G-M N-O-M(14), C-E-M(15), D-H-G-M(17), F-G-M(18), J-H-G-M(18) 8 N-O-M C-E-M(15), D-H-G-M(17), F-G-M(18), J-H-G-M(18) 9 C-E-M D-H-G-M(17), F-G-M(18), J-H-G-M(18) 10 D-H-G-M F-G-M(18), J-H-G-M(18) 11 F-G-M J-H-G-M(18) Note at step 8, another path to C is found, and ignored, since it is higher than the existing path. At step 9, N is already in the explored list, so we don't add M-E-C-N to the frontier. At step 4, expanding G-M actually generates F-G-M (a goal path), but since there may still be a shorter path to F, the algorithm carries on. Ties were broken using lexicographical name ordering of the node name in the state space. The \fnal path is thus: M-G-F with a path cost of 18. (5.3) (2)Perform an A\u0003 search on the graph in Figure 2. The start node is G and the goal node is H. Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use table 1 for the ^h values for each node in the graph. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 G(^g = 0, ^h = 20, ^f = 20) 2 . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^f value. Remember that the cost (both step and path) are calculations with respect to the e\u000bort expended in order to reach a node. In a navigation setting, for example, this could mean distance, time, or fuel. In other settings it might mean something else: hourly wages paid, volume of paint used, compute cycles on a cloud CPU, number of hours inoperative, etc. Nodes can thus also just be a snapshot of the world, and need not just be location on a map { think about it carefully: if your search leads you to node X, all you've done is created a snapshot of a potential world in which you (or the agent) are in world-state represented by node X. IF X is a city on a map, and the search has plotted a path to X, it is simply a state in which the agent has travelled to reach X { and thus simply a snapshot of the potential world. (For example, we can use A\u0003 to solve the Australian map colouring CSP.) 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2019 Node Estimated COST to goal A 12 B 15 C 8 D 13 E 15 F 18 G 19 H 0 I 7 J 7 K 14 L 14 M 12 N 17 O 8 Table 1: Estimated Distance to Goal for A \u0003 search. Step Node expanded Frontier 1. G(^g = 0, ^h = 19, ^f = 19) 2 G H-G(4,0,4), F-G(20,8,18), G-M(10,12,22) 3 H-G F-G(20,8,18), G-M(10,12,22) The \fnal path is: G-H, with a cost of 4. Question 6: 18 Marks Consider the problem of placing spaza-shops in a neighbourhood. The ideal is to have all the shops operating in harmony. To achieve this, we need to make sure that they are placed in such a way that they don't interfere with eachother. That is, we don't want them to contest for customers. As such we must place them in such a way that no spaza can poach another's customers. As it stands the four spaza-shops in a certain neighbourhood were opened withtout these con- siderations, and as a result there has been some frustration amongst the shop-owners as well as the residents. In an attempt to remedy this unfortunate state of a\u000bairs, you have been tasked to \fnd a way to optimally place the shops to improve relations among the shop-owners and residents. The shop owners, are extremely amenable to any solution, and have agreed that moving shop is not a problem. Using local search algorithms, a search to solve the problem is performed as follows: \u000f Given a start or initial state, \u000f De\fne an objective function to aid the local search, \u000f Generate a successor state from the current state by moving a spaza-shop to a new location, \u000f An optimum (minimum/maximum as measured by the objective function) is considered a goal. 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B C D 1st Str. 2nd Str. 3rd Str. 4th Str. 5th Str.1stAve.2ndAve.3rdAve.4thAve.5thAve. Figure 3: Initial shop locations After thinking for a while, you simplify the neighbourhood to a four-by-four grid, with each shop presented as shop A, B, C, or D. The grid lines represent the streets, and avenues in the neighbourhood, and the blocks represent typical town blocks that may contain houses or shops. You map out the location of the shops and produce the start state in Figure 3 (we represent the state grahically simpli\fed to aid your e\u000bort, and you are welcome to provide graphical representations of successor states if asked): The shop-owners have agreed on the following rules: 1. Shops may not be located on the same street/avenue. 2. There must be at least one block between two shops. Based on these rules, you can see that no shops violate rule 1, and C and D violate rule 2. (6.1) (3)Provide a good objective function that can be used as a maximizer (i.e. a global maxi- mum, a reward function) for the problem. Hint: 1. An objective function (also called either a loss, or reward function) is a function that maps the current state to some linear value which can be used to judge the \ftness or goodness of the state. When we want to avoid loss, we de\fne an objective function with respect to loss, and we try to minimize loss by minimising the evaluation of the state using the objective function (i.e. we look for a state that results in the smallest value when evaluated using the objective function). When we want reward, we de\fne an objective function with respect to reward and we try to maximize the objective function. 2. First write down the function in plain English, and then provide the mathematical equation for it. 3. Use the streets, and blocks in your equation. For a maximizer, we want to express the objective function as a maximizer of the rules. So we want a state that has: 1. As many streets as possible that do not have two or more shops on them. 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/1/2019 2. As many blocks with a shop on them that is not adjacent to a block with another shop on it. For a given state S, we de\fne the following: 1. A : S 7! N which returns the number of streets and avenues that have 1 or less shops on them. 2. B : S 7! N with returns the number of blocks with a shop on it, that is not adjacent to another block with a shop on it. The objective function is then simply a sum of these values: F (S) = A(S) + B(S) (1) (6.2) (2)Now that you have de\fned your objective function, use it to evaluate the start state as provided in Figure 3. Show your calculations. F (S) = A(S) + B(S) = 10 + 2 = 12 (6.3) (4)A hill-climb/hill-descent local search generates a series of successors, and takes the best one from among them (using the objective function). Beginning from the initial state in Figure 3, provide two successors, one that is worse, and one that is an improvement. Show why the successor is better, or worse by using the objective function to evaluate it. Remember: generate all possible successors, and choose the better/worse from among them. To simplify the search, each successor state is generated by moving one shop one street up or down on the grid { that is relocating it to a di\u000berent street, and never to a di\u000berent avenue). Worse: Move Shop D to 3rd street. This evaluates to F (S0 1) = 9 + 1 = 10 Better: Move shop D to 5th street. This evaluates to F (S0 2) = 9 + 4 = 13 (6.4) (7)From the previous question, take the 'better' state you identi\fed. Generate all possible successors (remember: a successor is generated by moving one shop, one street up or down). Are there any improvements (show your calculations for each state)? (Mark given for each successor that follows the search rules provided at start of question.) There is only one improvement: move shop A to 4th street. This yields F (S00) = 14 which is a solution to the problem. 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (6.5) (2)What type of topographical feature is most likely being created by the situation in the previous question? (Provide a rough sketch of this type of feature in a two dimensional state-space landscape.) Global Max Local Max The end result is a global maximum { a solution was found. Copyright c\rUNISA 2019 (v2019.1.1) 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 2 Solution Total Marks: 82 Unique Assignment Number: 772587 Study material: Chapters 5, 6, 7, 8. You may skip sections 5.5, 5.6, and 5.7. Question 1: 10 Marks (1.1) (2)Clearly explain what a utility function is, and why it is used during adversarial searches. A utility function provides an indication of the apparent numerical value of a state s for player p. It is used to \fnd the best available move for a player. (1.2) (3)Is the ideal strategy only available if we have perfect information? Explain your answer. No. Agents can still get the ideal strategy when playing without all the information . This means the ideal strategy includes the notion of limited information, however, an agent that has perfect information will most likely outperform and agent that has limited/imperfect information for the same problem. (1.3) (3)Explain how forward pruning works. Provide at least one approach to forward pruning in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering them. Beam search [others are also considered] only considers a sample of the best moves at each ply, but this may lead to the best move being pruned away. (1.4) (2)Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we prune. Otherwise minimax is an exhaustive search (for the parameters such as depth { plys { it is con\fgured for) and node orders do not matter. Question 2: 14 Marks Consider Figure 1 and answer the questions that follow. (The utility value of the leaf nodes are provided below the in brackets in the leaf node.) (2.1) (5)Provide the minimax values for all the non-leaf nodes. A = 5, B = 5, C = 3, G = 3, E = 8 (2.2) (2)Which move should MAX make? Explain your answer. B. The utility value for MAX for move B is higher than that of move C. (2.3) (5)Write down the \u000b=\f values for all the nodes (except the leaf nodes) if alpha/beta pruning is applied to the tree. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2019 A B D 5 E I 8 J -1 F 10 C G K -5 L 3 H 20 Figure 1: Minimax, alpha/beta Provided below is < node >= (\u000b; \f): 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B D 5 E I 8 J -1 F 10 C G K -5 L 3 H 20 v \u0015 \f: J cut v \u0014 \u000b: H cut v = \b\b\u00001 5 \u000b = \b\b\u00001 5 \f = 1 v =ˆ1 5 \u000b = \u00001 \f =ˆ1 5 v =ˆ1 3 \u000b = 5 \f = 1 v = \b\b\u00001 8 \u000b = \u00001 \f = 5 v = \b\b\u00001 ˆˆ\u00005 3 \u000b = 5 \f = 1 (1) (2) (3) 5 (4) (5) (6) 8 (7) 8 (8) (9) 10 (10) 5 (11) (12) (13) (14) -5 (15) (16) 3 (17) 3 (18) 3 The \fnal values are: A = (5; 1); B = (\u00001; 5); E = (\u00001; 5); C = (5; 1); G = (5; 1) (2.4) (2)Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). J was beta-cut, and H was alpha-cut. Question 3: 12 Marks Consider the subtraction game: two players (A and B) take turns removing items from a heap (just one heap). Each player may remove either one, two, or three items from the heap. The heap starts o\u000b with 21 items, and player A moves \frst. The objective of the game is to be the last player to remove items from the heap. That is, if it is your turn to move, and the heap is empty, you've lost the game1. The Initial state for the game is (A; 21) indicating that it is A's turn to move and there are 21 items on the heap. In general then, a state is represented as (P; n) where P 2 fA; Bg, and 0 \u0014 n \u0014 21. The evaluation function for non-terminal nodes is a simple threshold function de\fned as: eval(S) = ( \u00001 if S:n mod (k + 1) = 0; 1 otherwise 1visit https://youtu.be/aonCsvi0LKc to see how the game is played. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2019 S:n refers to the number of items left in the heap in state S, and mod is the integer modulo function. (3.1) (7)Draw the entire game tree, starting from the initial state, down to depth two (the initial state is at depth 0), and provide the evaluation for each state at depth 2. (A,21) (B,20) (A,19) (A,18) (A,17) (B,19) (A,18) (A,17) (A,16) (B,18) (A,17) (A,16) (A,15) (3.2) (4)Using the minimax algorithm, provide the backed-up values for states at depth 1 and 0. (Hint: Since you don't have the entire game tree, and thus no terminal states, you cannot use a utility value to calculate the backed up values. However, you do have an evaluation function.) There are \fve di\u000berent states on depth two (which is a max level): (A; 19), (A; 18), (A; 17), (A; 16), and (A; 15). eval((A; 19)) = 1, since (19 mod (3 + 1) = 19 mod 4 = 3, eval((A; 18)) = 1, eval((A; 17)) = 1, eval((A; 16)) = \u00001, eval((A; 15)) = 1. At depth one (a MIN level), (B; 20) \u0011 M IN (eval((A; 19)); eval((A; 18)); eval((A; 17)) \u0011 M IN (1; 1; 1) \u0011 1. (B; 19) \u0011 M IN (eval((A; 18)); eval((A; 17)); eval((A; 16)) \u0011 M IN (1; 1; \u00001) \u0011 \u00001. (B; 18) \u0011 M IN (eval((A; 17)); eval((A; 16)); eval((A; 15)) \u0011 M IN (1; \u00001; 1) \u0011 \u00001. Finally, at depth zero, (A; 21) \u0011 M AX(1; \u00001; \u00001) \u0011 1. (3.3) (1)Which node(s) would not have been evaluated at depth 2 if alpha/beta pruning was employed? Below (B,18): (A,15) (cut because \u000b = 1, and v = \u00001 from (A,16). Thus (A,15) is cut. Question 4: 6 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) (1)De\fne the Least Constraining Value (LCV) heuristic. The heuristic prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (4.2) (1)Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u0000 1-consistent and so on. This can only be done in exponential time which makes large problems intractable. (4.3) (1)De\fne the degree heuristic. This heuristic attempts to reduce the branching factor on future choices. (4.4) (2)If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to \fnd a solution by simply backtracking? Explain your answer. No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (4.5) (1)Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistency. (Or: it re- moves values from the domain of the neighbours of the variable for which the forward checking is being done { also acceptable answer.) Question 5: 19 Marks CSPs are especially useful when trying to solve scheduling problems. Consider the problem of determining how to assign aircraft in a \reet to particular \rights. A \right (or a leg) is simply a scheduled transference of passengers from a departing airport to a destination airport (with no stops inbetween). In order to transfer passengers between the source and destination airport a \right needs an aircraft. Additionally, aircraft have a minimum turn-around time of 30 minutes. That is, an aircraft cannot arrive, and then simply take of again. It has to taxi to the gate, passengers should debark, the aircraft should be cleaned, and the new passengers should embark. Only then can the aircraft taxi to the assigned runway and then take-o\u000b. The airline in question operates a small \reet of short-haul aircraft, and all \rights are only for 9 or fewer passengers. Consider the following \right schedule: Flight Departs Lands QQ144 9:15 10:45 QQ144 14:00 14:45 QQ169 12:15 13:15 QQ108 10:45 11:45 QQ256 09:30 10:15 QQ254 11:15 13:30 QQ099 11:15 13:30 QQ512 13:15 14:15 QQ056 11:15 11:45 QQ134 10:00 10:45 QQ134 14:00 14:45 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2019 You can assume that departure happens from the same airport (you don't have to worry about the location of the aircraft). The airline owns several Cessna 208 Grand Caravans (208B), which are: 1. XAX-143, 2. XAX-884, 3. XAX-547, 4. XAX-344, 5. XAX-254, 6. XAX-983, 7. XAX-124 (5.1) (1)The \frst step when representing a problem as a CSP is to de\fne the variables. The variables are those elements in the problem that get assigned something else from the problem. Read the above problem description carefully to determine which elements from the problem are variables. Now provide these variables for the problem. Remember to use the correct notation! Hint: In most cases the variables are those elements from the problem which will require the use of a limited item available. The variables are simply the \rights: X = fQQ144, QQ169, QQ108, QQ256, QQ254, QQ099, QQ512, QQ056, QQ134g. (5.2) (1)Once the variables have been de\fned, we proceed to de\fning the domain for each variable. That is, the `value' that each variable can take. De\fne the domain for each variable in the CSP. The domain for each variable will be the \right that it can take on. DX = f XAX- 143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124 g (5.3) (7)The constraints determine the `restrictions' placed on variables. De\fne the constraints for the variables in the CSP. 1. QQ144 6= QQ108 6= QQ256 6= QQ512 6= QQ134 2. QQ169 6= QQ254 6= QQ099 6= QQ512 3. QQ108 6= QQ254 6= QQ099 6= QQ056 6= QQ134 4. QQ256 6= QQ134 5. QQ254 6= QQ099 6= QQ512 6= QQ056 6. QQ099 6= QQ512 6= QQ056 7. QQ512 6= QQ134 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.4) (2)Provide the constraint graph for this problem. Graph must have: correct nodes , correct constraints QQ144 QQ169 QQ108 QQ256 QQ254 QQ099 QQ512 QQ056 QQ134 (5.5) (8)Provide the solution to the problem. Use the Minimum Remaining Values (MRV) heuris- tic, and at each step establish arc-consistency for the variables. Show how the solution is calculated in a step by step fashion. Provide the variables and their associated values as your \fnal answer! Using MRV we easily choose any of the variables, and we can easily assign any aircraft to them. Choose QQ144 = XAX-143. \u000f DQQ099;QQ056;QQ254;QQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983,XAX-124g \u000f DQQ108;QQ512;QQ256;QQ134 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g Using MRV we now select any of the variables that had their domain reduced from the previous step. Choose QQ256 = XAX-884. \u000f DQQ099;QQ056;QQ254;QQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983,XAX-124g \u000f DQQ108;QQ512 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ134 = fXAX-547, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ134 since it now has the MRV. Choose QQ134 = XAX-547. \u000f DQQ099;QQ056;QQ254;QQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ108;QQ512 = fXAX-884, XAX-344, XAX-254, XAX-983, XAX-124g 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2019 QQ108 and QQ512 have the MRV, so we arbitrarily choose: QQ108 = XAX-884 We choose QQ099 since it now has the least remaining values. Choose Q099 = XAX-344. \u000f DQQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX- 124g \u000f DQQ254;QQ099;QQ056 = fXAX-143, XAX-547, XAX-344, XAX-254, XAX-983, XAX- 124g \u000f DQQ512 = fXAX-884, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ512 since it now has the MRV. Choose QQ512 = XAX-884. \u000f DQQ169;QQ254;QQ099;QQ056 = fXAX-143, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ169 arbitrarily. Choose QQ169 = XAX-143. \u000f DQQ056 = fXAX-143, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ254;QQ099 = fXAX-547, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ254. Choose QQ254 = XAX-547. \u000f DQQ056 = fXAX-143, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ099 = fXAX-344, XAX-254, XAX-983, XAX-124g We choose QQ099 since it now has the least remaining values. Choose QQ099 = XAX-344. \u000f DQQ056 = fXAX-143, XAX-254, XAX-983, XAX-124g QQ056 is our last remaining variable. Choose Q056 = XAX-143. The problem is thus solved. QQ144 QQ169 QQ108 QQ256 QQ254 QQ099 QQ512 QQ056 QQ134 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Flight Plane QQ144 XAX-143 QQ169 XAX-143 QQ108 XAX-884 QQ256 XAX-884 QQ254 XAX-547 QQ099 XAX-344 QQ512 XAX-884 QQ056 XAX-143 QQ134 XAX-547 Question 6: 17 Marks Prove that A , (B ^ C) j= (A ) B) ^ (A ) C) using resolution. Hint: First convert the premise and the negation of the goal to Conjunctive Normal Form (CNF), and then apply the resolution rule to try to attain the empty clause. We \frst convert the premise to CNF. \u000f Eliminate i\u000b: (A ) (B ^ C)) ^ ((B ^ C) ) A) \u000f Eliminate implication: (:A _ (B ^ C)) ^ (:(B ^ C) _ A) \u000f Move : inwards: (:A _ (B ^ C)) ^ (:B _ :C _ A) \u000f Distribute over ^: (:A _ B) ^ (:A _ C) ^ (:B _ :C _ A) Next we convert the negation of the goal to CNF: \u000f Eliminate implication: :((:A _ B) ^ (:A _ C)) \u000f Move : inwards: (A ^ :B) _ (A ^ :C) \u000f Undistribute over ^: A ^ (:B _ :C) The CNF of the premise consists of three clauses, and the negation of the goal consists of two clauses. We write each clause separately, as follows: 1. :A _ B premise 2. :A _ C premise 3. :B _ :C _ A premise 4. A negation of goal 5. :B _ :C negation of goal Now we apply the resolution rule to pairs of clauses that contain complementary literals, as many times as needed to get the empty clause: 6. B 1&4 7. C 2&4 8. :C 5&6 9. ; 7&8 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/1/2019 Note that you may not apply the resolution rule to a pair of clauses that contain two (or more) complementary literals. For example, you may not combine clauses 1 & 3. Since we have attained the empty clause, clauses 1 to 5 were unsatis\fable. From this we conclude that the goal is entailed by the premise, i.e. s A , (B _ C) j= (A ) B) ^ (A ) C). Question 7: 4 Marks Do exercise 8.9 a, c, e, f in the textbook. The translation is straight forward using the vocabulary provided. a Occupation(Emily; Surgeon) _ Occupation(Emily; Lawyer) c 8p(Occupation(p; Surgeon) ) Occupation(p; Doctor)) e 9p(Boss(p; Emily) ^ Occupation(p; Lawyer)) f 9p(Occupation(p; Lawyer) ^ 8q(Customer(q; p) ) Occupation(q; Doctor))) Copyright c\rUNISA 2019 (v2019.1.3) 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Solution SELF ASSESSMENT ASSIGNMENT Study material: Chapters 9, and 18. You may skip sections 9.3, and 9.4. You only need to study 18.1, 18.2, and 18.3 Question 1 Convert the following First Order Logic (FOL) sentence to Conjunctive Normal Form (CNF): 8y(8xP (x) ) 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Eliminate implication: 8y(:8xP (x) _ 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Move : inwards: 8y(9x:P (x) _ 9x(8zQ(x; z) _ 8zR(x; y; z))) \u000f Standardize variables: The variable name x is used in the scope of two di\u000berent quanti\fers, so we change the name of one of them to avoid confusion when we drop the quanti\fers. The same applies for the variable name z. 8y(9x:P (x) _ 9u(8zQ(u; z) _ 8vR(u; y; v))) Note that the scope of 8z is the predicate Q(u; z), and the scope of 8v is the predicate R(u; y; v). On the other hand, the scope of 8y is the whole formula. \u000f Skolemize: 8y(:P (f (y)) _ 8zQ(g(y); z) _ 8vR(g(y); y; v)) Here f and g are Skolem functions, and their arguments are all the universally quanti\fed vari- ables in whose scope the existential quanti\fer appears. In this case, 9u appears only in the scope of 8y. Note that the same variable u appears twice in the sentence, so we replace each occurrence of u with g(y). \u000f Drop universal quanti\fers: At this point, all remaining variables are universally quanti\fed. Moreover, the sentence is equivalent to one in which all the universal quanti\fers have been moved to the left: 8y8z8v(:P (f (y)) _ Q(g(y); z) _ R(g(y); y; v)) We can therefore drop the universal quanti\fers: :P (f (y)) _ Q(g(y); z) _ R(g(y); y; v) The sentence is now in CNF and it has only one conjunct (one clause) consisting of a disjunction of three literals. Question 2 Consider the following English statements: 1. Anyone who passes their history exam and who wins the lottery is happy. 2. Anyone who studies or is lucky, passes their exams. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 3. John did not study. 4. John is lucky. 5. Anyone who is lucky wins the lottery. (2.1) Provide a vocabulary for the statements. \u000f P ass(p; s). Predicate. Person p passes subject s. \u000f W in(p; g). Predicate. Person p wins game g. \u000f Happy(p). Property. Person p is happy. \u000f Study(p). Predicate. Person p studies. \u000f Lucky(p). Property. Person p is lucky. \u000f History. Constant for a subject. \u000f Lottery. Constant for a game that can be won. \u000f John. Constant for a person. (2.2) Translate the above English sentences to FOL statements using the vocabulary you de- \fned above. The sentences are translated as follows to FOL: 1. 8p((P ass(p; History) ^ W in(p; Lottery)) ) Happy(p)) 2. 8q8r((Study(q) _ Lucky(q)) ) P ass(q; r)) 3. :Study(John) 4. Lucky(John) 5. 8s(Lucky(s) ) W in(s; Lottery)) It is important to standardize the variables (to use di\u000berent variable names) to avoid confusion when dropping the universal quanti\fers. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (2.3) Convert the FOL statements obtained in 2.2 into CNF. The statements are converted as follows to CNF: 1. 8p((P ass(p; History) ^ W in(p; Lottery)) ) Happy(p)) \u0011 8p(:(P ass(p; History) ^ W in(p; Lottery) _ Happy(p)) \u0011 8p(:P ass(p; History) _ :W in(p; Lottery) _ Happy(p)) 2. 8q8r((Study(q) _ Lucky(q)) ) P ass(q; r)) \u0011 8q8r(:(Study(q) _ Lucky(q)) _ P ass(q; r)) \u0011 8q8r((:Study(q) ^ :Lucky(q)) _ P ass(q; r)) \u0011 (:Study(q) ^ :Lucky(q)) _ P ass(q; r) \u0011 (:Study(q) _ P ass(q; r)) ^ (:Lucky(q) _ P ass(q; r)) 3. No action required. 4. No action required. 5. 8s(Lucky(s) ) W in(s; Lottery)) \u0011 :Lucky(s) _ W in(s; Lottery) We thus end up with the following clauses: 1. :P ass(p; History) _ :W in(p; Lottery) _ Happy(p) 2. :Study(q) _ P ass(q; r) 3. :Lucky(q) _ P ass(q; r) 4. :Study(John) 5. Lucky(John) 6. :Lucky(s) _ W in(s; Lottery) Note that universal quanti\fers have been dropped because all variables were universally quanti\fed. Skolem functions are only introduced to remove existential quanti\fers. (See section 9.5 of R&N.) 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 (2.4) Use resolution refutation to prove that John is happy. In order to use resolution refutation, we negate the goal, convert the negated goal to clause form if necessary, and add the resulting clause(s) to the set of premises (clauses 1 to 6 in part (2.3) above). Here the goal is: Happy(John). Therefore the negation of the goal is: :Happy(John). We then resolve the premises together with the negated goal until the empty clause (Nil) is generated. Review the ground resolution theorem to make sure you understand why this ap- proach works. Also review section 7.5: Remember that \u000b j= \f only if (\u000b ^ :\f) is unsatis\fable. 1. :P ass(p; History) _ :W in(p; Lottery) _ Happy(p) premise 2. :Study(q) _ P ass(q; r) premise 3. :Lucky(q) _ P ass(q; r) premise 4. :Study(John) premise 5. Lucky(John) premise 6. :Lucky(s) _ win(s; Lottery) premise 7. :Happy(John) negation of goal 8. :W in(p; Lottery) _ happy(p) _ :Lucky(p) 1&3, fp/qg, fhistory/rg 9. :W in(John; Lottery) _ Happy(John) 5&8, fJohn/pg 10. :W in(John; Lottery) 9&7 11. W in(John; Lottery) 5&6, fJohn/wg 12. ; 10&11 We have shown that the negation of the goal together with the premises produce a contradiction (empty clause). Therefore the goal, namely Happy(John), is entailed by the premises. It is important to show which clauses form part of the resolution to produce the resolvent. You must also always show the substitutions. Remember: given a fact with a constant, one cannot simply replace the constant with a variable to derive a new (general) statement. For example, suppose we add Carol to the list of persons in the vocabulary for the above problem. We cannot derive: Lucky(John) fx=Johng (resolving that John is lucky by replacing the variable x with the constant John), and then Lucky(Carol) fJohn=Carolg, deriving that Carol is lucky by substituting John with Carol. 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x1 x2 x3 f(x1, x2, x3) 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 Table 1: Boolean function table Question 3 (3.1) Convert the Boolean function in Table 1 to a decision tree: No information gain values were given, so it becomes a matter of picking the se- quence in which the variables are to be evaluated. The next step would be to simplify the decision tree by consolidating equivalent leaf nodes. Variable order x1; x2; x3: x1 x2 x3 1 0 0 1 0 x3 1 0 1 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 This can be simpli\fed to: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 x1 x2 x3 1 0 0 1 0 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 Variable order x1, x3, x2: x1 x3 1 0 x2 0 0 1 1 1 0 x3 x2 1 0 0 1 0 x2 0 0 1 1 1 1 Variable order x2, x1, x3: x2 x3 x2 1 0 0 1 0 x2 1 0 0 1 1 0 x3 1 00 x2 0 0 1 1 1 1 Variable order x2, x3, x1: 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x2 x3 1 0 0 1 0 x3 x1 1 0 0 1 0 1 1 1 Variable order x3, x2, x1: x3 x2 1 0 x1 1 0 0 1 1 0 x2 0 0 1 1 1 Variable order x3, x1, x2: x3 x1 1 0 x2 1 0 0 1 1 0 x1 x2 0 0 1 1 0 x2 0 0 1 1 1 1 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 (3.2) When we construct a decision tree without the bene\ft of gain values, the order in which we evaluate the variables is important. Why? It may be possible to consolidate leaf nodes with similar values to produce a smaller, more compact tree. Question 4 The National Credit Act introduced in South Africa in 2007 places more responsibility on a bank to determine whether the loan applicant will be able to a\u000bord it. Blue Bank has a table of information on 14 loan applications they have received in the past: No. Credit history Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 2 UNKNOWN HIGH NO R15k - R35k HIGH 3 UNKNOWN LOW NO R15k - R35k MEDIUM 4 UNKNOWN LOW NO < R15k HIGH 5 UNKNOWN LOW NO > R35k LOW 6 UNKNOWN LOW YES > R35k LOW 7 BAD LOW NO < R15k HIGH 8 BAD LOW YES > R35k MEDIUM 9 GOOD LOW NO > R35k LOW 10 GOOD HIGH YES > R35k LOW 11 GOOD HIGH NO < R15k HIGH 12 GOOD HIGH NO R15k - R35k MEDIUM 13 GOOD HIGH NO > R35k LOW 14 BAD HIGH NO R15k - R35k HIGH Table 2: Risk information table Use the information in Table 2 to construct a decision tree that will assist the bank in determining the risk associated with a new loan application. In order to determine the information gain of any di\u000berent attributes of a certain collection of data, the calculation of entropy is important the notion of information gain is de\fned in terms of entropy. Entropy can be described as a measure of impurity of an arbitrary collection of examples. Russell & Norvig describe entropy as a measure of the uncertainty of a random variable, and mention that the acquisition of information corresponds to a reduction in entropy. Namely a random variable with only one value has no uncertainty and thus its entropy is de\fned as zero; thus we gain no information by observing its value. For any attribute A, if no information can be gained regarding the decision from attribute A, then the entropy of attribute A is equal to 0. If all the members of a class are split equally by any attribute A, then the entropy of A is 1. For any collection S the maximum entropy value is 1. Formally, the entropy of a random variable V with value vk, each with probability P (vk) is de\fned as: H(V ) = nX k=1 \u0000P (vk)log2 1 P (vk) = \u0000 nX k=1 P (vk)log2 1 P (vk) (1) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Maybe a more comprehensible way of de\fning the entropy of any collection S is as follows: Entropy(S) = \u0000 cX i=1 pilog2(pi) (2) This corresponds to what Russell and Norvig refer to as information content. If the possible answers vi have probabilities P (vi) then the information content I of the actual answer is given by: I(P (v1); : : : ; P (vn)) = nX i=1 \u0000P (vi)log2P (vi) (3) You may see the negative as a way of making the values of pilog2(pi) positive because all pi < 1, i.e. each represents a probability of the sample set. In what follows we will use the ID3 algorithm to develop our decision tree. Our collection of 14 examples S, has four meaningful attributes (Credit History, Debt, Collateral, Income), and a 3-wise classi\fcation (LOW, MEDIUM, HIGH). Since there are no repeat values in the No. attribute it plays no role in the classi\fcation and can be ignored (although we will show the No. attribute in further tables so that we know which examples we are working with). For purposes of clarity in the formulae, we will shorten the attribute labels and values as follows: \u000f Credit History = CH \u000f Debt = D \u000f Collateral = C \u000f Income = I \u000f BAD = B \u000f UNKNOWN = U \u000f GOOD = G \u000f HIGH = H \u000f LOW = L \u000f <R15K = 15K \u000f R15K-R35K = 15K-35K \u000f >R35K = 35K \u000f MEDIUM = M We will also not be repeating calculations at every step: we show the full set of calculations for the \frst level of the tree, after that we will only show the \fnal result of the calculation. Summarise the example set, S = f1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14g, as: S = [5L; 3M ; 6H] We start by calculating the Entropy for our set of examples: 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 Entropy(S) = 3X i=1 \u0000pilog2pi = \u0000( 5 14)log2( 5 14) \u0000 ( 3 14)log2( 3 14) \u0000 ( 6 14)log2( 6 14) = \u0000( 5 14)(log25 \u0000 log214) \u0000 ( 3 14)(log23 \u0000 log214) \u0000 ( 6 14)(log26 \u0000 log214) = \u0000( 5 14) \u0012 log5 log2 \u0000 log14 log2 \u0013 \u0000 ( 3 14) \u0012 log3 log2 \u0000 log14 log2 \u0013 \u0000 ( 6 14) \u0012 log6 log2 \u0000 log14 log2 \u0013 = 0:531 + 0:476 + 0:524 = 1:531(max = 1:585) We have to determine the information gain (IG) of the di\u000berent attributes in order to select the best choice for the root node. The information gain measures the expected reduction of entropy { the higher the IG, the higher the expectation of reduction of entropy. In what follows we calculate the information gain for each of the four attributes. Credit History: Values (CH ) = B, G, U S = [5L; 3M ; 6H] SB [0L; 1M ; 3H] SG [3L; 1M ; 1H] SU [2L; 1M ; 2H] Entropy(SB) = \u0000(0 4 )log2(0 4) \u0000 (1 4 )log2(1 4) \u0000 (3 4 )log2(3 4) = 0:811 Entropy(SG) = \u0000(3 5 )log2(3 5) \u0000 (1 5 )log2(1 5) \u0000 (1 5 )log2(1 5 ) = 1:371 Entropy(SU ) = \u0000(2 5 )log2(2 5) \u0000 (1 5 )log2(1 5) \u0000 (2 5 )log2(2 5) = 1:522 Gain(S; CH) = Entropy(S) \u0000 X v2V alues(A) jSvj jSj Entropy(Sv) = Entropy(S) \u0000 ( 4 14)Entropy(SB) \u0000 ( 5 14)Entropy(SG) \u0000 ( 5 14)Entropy(SU ) = 1:531 \u0000 ( 4 14)0:811 \u0000 ( 5 14)1:371 \u0000 ( 5 14)1:522 = 0:266 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Debt: Values(D) = L, H S = [5L; 3M ; 6H] SL [3L; 2M ; 2H] SH [2L; 1M ; 4H] Entropy(SL) = \u0000(3 7)log2(3 7 ) \u0000 (2 7)log2(2 7 ) \u0000 (2 7)log2(2 7 ) = 1:557 Entropy(SH) = \u0000(2 7 )log2(2 7) \u0000 (1 7 )log2(1 7) \u0000 (4 7 )log2(4 7) = 1:379 Gain(S; D) = Entropy(S) \u0000 ( 7 14)Entropy(SL) \u0000 ( 7 14)Entropy(SH) = 1:531 \u0000 ( 7 14)1:557 \u0000 ( 7 14)1:379 = 0:063 Collateral: Values (C) = Y,N S = [5L; 3M ; 6H] SY [2L; 1M ; 0H] SN [3L; 2M ; 6H] Entropy(SY ) = \u0000(2 3 )log2(2 3) \u0000 (1 3 )log2(1 3) \u0000 (0 3 )log2(0 3) = 0:918 Entropy(SN ) = \u0000( 3 11)log2( 3 11) \u0000 ( 2 11)log2( 2 11) \u0000 ( 6 11)log2( 6 11) = 1:435 Gain(S; C) = Entropy(S) \u0000 ( 3 14)Entropy(SY ) \u0000 (11 14)Entropy(SN ) = 1:531 \u0000 ( 3 14)0:918 \u0000 (11 14)1:435 = 0:207 Income: Values (I ) = 15 , 15-35, 35 S = [5L; 3M ; 6H] S15 [0L; 0M ; 4H] 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 S15\u000035 [0L; 2M ; 2H] S35 [5L; 1M ; 0H] Entropy(S15) = \u0000(0 4 )log2(0 4) \u0000 (0 4 )log2(0 4) \u0000 (4 4 )log2(4 4) = 0 Entropy(S15\u000035) = \u0000(0 4)log2(0 4 ) \u0000 (2 4)log2(2 4 ) \u0000 (2 4)log2(2 4 ) = 1 Entropy(S35) = (5 6 )log2(5 6) \u0000 (1 6 )log2(1 6) \u0000 (0 6 )log2(0 6) = 0:650 Gain(S; I) = Entropy(S) \u0000 ( 4 14)Entropy(S15) \u0000 ( 4 14)Entropy(S15\u000035) \u0000 ( 6 14)Entropy(S35) = 1:531 \u0000 ( 4 14)0 \u0000 ( 4 14)1 \u0000 ( 6 14)0:650 = 0:967 Attribute Income provides the highest information gain (0.967), i.e. the best prediction for our target attribute, Risk. Income becomes the root node of our decision tree. Income < 15K 15K \u0000 35K > 35K The ID3 algorithm now performs a recursion with the three subsets of our examples, based on the three possible values of the Income attribute (<R15K, R15K-R35K, >R35K). The \frst subset, corresponding to Income = f< R15Kg, is: No. Credit History Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 4 UNKNOWN LOW NO < R15k HIGH 7 BAD LOW NO < R15k HIGH 11 GOOD HIGH NO < R15k HIGH We notice that the target attribute is the same for all four of our examples, i.e. all four examples produce the same target value, HIGH. We have our \frst leaf node, labelled HIGH. 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K 15K \u0000 35K > 35K The second subset, corresponding to Income = fR15K \u0000 R35Kg, is: No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM 12 GOOD HIGH NO R15K-R35K MEDIUM 14 BAD HIGH NO R15K-R35K HIGH Our subset collection of 4 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classi\fcation (MEDIUM, HIGH): S15K\u000035K = f2; 3; 12; 14g = [2M ; 2H]. We start by calculating the Entropy for this subset: Entropy(S15K\u000035K) = 2X i=1 \u0000pilog2pi = \u0000(2 4 )log2(2 4) \u0000 (2 4 )log2(2 4) = 0:5 + 0:5 = 1 Calculate the information gain for the attributes of the subset (entropy for each attribute is calculated in the same fashion as above). Credit History: Gain(S15K\u000035K; CH) = Entropy(S15K\u000035K) \u0000 (1 4 )Entropy(SB) \u0000 (1 4 )Entropy(SG) \u0000 (2 4 )Entropy(SU ) = 1 \u0000 (1 4)0 \u0000 (1 4 )0 \u0000 (2 4)1 = 0:5 Debt: Gain(S15K\u000035K; D) = Entropy(S15K\u000035K) \u0000 (1 4 )Entropy(SL) \u0000 (3 4)Entropy(SH) = 1 \u0000 (1 4 )0 \u0000 (3 4)0:918 = 0:312 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 Collateral: Gain(S15K\u000035K; C) = Entropy(S15K\u000035K) \u0000 (0 4)Entropy(SY ) \u0000 (4 4)Entropy(SN ) = 1 \u0000 (0 4 )0 \u0000 (4 4)1 = 0 Attribute Credit History provides the highest Information Gain in this subset (0.5). Thus it becomes our next decision node. Income HIGH < 15K Credit History BAD GOOD UNKNOWN 15K \u0000 35K > 35K The third subset, corresponding to Income = f> R35kg, is then used. No. Credit History Debt Collateral Income Risk 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW 8 BAD LOW YES >R35K MEDIUM 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 6 examples S, has three meaningful attributes (Credit History, Debt, Collateral), and a binary classi\fcation (LOW, MEDIUM): S35K = f5; 6; 8; 9; 10; 13g = [5L; 1M ] Start by calculating the Entropy for this subset: Entropy(S35K) = 2X i=1 \u0000pi log2pi = \u0000(5 6) log2 (5 6 ) \u0000 (1 6) log2 (1 6 ) = 0:65 15 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace We now proceed to calculate the information gain for each of the three attributes in the subset: Credit History: V alues(CH) = B; G; U S35K = [5L; 1M ] SB [0L; 1M ] SG [3L; 0M ] SU [2L; 0M ] Entropy(SB) = \u0000(0 1 )log2(0 1) \u0000 (1 1 )log2(1 1) = 0 Entropy(SG) = \u0000(3 3 )log2(3 3) \u0000 (0 3 )log2(0 3) = 0 Entropy(SU ) = \u0000(2 2 )log2(2 2) \u0000 (0 2 )log2(0 2) = = 0 Gain(S35K; CH) = Entropy(S35K) \u0000 (1 6 )Entropy(SB) \u0000 (3 6)Entropy(SG) \u0000 (2 6)Entropy(SH) = 0:65 \u0000 (1 6 )0 \u0000 (3 6)0 \u0000 (2 6 )0 = 0:65 Debt: V alues(D) = L; H S35K = [5L; 1M ] SL [5L; 1M ] SH [2L; 0M ] 16 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 Entropy(SL) = \u0000(3 4 )log2(3 4) \u0000 (1 4 )log2(1 4) = 0:811 Entropy(SG) = \u0000(2 2 )log2(2 2) \u0000 (0 2 )log2(0 2) = 0 Gain(S35K; D) = Entropy(S35K) \u0000 (4 6)Entropy(SL) \u0000 (2 6 )Entropy(SH) = 0:65 \u0000 (4 6)0:811 \u0000 (2 6 )0 = 0:109 Collateral: V alues(D) = Y; N S35K = [5L; 1M ] SY [2L; 1M ] SN [3L; 0M ] Entropy(SL) = \u0000(2 3)log2(2 3 ) \u0000 (1 3)log2(1 3 ) = 0:918 Entropy(SG) = \u0000(3 3)log2(3 3 ) \u0000 (0 3)log2(0 3 ) = 0 Gain(S35K; D) = Entropy(S35K) \u0000 (3 6)Entropy(SY ) \u0000 (3 6)Entropy(SN ) = 0:65 \u0000 (3 6)0:918 \u0000 (3 6)0 = 0:191 In summary: Gain(S35K; CH) = 0:65 Gain(S35K; D) = 0:109 Gain(S35K; Collateral) = 0:191 Attribute Credit History provides the highest Information Gain in this subset and becomes the decision node on this branch of the decision tree. 17 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History BAD GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The algorithm continues with recursion to the next level. The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = BAD provides a single example (14). No. Credit History Debt Collateral Income Risk 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: HIGH. Income HIGH < 15K Credit History HIGH BAD GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = GOOD is also a single example (12). No. Credit History Debt Collateral Income Risk 14 BAD HIGH NO R15K-R35K HIGH We have a single example, hence another leaf node: MEDIUM. 18 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = UNKNOWN has two examples (2,3). No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH 3 UNKNOWN LOW NO R15K-R35K MEDIUM Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a binary classi\fcation (MEDIUM, HIGH shortened for clarity to M,H): SU nknown = f2; 3g = [1M ; 1H]. We again calculate the entropy for the subset: Entropy(S) = \u0000(1 2 )log2(1 2) \u0000 (1 2 )log2(1 2) = 1 Debt V alues(D) = L; H SU N KN OW N = [1L; 1M ] SL [2L; 1M ] SH [3L; 0M ] 19 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Entropy(SL) = \u0000(1 1 )log2(1 1) \u0000 (0 1 )log2(0 1) = 0 Entropy(SH) = \u0000(0 1 )log2(0 1) \u0000 (1 1 )log2(1 1) = 0 Gain(SU N KN OW N ; D) = Entropy(SU N KN OW N ) \u0000 (1 2)Entropy(SL) \u0000 (1 2 )Entropy(SH) = 1 \u0000 (1 2 )0:918 \u0000 (1 2 )0 = 1 Collateral V alues(D) = N SU N KN OW N = [1M ; 1H] SN [1M ; 1H] Entropy(SN ) = \u0000(1 2)log2(1 2 ) \u0000 (1 2)log2(1 2 ) = 1 Gain(SU N KN OW N ; C) = Entropy(SU N KN OW N ) \u0000 (2 2)Entropy(SN ) = 1 \u0000 (2 2 )1 = 0 In summary: Gain(SU N KN OW N ; D) = 1 Gain(SU N KN OW N ; Collateral) = 0 Debt gives us perfect information gain, and thus becomes the next decision node. 20 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 Income HIGH < 15K Credit History HIGH BAD MEDIUM Good Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History BAD GOOD UNKNOWN > 35K We return to credit history (we \frst \fnish all the nodes on the same level). The subset of Credit History that corresponds to the Income = >R35K and Credit History = BAD contains only 1 example (8). No. Credit History Debt Collateral Income Risk 8 BAD LOW YES >R35K MEDIUM We thus have another leaf node: MEDIUM. Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD GOOD UNKNOWN > 35K 21 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace The subset of Credit History that corresponds to Income = >R35K and Credit History = GOOD provides three examples (9,10,13): No. Credit History Debt Collateral Income Risk 9 GOOD LOW NO >R35K LOW 10 GOOD HIGH YES >R35K LOW 13 GOOD HIGH NO >R35K LOW Our subset collection of 3 examples S, has two meaningful attributes (Debt, Collateral), and a single classi\fcation (LOW). Hence we again have a leaf node LOW. Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD UNKNOWN > 35K The subset of Credit History that corresponds to the Income = >R35K and Credit History = UNKNOWN is provides 2 examples (5,6). No. Credit History Debt Collateral Income Risk 5 UNKNOWN LOW NO >R35K LOW 6 UNKNOWN LOW YES >R35K LOW Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a single classi\fcation (LOW). Hence we again have a leaf node LOW. 22 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/1/2019 Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD LOW UNKNOWN > 35K We can now do the last set of calculations. With Debt = HIGH we have only one example left (2), which makes this a leaf node. No. Credit History Debt Collateral Income Risk 2 UNKNOWN HIGH NO R15K-R35K HIGH Similarly, when Debt = LOW we have one example left (3). This creates the \fnal leaf node. No. Credit History Debt Collateral Income Risk 3 UNKNOWN LOW NO R15K-R35K MEDIUM These last two steps complete our decision tree (note that Collateral plays no role in the decision based on this decision tree). 23 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income HIGH < 15K Credit History HIGH BAD MEDIUM GOOD Debt HIGH HIGH MEDIUM LOW UNKNOWN 15K \u0000 35K Credit History MEDIUM BAD LOW GOOD LOW UNKNOWN > 35K Copyright c\rUNISA 2019 (v2019.1.3) 24 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 1 Solution Total Marks: 57 Unique Assignment Number: 803603 Study material: Chapters 1 through 4. You may skip sections 4.2 and 4.5. Important: When we use the phrase `de\fne' (particularly in Question 2), we are looking for a formal de\fnition using some form of formal notation, and not simply an English description or de\fnition. For example: `De\fne the initial state for an agent in Johannesburg'. Answer: In(Johannesburg). `De\fne the actions available to this agent given that the agent simply moves between major metropolitan areas'. Answer: Actions(In(Johannesburg)) = fGo(Bloemontein), Go(Durban), . . . g. When we want an English de\fnition we will explicitly ask for it. Marked Questions: 2 (15), 5 (27), and 6 (15) { see section 6.2 from TL101 Question 1 (1.1) Consider an agent that is designed to deliver emergency supplies to miners that are trapped in a mine. The agent is small enough to navigate through most small openings, but can burrow through soft rock when necessary, because there is a lot of sand and dirt in the shafts, the agent may slip occasionally when attempting to move. Once the agent detects that it has delivered medical supplies to a survivor, it returns to the rescue services team. These agents are typically only deployed once it has been determined that no more shifts in the earth is possible, and the survivors' location has been pinned down (survivors won't move around). Choose from among the following environmental descriptions, and justify your choices in each case. (a) Is the environment deterministic, or stochastic? The agent can move through the environment easily enough, however, one has to keep in mind that moving around in the area may not result in the desired outcome. Burrowing may de\fnitely not result in predictable outcomes. This is a stochastic environment. (b) Is the environment discrete, or continuous? Given the information above, the environment is continuous. Even though the con\fguration of the mine shafts (rubble \flling the shafts) may not change, and the survivors stay put, the agent's location sweeps through a range of values. (c) Is the environment static, or dynamic? Based on the information, the environment does not change while the agent is deliberating. It is thus static. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2019 (1.2) Is this an example of a model-based, or re\rex-based agent? Justify your answer. Model-based. The agent has to keep track of its environment in order to plan its search. It also has to keep track of how to get back to the rescuers. Thus it cannot be a re\rex agent. Question 2: 15 Marks Four soccer teams have to take part in a round-robin tournament. The problem is to determine a schedule of matches so that each team plays each other team once in the minimum number of rounds. Matches can take place in parallel. There are many ways to solve this problem, one of which is to specify it as a state space and search for the goal state. Say we number the teams 1, 2, 3 and 4. For each team, we can keep track of which other teams it has played so far by means of a set. So for team 1, the set f2; 4g means it has played against teams 2 and 4 so far. The entire state of which teams have played which other teams can then be represented by an ordered 4-tuple, where each element is a set of the teams that a team has played. The start/initial state is therefore sI = (fg; fg; fg; fg) because initially, team 1 has not played any other teams, team 2 hasn't played any other teams, etc. (2.1) (1)What is the goal state of the state space? sG = (f2; 3; 4g; f1; 3; 4g; f1; 2; 4g; f1; 2; 3g) (2.2) (2)De\fne an action called Schedule which can be applied to a state to get to a successor state. Hint: it helps to consider how you want the action to transform a state into a successor state. Explain what an applicable action means (the rules for transforming a state into another state) for your Schedule action. Let Schedule(x)represent the matching of team 1 with team x. The other two teams that must play against one another can be determined from it. Schedule is an applicable action to state s if x 2 f2; 3; 4gbut x =2 s1. We'll see in answer 2.5 how the action is used to transform a state from one to the next. (2.3) (3)What are the successor states of the start state? S1;1 = (f2g; f1g; f4g; f3g); S1;2 = (f3g; f4g; f1g; f2g); S1;3 = (f4g; f3g; f2g; f1g) (2.4) (2)What are the applicable actions to the state S1;1 = (f2g; f1g; f4g; f3g)? a3 = Schedule(3);and a4 = Schedule(4). (2.5) (4)Specify the transition model for the applicable actions you speci\fed for state S1;1 above. Result(S1;1; a3) 7! S2;1 = (f2; 3g; f1; 4g; f1; 4g; f2; 3g) Result(S1;1; a4) 7! S2;2 = (f2; 4g; f1; 3g; f2; 4g; f1; 3g) 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (2.6) (3)Calculate the size of the search space (include the initial state in your calculation). Justify your answer. The tree state space for this is recursively de\fned as follows: For a grouping of n teams, the number of nodes on each level k is: 1. Base case: lk=0 = 1, 2. Recursive case: lk = (n \u0000 k) \u0002 lk\u00001; 0 < k < n The total number of nodes is thus Pn\u00001 k=0 lk = 1 + 3 + 6 + 6 = 16. For justi\fcation Visually: Question 3 (3.1) Explain how a Depth First Search (DFS) ensures that it always expands the deepest node \frst. Provide an example to aid your discussion. DFS goes about searching in one of two ways: either by implementing its frontier explicitly as a stack, or by searching recursively thereby employing the function call stack as its implicit stack. When implemented as an explicit stack, the last node's generated children are placed on the stack and will therefor be chosen for expansion \frst, this placement of the last nodes children in the frontier results in the deepest node being expanded \frst. If the implementation is recursive, it simply means that the algorithm calls itself recursively on the children nodes it generates from a particular node. This means it carries on down the tree expanding children nodes as it goes along. It thus uses the execution call stack as its queue. Example evaluated based on discussion. (3.2) Explain when one might want to choose DFS over Breadth First Search (BFS). (Hint: In which version of the algorithm does one have an advantage over the other?) DFS has a clear space complexity advantage over BFS when a tree search is per- formed. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2019 Question 4 Consider the search tree in Figure 1. Show the order in which the nodes will be expanded at each O M D K I C J H E L F G B N A Figure 1: Search Tree (Iterative Deepening Search (IDS)) level (start with level 0 and continue until the goal test is successful), given that IDS is used. Assume the goal node is B, and that nodes are expanded from left to right (M is expanded before E and so on). (Hint: make sure you understand the di\u000berence between expansion and generation, and also that you understand when goal checks occur.) Expansion means we apply legal actions to a chosen node { this, by de\fnition, means that our order will look somewhat di\u000berent from what one may expect. Also, note that the IDS is a repeated invocation of the depth limited search. In the depth limited search, once we generate a node, we recursively call the depth limited search on that node. Thus, goal state checking happens immediately after generation for each node. In general, the children of nodes that are expanded are thus goal checked. 1. Limit 0: (No expansion { O is just goal tested) 2. Limit 1: O (M and E are just goal tested, not expanded) 3. Limit 2: O M E 4. Limit 3: O M D C E L 5. Limit 4: None, search terminates once L is expanded { once L is expanded, F will be generated and goal tested on the recursive call. Visually, this is what happens (squares are goal tests and circles are expansions). Limit 0: O 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Limit 1: O M E Limit 2: O M D C E L B Limit 3: O M D K I C J H E L F Question 5: 27 Marks Consider the graph provided in Figure 2, and answer the questions that follow. The step cost between nodes is provided next to the edges. (5.1) (3)Prove that a consistent heuristic is admissible. (Hint: if you can prove that admissibility holds for nodes 1 step away from the goal, then you can prove that nodes k-steps away from the goal is admissible). We \frst repeat the two applicable de\fnitions: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2019 H B G K N D E C J A O L I M F 4 8 10 7 5 8 4 6 7 4 3 2 7 5 8 Figure 2: Search A heuristic is consistent if its estimate of the cost to the goal is always less- than-or-equal to the sum of the actual cost to any successor node plus its estimate from that node to the goal. As an equation: h(n) \u0014 c(n; n 0) + h(n0) where n is a node and n 0 is a neighbour of n. Also, h(m) = 0 if m is the goal. A heuristic is admissible if the estimated cost to the goal is always less-than- or-equal to the actual cost to the goal. As an equation: h(n) \u0014 c(n; m) As suggested in the hint, we give a proof by induction: Say h is consistent. 1. Base case: Assume that the goal is a neighbour of n, i.e. n0 = m. Since h is consistent, h(n0) = 0 and h(n) \u0014 c(n; n 0) + 0. So h is admissible, 1 step from the goal. 2. Inductive case: Let n 0 be a node on the shortest path between n and m, k steps from m, and say h(n 0) \u0014 c(n0; m). Since h is consistent, h(n) \u0014 c(n; n 0) + h(n0). So h(n) \u0014 c(n; n 0) + c(n 0; m) = c(n; m). Since n is k + 1 steps from the goal, we conclude that the heuristic is admissible. 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.2) (11)Perform a Uniform Cost Search (UCS) on the graph. The start node is N and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 N(^g = 0) . . . . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^g value. Step Node expanded Frontier 1 N(^g = 0) 2 N C-N(2), O-N(7) 3 C-N E-C-N(10), O-N(7) 4 O-N E-C-N(10), A-O-N(12), M-O-N(14) 5 E-C-N A-O-N(12), M-O-N(14) 6 A-O-N M-O-N(14) 7 M-O-N G-M-O-N(24) 8 G-M-O-N F-G-M-O-N(32), H-G-M-O-N(28) 9 H-G-M-O-N F-G-M-O-N(32), D-H-G-M-O-N(31), J-H-G-M-O-N(32) 10 D-H-G-M-O-N F-G-M-O-N(32), J-H-G-M-O-N(32) 11 F-G-M-O-N J-H-G-M-O-N(32) Notice that at step 5 we did not ad M-E-C-N to the frontier since the cost is 17 which is higher than M-O-N of 14. The \fnal path is thus N-O-M-G-F with a cost of 32. (5.3) (13)Perform an A\u0003 search on the graph in Figure 2. The start node is G and the goal node is C. Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the \fnal path from the start to the goal. Use table 1 for the ^h values for each node in the graph. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 G(^g = 0, ^h = 20, ^f = 20) . . . . . . . . . Remember: the \frst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ^f value. 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2019 Node Estimated distance to Goal A 3 B 10 C 0 D 7 E 2 F 6 G 6 H 6 I 9 J 8 K 9 L 6 M 3 N 1 O 3 Table 1: Estimated Distance to Goal for A \u0003 search. Step Node expanded Frontier 1 G(^g = 0, ^h = 20, ^f = 20) 2 G M-G(10,3,13), F-G(8,6,14), H- G(4,6,10) 3 H-G M-G(10,3,13), F-G(8,6,14), D-H- G(7,7,14), J-H-G(8,8,16) 4 M-G F-G(8,6,14), D-H-G(7,7,14), J-H- G(8,8,16), E-M-G(17,2,19), O-M- G(17,3,20) 5 F-G D-H-G(7,7,14), J-H-G(8,8,16), E-M- G(17,2,19), O-M-G(17,3,20), L-F- G(16,2,22) 6 D-H-G J-H-G(8,8,16), E-M-G(17,2,19), O-M- G(17,3,20), L-F-G(16,6,22) 7 J-H-G E-M-G(17,2,19), O-M-G(17,3,20), K-J- H-G(12,9,21), L-F-G(16,6,22) 8 E-M-G O-M-G(17,3,20), K-J-H-G(12,9,21), L- F-G(16,6,22), C-E-M-G(25,0,25) 9 O-M-G K-J-H-G(12,9,21), L-F-G(16,6,22),A- O-M-G (22,3,25), C-E-M-G(25,0,25), N-O-M-G(24,1,25) 10 K-J-H-G L-F-G(16,6,22), A-O-M-G (22,3,25), C-E-M-G(25,0,25), N-O-M-G(24,1,25), I-K-J-H-G(17,9,26), B-K-J-H-G (18,10,28) 11 L-F-G A-O-M-G (22,3,25), C-E-M- G(25,0,25), N-O-M-G(24,1,25), I-K-J-H-G(17,9,26), B-K-J-H-G (18,10,28) 12 A-O-M-G C-E-M-G(25,0,25), N-O-M-G(24,1,25), I-K-J-H-G(17,9,26), B-K-J-H-G (18,10,28) 13 C-E-M-G N-O-M-G(24,1,25), I-K-J-H- G(17,9,26), B-K-J-H-G (18,10,28) 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Ties were broken using `least hops' i.e. least number of nodes in path, further ties were broken based on the lexicographical ordering of node names (C comes before N) in the state space. The \fnal path is thus G-M-E-C with a path cost of 25. Question 6: 15 Marks Consider the four-queens problem. We would like to populate a 4 \u0002 4 board with 4 queens. A queen is a piece (from chess) that can capture any other piece on the same diagonal, or in the same column or row. Using local search algorithms, we can perform a search as follows: \u000f Initialise a board with queens placed randomly, \u000f De\fne an objective function to aid the local search, \u000f Generate a successor state from the current state by moving one queen randomly either up or down one square (in the same column), \u000f An optimum (minimum/maximum) is considered a goal. Consider the following random start state (we represent the state graphically to aid your e\u000bort, and you are welcome to provide graphical representations of successor states if asked): 4 0ZqZ 3 ZqZq 2 0Z0Z 1 l0Z0 a b c d Figure 3: Four Queens Initial State (6.1) (2)Provide a good objective function that can be used as a minimizer (i.e. a global minimum, a loss function) for the problem. Hint: 1. An objective function (also called either a loss, or reward function) is a function that maps the current state to some linear value which can be used to judge the \ftness or goodness of the state. When we want to avoid loss, we de\fne an objective function with respect to loss, and we try to minimize loss by minimising the evaluation of the state using the objective function (i.e. we look for a state that results in the smallest value when evaluated using the objective function). When we want reward, we de\fne an objective function with respect to reward and we try to maximize the objective function. 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2019 2. First write down the function in plain English, and then provide the mathematical equation for it. 3. Use the rows, columns, and diagonals in the state as part of your equation. We de\fne the following: 1. Cn is the number of pairs of queens on rank n that can capture eachother. 2. Da1;d4; Db1;d3; Dc1;d2 is the number of pairs of queens that can capture eachother on diagonals a1-d4, b1-d3, and c1,d2. Similar for Da2;c3; Da3;b4; Da2;b1; Da3;c1, Da4;d1; Db3;d2; Dc4;d3 A pair of queens can capture each other if a capturing move by one would remove the other from the board (three queens on the same rank would thus form two pairs of capturing queens). The objective function is then simply a sum of these values. For ease of reading we de\fne a set for the diagonals: \u0001 = ffa1; d4g; fb1; d3g; fc1; d2g; fa2; c3g; fa3; b4g; fa2; b1g; fa3; c1g; fa4; d1g; fb3; d2g; fc4; d3g F (S) = ( 4X i=1 Ci) + X g2\u0001 Dg (1) Each state S is thus evaluated, and the algorithm will try to minimise F (S). (6.2) (2)Now that you have de\fned your objective function, use it to evaluate the start state as provided in Figure 3. Show your calculations. For the start state: 4 0ZqZ 3 ZqZq 2 0Z0Z 1 l0Z0 a b c d We have C3 = 1, and Db3;c4 = 1; Dc4;d3 = 1, we have that F (S) = 3 (6.3) (2)A hill-climb/hill-descent local search generates a series of successors, and takes the best one from among them (using the objective function). Beginning from the initial state in Figure 3, provide two successors, one that is worse, and one that is an improvement. Show why the successor is better, or worse by using the objective function to evaluate it. Remember: generate all possible successors, and choose the better/worse from among them. Remember, a successor state is generated by moving one queen, one row up or down. 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Worse: F 4 0ZqZ 3 ZqZq 2 qZ0Z 1 Z0Z0 a b c d ! = 4 Better: F 4 0ZqZ 3 ZqZ0 2 0Z0l 1 l0Z0 a b c d ! = 1 (6.4) (6)From the previous question, take the `better' state you identi\fed. Generate all possible successors (remember: a successor is generated by moving one queen, one row up or down). Are there any improvements (show your calculations for each state)? The tree is split for layout reasons. From: 4 0ZqZ 3 ZqZ0 2 0Z0l 1 l0Z0 a b c d (1) there are no improvements, only worse. Using pairwise collisions, the objective function evaluation for each state is provided next to it. 4 0ZqZ 3 ZqZ0 2 qZ0l 1 Z0Z0 a b c d (3), 4 0lqZ 3 Z0Z0 2 0Z0l 1 l0Z0 a b c d (2), 4 0ZqZ 3 Z0Z0 2 0l0l 1 l0Z0 a b c d (2), 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/201/2/2019 4 0Z0Z 3 Zql0 2 0Z0l 1 l0Z0 a b c d (3), 4 0ZqZ 3 ZqZq 2 0Z0Z 1 l0Z0 a b c d (3), 4 0ZqZ 3 ZqZ0 2 0Z0Z 1 l0Zq a b c d (3) (6.5) (3)What type of topographical feature is most likely being created by the situation in the previous question? (Provide a rough sketch of this type of feature in a one dimensional state-space landscape.) Can this problem be solved from this state (using hill-descent search)? Justify your answer. Global Min Local Min This is a local minimum. Using a normal hill-descent search, we won't be able to solve the problem{ the search algorithm will be stuck in this local minimum. Every move increases the objective function, meaning it will be discarded. Copyright c\rUNISA 2019 (v2019.2.1) 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 2 Solution Total Marks: 60 Unique Assignment Number: 891935 Study material: Chapters 5, 6, 7, and 8. You may skip sections 5.5, 5.6, and 5.7, 7.6, and 8.4. Marked questions 2 (21), 4 (8), and 6 (31). Question 1 (1.1) Clearly explain what an evaluation function is, and why it is used during adversarial searches. (1.2) Is the ideal strategy only available if we have perfect information? Explain your answer. No. Agents can still get the ideal strategy when playing without all the informa- tion. This means the ideal strategy includes the notion of limited information, however, an agent that has perfect information will most likely outperform and agent that has limited/imperfect information for the same problem. (1.3) Explain how forward pruning works. Provide at least one approach to forward pruning in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering them. Beam search [others are also considered] only considers a sample of the best moves at each ply, but this may lead to the best move being pruned away. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we prune. Otherwise minimax is an exhaustive search (for the parameters such as depth { plys { it is con\fgured for) and node orders do not matter. Question 2: 21 Marks Consider Figure 1 and answer the questions that follow. (The utility value of the leaf nodes are provided below the in brackets in the leaf node.) (2.1) (5)Provide the minimax values for all the nodes. A = 7, B = 7, C = 6, E = 9, G = 6 (2.2) (2)Which move should MAX make? Explain your answer. B. The utility value for MAX for move B is higher than that of move C. (2.3) (10)Write down the \u000b=\f values for all the nodes (except the leaf nodes) if alpha/beta pruning is applied to the tree. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2019 A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 Figure 1: Minimax, alpha/beta Provided below is < node >= (\u000b; \f): 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 (6) v \u0015 \f: J cut (17) v \u0014 \u000b: H,M cut v = \b\b\u00001 7 \u000b = \b\b\u00001 7 \f = 1 v =ˆ1 7 \u000b = \u00001 \f =ˆ1 7 v =ˆ1 6 \u000b = 7 \f = 1 v = \b\b\u00001 9 \u000b = \u00001 \f = 7 v = \b\b\u00001 ˆˆ\u00003 6 \u000b = 7 \f = 1 (1) (2) (3) 7 (4) (5) (6) 9 (7) 9 (8) (9) 9 (10) 7 (11) (12) (13) (14) -3 (15) (16) 6 (17) 6 (18) 6 The \fnal values are: A = (7; 1); B = (\u00001; 7); E = (\u00001; 7); C = (7; 1); G = (7; 1) (2.4) (4)Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). At step 6, the evaluation function returns a 9 for node I, v is updated and now v \u0015 \f. Intuitively MAX has discovered that MIN won't move to node E, since node D o\u000bers a lower score (a better move from MIN's point of view), than a move to E (which would result in MAX being able to move to I). MAX thus discards the other children of E. J was thus \f-cut. At step 17, G returns a value of 6, this is less than the recorded value of 7 for \u000b. Intuitively, MAX doesn't want to move to C since MIN can penalise MAX by moving to G which has a utility value of 6. If MAX instead chooses to move to B, then the worst that can happen is that MIN moves to D (which has a utility of 7). H and M were \u000b-cut. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2019 Question 3 Consider the subtraction game: two players (A and B) take turns removing items from a heap (just one heap). Each player may remove either one, two, or three items from the heap. The heap starts o\u000b with 12 items, and player A moves \frst. The objective of the game is to be the last player to remove items from the heap. That is, if it is your turn to move, and the heap is empty, you've lost the game1. The Initial state for the game is (A; 12) indicating that it is A's turn to move and there are 12 items on the heap. In general then, a state is represented as (P; n) where P 2 fA; Bg, and 0 \u0014 n \u0014 12. The evaluation function for non-terminal nodes is a simple threshold function de\fned as: eval(S) = ( \u00001 if S:n mod (k + 1) = 0; 1 otherwise S:n refers to the number of items left in the heap in state S, and mod is the integer modulo function. (3.1) Draw the entire game tree, starting from the initial state, down to depth two (the initial state is at depth 0), and provide the evaluation for each state at depth 2. (A,12) (B,11) (A,10) (A,9) (A,8) (B,10) (A,9) (A,8) (A,7) (B,9) (A,8) (A,7) (A,6) (3.2) Using the minimax algorithm, provide the backed-up values for states at depth 1 and 0. (Hint: Since you don't have the entire game tree, and thus no terminal states, you cannot use a utility value to calculate the backed up values. However, you do have an evaluation function.) There are \fve di\u000berent states on depth two (which is a max level): (A; 10), (A; 9), (A; 8), (A; 7), and (A; 6). eval((A; 10)) = 1, since (10 mod (3 + 1) = 10 mod 4 = 2, eval((A; 9)) = 1, eval((A; 8)) = \u00001, eval((A; 7)) = 1, eval((A; 6)) = 1. At depth one (a MIN level), (B; 11) \u0011 M IN (eval((A; 10)); eval((A; 9)); eval((A; 8)) \u0011 M IN (1; 1; \u00001) \u0011 \u00001. (B; 10) \u0011 M IN (eval((A; 9)); eval((A; 8)); eval((A; 7)) \u0011 M IN (1; \u00001; 1) \u0011 \u00001. (B; 9) \u0011 M IN (eval((A; 8)); eval((A; 7)); eval((A; 6)) \u0011 M IN (\u00001; 1; 1) \u0011 \u00001. Finally, at depth zero, (A; 12) \u0011 M AX(\u00001; \u00001; \u00001) \u0011 \u00001. 1visit https://youtu.be/aonCsvi0LKc to see how the game is played with 21 items. 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (3.3) Which node(s) would not have been evaluated at depth 2 if alpha/beta pruning was employed? Below (B,10): (A,7). Below (B,10): (A,7), and (A,6). Question 4: 8 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) (1)De\fne the Least Constraining Value (LCV) heuristic. The heuristic prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). (4.2) (2)Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u0000 1-consistent and so on. This can only be done in exponential time which makes large problems intractable. (4.3) (1)De\fne the degree heuristic. This heuristic attempts to reduce the branching factor on future choices. (4.4) (2)If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to \fnd a solution by simply backtracking? Explain your answer. No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (4.5) (2)Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistency . (Or: it removes values from the domain of the neighbours of the variable for which the forward checking is being done { also acceptable answer.) Question 5 CSPs are especially useful when trying to solve scheduling problems. Consider the problem of determining how to assign aircraft in a \reet to particular \rights. A \right (or a leg) is simply a scheduled transference of passengers from a departing airport to a destination airport (with no stops in between). In order to transfer passengers between the source and destination airport a \right needs an aircraft. Additionally, aircraft have a minimum turn-around time of 30 minutes. That is, an aircraft cannot arrive, and then simply take of again. It has to taxi to the gate, passengers should debark, the aircraft should be cleaned, and the new passengers should embark. Only then can the aircraft taxi to the assigned runway and then take-o\u000b. The airline in question operates a small \reet of short-haul aircraft, and all \rights are only for 9 or fewer passengers. Consider the following \right schedule: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2019 Flight Departs Lands QQ002 9:15 10:45 QQ002 14:00 14:45 QQ004 12:15 13:15 QQ008 10:45 11:45 QQ016 09:30 10:15 QQ032 11:15 13:30 QQ064 13:00 13:45 QQ128 13:15 14:15 QQ256 13:30 14:45 QQ512 10:00 10:45 QQ512 14:00 14:45 You can assume that departure happens from the same airport (you don't have to worry about the location of the aircraft). The airline owns several Cessna 208 Grand Caravans (208B), which are: 1. XAX-344, 2. XAX-254, 3. XAX-983, 4. XAX-124 5. XAX-888 (5.1) The \frst step when representing a problem as a CSP is to de\fne the variables. The variables are those elements in the problem that get assigned something else from the problem. Read the above problem description carefully to determine which elements from the problem are variables. Now provide these variables for the problem. Remember to use the correct notation! Hint: In most cases the variables are those elements from the problem which will require the use of a limited item available. The variables are simply the \rights: X = fQQ002, QQ004, QQ008, QQ016, QQ032, QQ064, QQ128, QQ256, QQ512g. (5.2) Once the variables have been de\fned, we proceed to de\fning the domain for each variable. That is, the `value' that each variable can take. De\fne the domain for each variable in the CSP. The domain for each variable will be the \right that it can take on. DX = fXAX-344, XAX-254, XAX-983, XAX-124, XAX-888g 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.3) The constraints determine the `restrictions' placed on variables. De\fne the constraints for the variables in the CSP. 1. QQ002 6= QQ008 2. QQ002 6= QQ016 3. QQ002 6= QQ064 4. QQ002 6= QQ128 5. QQ002 6= QQ256 6. QQ002 6= QQ512 7. QQ004 6= QQ032 8. QQ004 6= QQ064 9. QQ004 6= QQ128 10. QQ004 6= QQ256 11. QQ008 6= QQ032 12. QQ008 6= QQ512 13. QQ016 6= QQ512 14. QQ032 6= QQ064 15. QQ032 6= QQ128 16. QQ032 6= QQ256 17. QQ064 6= QQ128 18. QQ064 6= QQ256 19. QQ064 6= QQ512 20. QQ128 6= QQ256 21. QQ128 6= QQ512 22. QQ256 6= QQ512 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2019 (5.4) Provide the constraint graph for this problem. QQ002 QQ004 QQ008 QQ016 QQ032 QQ064 QQ128 QQ256 QQ512 (5.5) Provide the solution to the problem. Use the Minimum Remaining Values (MRV) heuris- tic, and at each step establish arc-consistency for the variables. Show how the solution is calculated in a step by step fashion. Show the variables and their assigned values as your \fnal answer! Using MRV we easily choose any of the variables, and we can easily assign any aircraft to them. Choose QQ002 = XAX-344 \u000f DQQ004 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ008 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ016 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ256 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ512 = f XAX-254, XAX-983, XAX-124, XAX-888 g Using MRV we now select any of the variables that had their domain reduced from the previous step. Choose QQ008 = XAX-254 \u000f DQQ004 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ016 = f XAX-254, XAX-983, XAX-124, XAX-888 g 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ256 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ512 = f XAX-983, XAX-124, XAX-888 g Choose QQ512 = XAX-983 \u000f DQQ004 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ016 = f XAX-254, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-254, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-254, XAX-124, XAX-888 g \u000f DQQ256 = f XAX-254, XAX-124, XAX-888 g Choose QQ016 = XAX-254 \u000f DQQ004 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-254, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-254, XAX-124, XAX-888 g \u000f DQQ256 = f XAX-254, XAX-124, XAX-888 g Choose QQ064 = XAX-254 \u000f DQQ004 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-124, XAX-888 g \u000f DQQ256 = f XAX-124, XAX-888 g Choose QQ128 = XAX-124 \u000f DQQ004 = f XAX-344, XAX-983, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-888 g \u000f DQQ256 = f XAX-888 g Choose QQ256 = XAX-888 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2019 \u000f DQQ004 = f XAX-344, XAX-983, XAX-888g \u000f DQQ032 = f XAX-344, XAX-983, XAX-888g Choose QQ004 = XAX-344 \u000f DQQ032 = f XAX-983, XAX-888g Finally, QQ032 = XAX-983 QQ002 QQ004 QQ008 QQ016 QQ032 QQ064 QQ128 QQ256 QQ512 Flight Plane QQ002 XAX-344 QQ004 XAX-344 QQ008 XAX-254 QQ016 XAX-254 QQ032 XAX-983 QQ064 XAX-254 QQ128 XAX-124 QQ256 XAX-888 QQ512 XAX-983 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Question 6: 31 Marks Consider the following English sentences: 1. Anyone who passes their history exam, and wins the lottery is happy. 2. Anyone who studies, or who is lucky will pass their exam. 3. John did not study. 4. John is lucky. 5. Anybody who is lucky will win the lottery. (6.1) (8)Provide a First Order Logic (FOL) vocabulary for the sentences. 1. Lucky(p). A predicate (property). Person p is lucky. 2. P ass(p; s). A predicate. Person p, passes subject s. 3. W in(p; e). A predicate. Person p wins event e. 4. Study(p). A predicate. Person p studies. 5. Happy(p). A predicate. Person p is happy. 6. John. A constant depicting people. 7. History. A constant depicting subjects. 8. Lottery. A constant depicting events. (6.2) (5)Using your vocabulary, translate the sentences in FOL. 1. (8x)[(P ass(x; History) ^ W in(x; Lottery)) ) Happy(x)] 2. (8y)(8z)[(Study(y) _ Lucky(y)) ) P ass(y; z)] 3. :Study(John) 4. Lucky(John) 5. (8w)[Lucky(w) ) W in(w; Lottery)] It is important to standardise the variables (to use di\u000berent variable names) to avoid confusion when dropping the universal quanti\fers. 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2019 (6.3) (6)Convert the statements obtained in (6.2) into clausal form. Variables must be standard- ised. The statements are converted as follows to clause form: 1. :P ass(x; History) _ :W in(x; Lottery) _ Happy(x) 2. :Study(y) _ P ass(y; z) 3. :Lucky(y) _ P ass(y; z) 4. :Study(John) 5. Lucky(John) 6. :Lucky(w) _ W in(w; Lottery) Note that universal quanti\fers have been dropped because all variables were universally quanti\fed. Also note that for statements to be in Conjunctive Normal Form (CNF) they cannot be of the form 1:\u000b ^ \f, they must be converted to: 1. \u000b 2. \f This is because resolution relies on uni\fcation, which only operates on disjunctions: a_b;:b a , one cannot do a^b;:b a Statement 2 from the FOL was converted to statements 2 and 3 in the answer above: (8y)(8z)[(Study(y) _ Lucky(y)) ) P ass(y; z)] \u0011(8y)(8z)[:(Study(y) _ Lucky(y)) _ P ass(y; z)] \u0011(8y)(8z)[(:Study(y) ^ :Lucky(y)) _ P ass(y; z)] \u0011(8y)(8z)[(:Study(y) _ P ass(y; z)) ^ (:Lucky(y) _ P ass(y; z))] \u0011(:Study(y) _ P ass(y; z)) ^ (:Lucky(y) _ P ass(y; z))] The last line is converted to 2 separate rules, 2 and 3. (6.4) (12)Use resolution refutation to prove that John is happy. 7 :Happy(John)negation of goal 8 :W in(x; Lottery) _ Happy(x) _ :Lucky(x), 1&3; fx=yg; fHistory=zg 9 :W in(John; Lottery) _ Happy(John), 5&8; fJohn=xg 10 :W in(John; Lottery), 9&7 11 W in(John; Lottery), 5&6; fJohn=wg 12 ;, 10&11 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Question 7 Do excercise 8.9 b, d, f, g in the textbook. The translation is straighforward using the vocabulary provided. b. Occupation(Joe; Actor) ^ 9p(p 6= Actor ^ Occupation(Joe; p)) d. :9p(Occupation(p; Lawyer) ^ Customer(Joe; p)) f. 9p(Occupation(p; Lawyer) ^ 8q(Customer(q; p) ) Occupation(q; Doctor))) g. 8p(Occupation(p; Surgeon) ) 9q(Occupation(q; Lawyer) ^ Customer(q; p))) Copyright c\rUNISA 2019 (v2019.2.1) 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 02 Solution Total Marks: 100 UNIQUE ASSIGNMENT NUMBER: 868331 Study material: Chapters 5, 6, 7, 8. You may skip sections 5.5, 5.6, and 5.7. Question 1: 10 Marks (1.1) Clearly explain what a utility function is, and why it is used during adversarial searches. In adversarial searches, a utility function provides a numerical value for a ﬁnal state s for player p. It is used to identify winning and losing states for a player. (1.2) Is the ideal strategy only available if we have perfect information? Explain your answer. No. Agents can still get the ideal strategy when playing without all the information. This means the ideal strategy includes the notion of limited information. However, an agent that has perfect information will most likely outperform an agent that has limited/imperfect information for the same problem. (1.3) Explain how forward pruning works. Provide at least one approach to forward prun- ing in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering them. For example, beam search only considers a sample of the best moves at each ply, but this may lead to the best move being pruned away. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we prune. Otherwise minimax is an exhaustive search (for the parameters such as depth – plys – it is conﬁgured for) and node orders do not matter. Question 2: 20 Marks Consider Figure 1 and answer the questions that follow. (The utility value of each leaf node is provided below the leaf node.) (2.1) Provide the minimax values for all the non-leaf nodes. A = 5, B = 5, C = 3, E = 8, G = 3 (2.2) Which move should MAX make? Explain your answer. B. The utility value for MAX for move B is higher than that of move C. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202 A B D 5 E I 8 J -1 F 10 C G K -5 L 3 H 20 Figure 1: Minimax, alpha/beta (2.3) Write down the \u000b=\f values for all the nodes (except the leaf nodes) if alpha/beta prun- ing is applied to the tree. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B D 5 E I 8 J -1 F 10 C G K -5 L 3 H 20 v \u0015 \f: J cut v \u0014 \u000b: H cut v = \b\b\u00001 5 \u000b = \b\b\u00001 5 \f = 1 v =ˆ1 5 \u000b = \u00001 \f =ˆ1 5 v =ˆ1 3 \u000b = 5 \f = 1 v = \b\b\u00001 8 \u000b = \u00001 \f = 5 v = \b\b\u00001ˆˆ\u00005 3 \u000b = \b\b\u00001ˆˆ\u00005 3 \f = 1 (1) (2) (3) 5 (4) (5) (6) 8 (7) 8 (8) (9) 10 (10) 5 (11) (12) (13) (14) -5 (15) (16) 3 (17) (18) 3 The ﬁnal values are: A = (5, 1), B = (\u00001, 5), E = (\u00001, 5), C = (5, 1), G = (3, 1) (2.4) Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). J was beta-cut, and H was alpha-cut. Question 3: 20 Marks Consider the subtraction game: two players (A and B) take turns removing items from a heap (just one heap). Each player may remove either one, two, or three items from the heap. The heap starts off with 21 items, and player A moves ﬁrst. The objective of the game is to be the last player to remove items from the heap. That is, if it is your turn to move, and the heap is empty, you’ve lost the game 1. The initial state for the game is (A, 21) indicating that it is A’s turn to move and there are 21 items on the heap. In general then, a state is represented as (P, n) where P 2 fA, Bg, and 0 \u0014 n \u0014 21. The evaluation function for non-terminal nodes is a simple threshold function deﬁned as: eval(S) = ( \u00001 if S.n mod (k + 1) = 0, 1 otherwise 1Visit https://youtu.be/aonCsvi0LKc to see how the game is played. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202 S.n refers to the number of items left in the heap in state S, and mod is the integer modulo function. k is the maximum number of items that can be removed from the heap at each turn, so k = 3. (3.1) Draw the entire game tree, starting from the initial state, down to depth two (the initial state is at depth 0), and provide the evaluation for each state at depth 2. (A,21) (B,20) (A,19) (A,18) (A,17) (B,19) (A,18) (A,17) (A,16) (B,18) (A,17) (A,16) (A,15) (3.2) Using the minimax algorithm, provide the backed-up values for states at depth 1 and 0. (Hint: Since you don’t have the entire game tree, and thus no terminal states, you cannot use a utility value to calculate the backed up values. However, you do have an evaluation function.) There are ﬁve different states on depth 2 (which is a max level): (A, 19), (A, 18), (A, 17), (A, 16), and (A, 15). eval((A, 19)) = 1, since (19 mod (3 + 1) = 19 mod 4 = 3, eval((A, 18)) = 1, eval((A, 17)) = 1, eval((A, 16)) = \u00001, eval((A, 15)) = 1. At depth 1 (a MIN level), (B, 20) \u0011 MIN(eval((A, 19)), eval((A, 18)), eval((A, 17)) \u0011 MIN(1, 1, 1) \u0011 1. (B, 19) \u0011 MIN(eval((A, 18)), eval((A, 17)), eval((A, 16)) \u0011 MIN(1, 1, \u00001) \u0011 \u00001. (B, 18) \u0011 MIN(eval((A, 17)), eval((A, 16)), eval((A, 15)) \u0011 MIN(1, \u00001, 1) \u0011 \u00001. Finally, at depth 0, (A, 21) \u0011 MAX (1, \u00001, \u00001) \u0011 1. (3.3) Which node(s) would not have been evaluated at depth 2 if alpha/beta pruning was employed? Below (B,18): (A,15) (cut because \u000b = 1, and v = \u00001 from (A,16). Thus (A,15) is cut. Question 4: 10 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) Deﬁne the Least Constraining Value (LCV) heuristic. The LCV heuristic is used to choose values for variables in a constraint graph. It prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (4.2) Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u0000 1-consistent and so on. This can only be done in exponential time which makes large problems intractable. (4.3) Deﬁne the degree heuristic. This heuristic attempts to reduce the branching factor on future choices. (4.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to ﬁnd a solution by simply backtracking? Explain your answer. No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (4.5) Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistency. (Or: It removes values from the domain of the neighbours of the variable for which the forward checking is being done that are inconsistent with its value.) Question 5: 30 Marks CSPs are especially useful when trying to solve scheduling problems. Consider the problem of determining how to assign aircraft in a ﬂeet to particular ﬂights. A ﬂight (or a leg) is simply a scheduled transference of passengers from a departing airport to a desti- nation airport (with no stops inbetween). In order to transfer passengers between the source and destination airport a ﬂight needs an aircraft. Additionally, aircraft have a minimum turn-around time of 30 minutes. That is, an aircraft cannot arrive, and then simply take of again. It has to taxi to the gate, passengers should debark, the aircraft should be cleaned, and the new passengers should embark. Only then can the aircraft taxi to the assigned runway and then take-off. The airline in question operates a small ﬂeet of short-haul aircraft, and all ﬂights are only for 9 or fewer passengers. Consider the following ﬂight schedule: Flight Departs Lands QQ144 9:15 10:45 QQ144 14:00 14:45 QQ169 12:15 13:15 QQ108 10:45 11:45 QQ256 09:30 10:15 QQ254 11:15 13:30 QQ099 11:15 13:30 QQ512 13:15 14:15 QQ056 11:15 11:45 QQ134 10:00 10:45 QQ134 14:00 14:45 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202 You can assume that departure happens from the same airport (you don’t have to worry about the location of the aircraft). The airline owns several Cessna 208 Grand Caravans (208B), which are: 1. XAX-143, 2. XAX-884, 3. XAX-547, 4. XAX-344, 5. XAX-254, 6. XAX-983, 7. XAX-124 (5.1) The ﬁrst step when representing a problem as a CSP is to deﬁne the variables. The variables are those elements in the problem that get assigned something else from the problem. Read the above problem description carefully to determine which ele- ments from the problem are variables. Now provide these variables for the problem. Remember to use the correct notation! Hint: In most cases the variables are those elements from the problem which will require the use of a limited item available. The variables are simply the ﬂights: X = fQQ144, QQ169, QQ108, QQ256, QQ254, QQ099, QQ512, QQ056, QQ134g. (5.2) Once the variables have been deﬁned, we proceed to deﬁning the domain for each variable. That is, the ‘value’ that each variable can take. Deﬁne the domain for each variable in the CSP. The domain for each variable will be the aircraft that can be assigned to ﬂights. DX = f XAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124 g (5.3) The constraints determine the ‘restrictions’ placed on variables. Deﬁne the constraints for the variables in the CSP. 1. QQ144 6= QQ108 2. QQ144 6= QQ256 3. QQ144 6= QQ099 4. QQ144 6= QQ512 5. QQ144 6= QQ134 6. QQ169 6= QQ254 7. QQ169 6= QQ099 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 8. QQ169 6= QQ512 9. QQ108 6= QQ254 10. QQ108 6= QQ056 11. QQ108 6= QQ134 12. QQ256 6= QQ134 13. QQ254 6= QQ099 14. QQ254 6= QQ056 15. QQ099 6= QQ512 16. QQ099 6= QQ134 17. QQ512 6= QQ134 (5.4) Provide the constraint graph for this problem. QQ144 QQ169 QQ108 QQ256 QQ254 QQ099 QQ512 QQ056 QQ134 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202 (5.5) Provide the solution to the problem. Use the Minimum Remaining Values (MRV) heuristic, and at each step establish arc-consistency for the variables. Show how the solution is calculated in a step by step fashion. Provide the variables and their associated values as your ﬁnal answer! Using MRV we easily choose any of the variables, and we can easily assign any aircraft to them. Choose QQ144 = XAX-143. \u000f DQQ056,QQ254,QQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX- 983,XAX-124g \u000f DQQ108,QQ512,QQ256,QQ134,QQ099 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX- 983, XAX-124g Using MRV we now select any of the variables that had their domain reduced from the previous step. Choose QQ256 = XAX-884. \u000f DQQ056,QQ254,QQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX- 983, XAX-124g \u000f DQQ108,QQ512,QQ099 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX- 124g \u000f DQQ134 = fXAX-547, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ134 since it now has the least remaining values. Choose QQ134 = XAX-547. \u000f DQQ056,QQ254,QQ169 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX- 983, XAX-124g \u000f DQQ108,QQ512 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ099 = fXAX-344, XAX-254, XAX-983, XAX-124g We choose QQ099 since it now has the least remaining values. Choose Q099 = XAX- 344. \u000f DQQ056 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX- 124g \u000f DQQ108 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ512 = fXAX-884, XAX-547, XAX-254, XAX-983, XAX-124g \u000f DQQ254,QQ169 = fXAX-143, XAX-884, XAX-547, XAX-254, XAX-983, XAX-124g We choose QQ512 since it now has the least remaining values. Choose QQ512 = XAX-884. \u000f DQQ056 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX- 124g \u000f DQQ108 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace \u000f DQQ254 = fXAX-143, XAX-884, XAX-547, XAX-254, XAX-983, XAX-124g \u000f DQQ169 = fXAX-143, XAX-547, XAX-254, XAX-983, XAX-124g We choose QQ169 since it now has the least remaining values. Choose QQ169 = XAX-143. \u000f DQQ056 = fXAX-143, XAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX- 124g \u000f DQQ108 = fXAX-884, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ254 = fXAX-884, XAX-547, XAX-254, XAX-983, XAX-124g We choose QQ254 since it now has the least remaining values. Choose QQ254 = XAX-884. \u000f DQQ056 = fXAX-143, XAX-547, XAX-344, XAX-254, XAX-983, XAX-124g \u000f DQQ108 = fXAX-547, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ108 since it now has the least remaining values. Choose QQ108 = XAX-547. \u000f DQQ056 = fXAX-143, XAX-344, XAX-254, XAX-983, XAX-124g We choose QQ056 since it now has the least remaining values. Choose Q056 = XAX- 143. The problem is thus solved. QQ144 QQ169 QQ108 QQ256 QQ254 QQ099 QQ512 QQ056 QQ134 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202 Flight Aircraft QQ144 XAX-143 QQ169 XAX-143 QQ108 XAX-547 QQ256 XAX-884 QQ254 XAX-884 QQ099 XAX-344 QQ512 XAX-884 QQ056 XAX-143 QQ134 XAX-547 Question 6 This question was not marked. (6.1) Show that A , (B _ C) j= A. Proceed by ﬁrst converting A , (B _ C) to Conjunctive Normal Form (CNF), and then show that A , (B _ C) j= A using resolution. Unfortunately, there was a mistake in this question. In fact, the entailment does not hold, so it is impossible to prove it by resolution. But why? This is a case of resolution refutation, so we have to determine whether fA , (B _ C), :Ag is unsatisﬁable. As stated in the question, the ﬁrst step is to convert all the formulas to CNF: 1. Eliminate iff: (A ) (B _ C)) ^ ((B _ C) ) A) 2. Eliminate implication: (:A _ B _ C) ^ (:(B _ C) _ A) 3. Move : inwards: (:A _ B _ C) ^ ((:B ^ :C) _ A) 4. Distribute over ^: (:A _ B _ C) ^ (:B _ A) ^ (:C _ A) :A is already in CNF. Next, we number and write down each of the clauses: 1. :A _ B _ C 2. :B _ A 3. :C _ A 4. :A Now we apply the resolution rule to all pairs of clauses that have a pair of complemen- tary literals, to derive new clauses: 5. :B 2, 4 6. :C 3, 4 7. :A _ C 1, 5 8. :A 6, 7 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Since there are no more pairs of clauses that can be resolved, and we haven’t reached \u0003, we conclude that fA , (B _ C), :Ag is satisﬁable. In other words, A , (B _ C) 6j= A. But wait a minute, couldn’t we apply the resolution rule to clauses 1 and 2: 9. C 1, 2 and then combine this with clause 6 to reach \u0003? Unfortunately not! The resolution rule only allows us to remove one pair of complementary literals at a time: A _ l1 _ ... _ lm, :A _ m1 _ ... _ mn l1 _ ... _ lm _ m1 _ ... _ mn So 9. B _ :B _ C 1, 2 or 9. :A _ A _ C 1, 2 As explained at the bottom of page 254, B _ :B _ C is equivalent to True _ C which can be discarded. The same goes for :A _ A _ C. So it is always a waste of time to apply the resolution rule to clauses that have two pairs of complementary literals. Question 7: 10 Marks Do exercise 8.9 a, c, e and f in the textbook. The translation is straighforward using the vocabulary provided. a. Occupation(Emily, Surgeon) _ Occupation(Emily, Lawyer ) This question illustrates the problem that ‘or’ in English usually means ‘one or the other, but not both’. To translate this correctly into FOL, we should write: (Occupation(Emily, Surgeon) _ Occupation(Emily, Lawyer )) ^ :(Occupation(Emily, Surgeon) ^ Occupation(Emily, Lawyer )) c. 8p (Occupation(p, Surgeon) ) Occupation(p, Doctor )) e. 9p (Boss(p, Emily ) ^ Occupation(p, Lawyer )) f. 9p (Occupation(p, Lawyer ) ^ 8q (Customer (q, p) ) Occupation(q, Doctor ))) f0g Copyright c\rUNISA 2018 (v2018.1.1) 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace ASSIGNMENT 02 Solution Total Marks: 100 UNIQUE ASSIGNMENT NUMBER: 709589 Study material: Chapters 5, 6, 7, and 8. You may skip sections 5.5, 5.6, and 5.7, 7.6 and 8.4. Question 1: 10 Marks (1.1) Clearly explain what an evaluation function is, and why it is used during adversarial searches. Given a terminal or non-terminal state s (i.e. a board position) and a player p, an evaluation function returns a numerical value of the strength of state s for player p. An evaluation function can be used to choose the best moves for a player, which branches of a search tree to prune, or to provide a kind of utility value when the look-ahead depth does not reach a terminal node. (1.2) Is the ideal strategy only available if we have perfect information? Explain your answer. No. Agents can still get the ideal strategy when playing without all the information. This means the ideal strategy includes the notion of limited information, however, an agent that has perfect information will most likely outperform an agent that has lim- ited/imperfect information for the same problem. (1.3) Explain how forward pruning works. Provide at least one approach to forward prun- ing in your explanation, as well as a problem that may be encountered with forward pruning. Forward pruning means that some nodes are pruned without even considering them. Beam search [others are also considered] only considers a sample of the best moves at each ply, but this may lead to the best move being pruned away. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Only if we prune. Otherwise minimax is an exhaustive search (for the parameters such as depth – plys – it is conﬁgured for) and node orders do not matter. Question 2: 20 Marks Consider Figure 1 and answer the questions that follow. (The utility values of the leaf nodes are provided below the leaf nodes.) (2.1) Provide the minimax values for all the nodes. A = 7, B = 7, C = 6, E = 9, G = 6 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2018 A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 Figure 1: Minimax, alpha/beta (2.2) Which move should MAX make? Explain your answer. B. The utility value for MAX for move B is higher than that of move C. (2.3) Write down the \u000b=\f values for all the nodes (except the leaf nodes) if alpha/beta prun- ing is applied to the tree. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 v \u0015 \f: J cut v \u0014 \u000b: H,M cut v = \b\b\u00001 7 \u000b = \b\b\u00001 7 \f = 1 v =ˆ1 7 \u000b = \u00001 \f =ˆ1 7 v =ˆ1 6 \u000b = 7 \f = 1 v = \b\b\u00001 9 \u000b = \u00001 \f = 7 v = \b\b\u00001ˆˆ\u00003 6 \u000b = \b\b\u00001ˆˆ\u00003 6 \f = 1 (1) (2) (3) 7 (4) (5) (6) 9 (7) 9 (8) (9) 9 (10) 7 (11) (12) (13) (14) -5 (15) (16) 6 (17) 6 (18) 6 The ﬁnal values are: A = (7, 1), B = (\u00001, 7), E = (\u00001, 7), C = (7, 1), G = (6, 1) (2.4) Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). J was beta-cut, H and M were alpha-cut. Question 3: 10 Marks Consider the subtraction game: two players (A and B) take turns removing items from a heap (just one heap). Each player may remove either one, two, or three items from the heap. The heap starts off with 12 items, and player A moves ﬁrst. The objective of the game is to be the last player to remove items from the heap. That is, if it is your turn to move, and the heap is empty, you’ve lost the game 1. The Initial state for the game is (A, 12) indicating that it is A’s turn to move and there are 12 items on the heap. In general then, a state is represented as (P, n) where P 2 fA, Bg, and 0 \u0014 n \u0014 12. The evaluation function for non-terminal nodes is a simple threshold function deﬁned as: eval(S) = ( \u00001 if S.n mod (k + 1) = 0, 1 otherwise 1visit https://youtu.be/aonCsvi0LKc to see how the game is played with 21 items. 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2018 S.n refers to the number of items left in the heap in state S, and mod is the integer modulo function. k is the maximum number of items that may be removed on a turn, so in this case k = 3. (3.1) Draw the entire game tree, starting from the initial state, down to depth two (the initial state is at depth 0), and provide the evaluation for each state at depth 2. (A,12) (B,11) (A,10) (A,9) (A,8) (B,10) (A,9) (A,8) (A,7) (B,9) (A,8) (A,7) (A,6) The values of the states at depth 2 are as follows: eval((A, 10)) = 1 since (10 mod (3 + 1) = 10 mod 4 = 2. eval((A, 9)) = 1 since 9 mod 4 = 1. eval((A, 8)) = \u00001 since 8 mod 4 = 0. eval((A, 7)) = 1 since 7 mod 4 = 3. eval((A, 6)) = 1 since 6 mod 4 = 2. (3.2) Using the minimax algorithm, provide the backed-up values for states at depth 1 and 0. (Hint: Since you don’t have the entire game tree, and thus no terminal states, you cannot use a utility value to calculate the backed up values. However, you do have an evaluation function.) The values of states on level 2 (which is a max level) are given in the answer to 3.1. At depth 1 (a min level): (B, 11) gets the value MIN(eval((A, 10)), eval((A, 9)), eval((A, 8)) = MIN(1, 1, \u00001) = \u00001. (B, 10) gets the value MIN(eval((A, 9)), eval((A, 8)), eval((A, 7)) = MIN(1, \u00001, 1) = \u00001. (B, 9) gets the value MIN(eval((A, 8)), eval((A, 7)), eval((A, 6)) = MIN(\u00001, 1, 1) = \u00001. Finally, at depth 0 (a max level): (A, 12) gets the value MAX (\u00001, \u00001, \u00001) = \u00001. (3.3) Which node(s) would not have been evaluated at depth 2 if alpha/beta pruning was employed? Below (B,10): (A,7). Below (B,9): (A,7) and (A,6). Question 4: 10 Marks Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) Deﬁne the Least Constraining Value (LCV) heuristic. 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace The heuristic prefers values that rule out the fewest choices for neighbours (it tries not to limit the number of choices that remain for neighbours). (4.2) Explain why establishing strong k-consistency is a problem. This means we must show that the graph is k-consistent, k \u0000 1-consistent and so on. This can only be done in exponential time which makes large problems intractable. (4.3) Deﬁne the degree heuristic. This heuristic attempts to reduce the branching factor on future choices. (4.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to ﬁnd a solution by simply backtracking? Explain your answer. No. It may very well be that there is no answer (there is no form of consistency for the problem given the constraints, resulting in no solution). (4.5) Explain what forward checking for a CSP is. It is a domain reduction technique which establishes arc consistency. (Or: It removes values from the domain of the neighbours of the variable for which the forward checking is being done.) Question 5: 30 Marks CSPs are especially useful when trying to solve scheduling problems. Consider the problem of determining how to assign aircraft in a ﬂeet to particular ﬂights. A ﬂight (or a leg) is simply a scheduled transference of passengers from a departing airport to a desti- nation airport (with no stops inbetween). In order to transfer passengers between the source and destination airport a ﬂight needs an aircraft. Additionally, aircraft have a minimum turn-around time of 30 minutes. That is, an aircraft cannot arrive, and then simply take off again. It has to taxi to the gate, passengers should debark, the aircraft should be cleaned, and the new passengers should embark. Only then can the aircraft taxi to the assigned runway and then take-off. The airline in question operates a small ﬂeet of short-haul aircraft, and all ﬂights are only for 9 or fewer passengers. Consider the following ﬂight schedule: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2018 Flight Departs Lands QQ002 9:15 10:45 QQ002 14:00 14:45 QQ004 12:15 13:15 QQ008 10:45 11:45 QQ016 09:30 10:15 QQ032 11:15 13:30 QQ064 13:00 13:45 QQ128 13:15 14:15 QQ256 13:30 14:45 QQ512 10:00 10:45 QQ512 14:00 14:45 You can assume that departure happens from the same airport (i.e. you don’t have to worry about the location of the aircraft). The airline owns several Cessna 208 Grand Caravans (208B), which are: 1. XAX-344, 2. XAX-254, 3. XAX-983, 4. XAX-124 5. XAX-888 (5.1) The ﬁrst step when representing a problem as a CSP is to deﬁne the variables. The variables are those elements in the problem that get assigned something else from the problem. Read the above problem description carefully to determine which ele- ments from the problem are variables. Now provide these variables for the problem. Remember to use the correct notation! Hint: In most cases the variables are those elements from the problem which will require the use of a limited item available. The variables are simply the ﬂights: X = fQQ002, QQ004, QQ008, QQ016, QQ032, QQ064, QQ128, QQ256, QQ512g. (5.2) Once the variables have been deﬁned, we proceed to deﬁning the domain for each variable. That is, the ‘value’ that each variable can take. Deﬁne the domain for each variable in the CSP. The domain for each variable will be the ﬂight that it can take on. DX = f XAX-344, XAX-254, XAX-983, XAX-124 g 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (5.3) The constraints determine the ‘restrictions’ placed on variables. Deﬁne the constraints for the variables in the CSP. 1. QQ002 6= QQ008 2. QQ002 6= QQ016 3. QQ002 6= QQ128 4. QQ002 6= QQ256 5. QQ002 6= QQ512 6. QQ004 6= QQ032 7. QQ004 6= QQ064 8. QQ004 6= QQ128 9. QQ004 6= QQ256 10. QQ008 6= QQ032 11. QQ008 6= QQ512 12. QQ016 6= QQ512 13. QQ064 6= QQ128 14. QQ064 6= QQ256 15. QQ064 6= QQ512 16. QQ128 6= QQ256 17. QQ128 6= QQ512 18. QQ256 6= QQ512 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2018 (5.4) Provide the constraint graph for this problem. QQ002 QQ004 QQ008 QQ016 QQ032 QQ064 QQ128 QQ256 QQ512 (5.5) Provide the solution to the problem. Use the Minimum Remaining Values (MRV) heuristic, and at each step establish arc-consistency for the variables. Show how the solution is calculated in a step by step fashion. Show the variables and their assigned values as your ﬁnal answer! Using MRV we easily choose any of the variables, and we can easily assign any aircraft to them. Choose QQ002 = XAX-344. \u000f DQQ004,QQ032,QQ064 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ008,QQ016,QQ128,QQ256,QQ512 = f XAX-254, XAX-983, XAX-124, XAX-888 g Using MRV we now select any of the variables that had their domain reduced from the previous step. Choose QQ008 = XAX-254. \u000f DQQ004,QQ064 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ016,QQ128,QQ256 = f XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ512 = f XAX-983, XAX-124, XAX-888 g We choose QQ512 since it now has the least remaining values. Choose QQ512 = XAX-983. \u000f DQQ004 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ016,QQ256 = f XAX-254, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-344, XAX-254, XAX-124, XAX-888 g 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace \u000f DQQ128 = f XAX-254, XAX-983, XAX-124, XAX-888 g We choose QQ016 since it now has the least remaining values (along with QQ256). Choose QQ016 = XAX-254. \u000f DQQ004 = f XAX-344, XAX-254, XAX-983, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-344, XAX-254, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-254, XAX-983, XAX-124, XAX-888 g We choose QQ256 since it now has the least remaining values. Choose QQ256 = XAX-254. \u000f DQQ004 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ032 = f XAX-344, XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-344, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-983, XAX-124, XAX-888 g We choose QQ032 since it now has the least remaining values (along with QQ064). Choose QQ032 = XAX-344. \u000f DQQ004 = f XAX-983, XAX-124, XAX-888 g \u000f DQQ064 = f XAX-344, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-983, XAX-124, XAX-888 g We choose QQ004. Choose QQ004 = XAX-983. \u000f DQQ064 = f XAX-344, XAX-124, XAX-888 g \u000f DQQ128 = f XAX-124, XAX-888 g We choose QQ128 since it now has the least remaining values. Choose QQ128 = XAX-124. \u000f DQQ064 = f XAX-344, XAX-888 g We choose QQ064 since it now has the least remaining values. Choose Q064 = XAX- 344. The problem is thus solved. The coloured graph is provided for veriﬁcation. 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2018 QQ002 QQ004 QQ008 QQ016 QQ032 QQ064 QQ128 QQ256 QQ512 Flight Plane QQ002 XAX-344 QQ004 XAX-983 QQ008 XAX-254 QQ016 XAX-254 QQ032 XAX-344 QQ064 XAX-344 QQ128 XAX-124 QQ256 XAX-254 QQ512 XAX-983 Question 6: 10 Marks Consider the following statements from a knowledge base KB: a. (P ^ Q) ) R b. T ) Q c. W ) P d. :R Prove that KB j= (W ) :T ) using resolution refutation. (Hint: FIrst convert the statements in KB and the negation of the goal to clause form. Note that :(W ) :T ) \u0011 :(:W _ :T ) \u0011 W ^ T .) Here is a short example of what your resolution proof should look like: 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace 1. :A _ B (premise) 2. A (premise) 3. :B (negation of goal) 4. B (1 & 2) 5. ; (3 & 4) When using refutation, we prove by contradiction. That is we assume that which we are asked is not true, and try to ﬁnd a contradiction. Using refutation this simply means adding :(W ) :T ) to the KB, repeatedly applying resolution, and if the closure contains the empty clause we have a contradiction. The hint provided shows that the negation of the goal is equivalent to W ^ T , thus we add W and T to the clausal form of KB, and use resolution to try and derive the empty clause. 1. :P _ :Q _ R (premise) 2. :T _ Q (premise) 3. :W _ P (premise) 4. :R (premise) 5. W (negation of goal) 6. T (negation of goal) 7. :P _ :Q (1 and 4) 8. Q (2 and 6) 9. :P (7 and 8) 10. P (5 and 3) 11. ; (9 and 10) We arrive at a contradiction, and thus we can conclude that KB j= (W ) :T ). f0g Question 7: 10 Marks Consider a vocabulary with the following symbols: Customer (p1, p2): Predicate. Person p1 is a customer of person p2. Boss(p1, p2): Predicate. Person p1 is a boss of person p2. Doctor (p): Predicate. Person p is a doctor. Surgeon(p): Predicate. Person p is a surgeon. Lawyer (p): Predicate. Person p is a lawyer. Actor (p): Predicate. Person p is an actor. Emily , Joe: Constants denoting people. Use these symbols to write the following assertions in ﬁrst-order logic: a. Emily is either a surgeon or a lawyer (but not both). b. All surgeons are doctors. c. Joe does not have a lawyer (i.e. he is not the customer of any lawyer). d. There exists a lawyer all of whose customers are doctors. 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/202/2/2018 e. Every surgeon has a lawyer. The translation is straight forward using the vocabulary provided. a. (Surgeon(Emily ) _ Lawyer (Emily )) ^ :(Surgeon(Emily) _ Lawyer (Emily )) b. 8p (Surgeon(p) ) Doctor (p)) c. :9p (Lawyer (p) ^ Customer (Joe, p)) d. 9p (Lawyer (p) ^ 8q (Customer (q, p) ) Doctor (q))) e. 8p (Surgeon(p) ) 9q (Lawyer (q) ^ Customer (q, p))) f0g Copyright c\rUNISA 2018 (v2018.2.1) 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Solution SELF ASSESSMENT ASSIGNMENT 01 Study material: Chapters 9, and 18. You may skip sections 9.3, and 9.4. You only need to study 18.1, 18.2, and 18.3. Question 1 Convert the following First-Order Logic (FOL) sentence to clause form: 8y (8x P(x) ) 9x (8z Q(x, z) _ 8z R(x, y, z))) \u000f Eliminate implication: 8y (:8x P(x) _ 9x (8z Q(x, z) _ 8z R(x, y, z))) \u000f Move : inwards 8y (9x :P(x) _ 9x (8z Q(x, z) _ 8z R(x, y, z))) \u000f Standardize variables: The variable name x is used in the scope of two different quantiﬁers, so we change the name of one of them to avoid confusion when we drop the quantiﬁers. The same applies for the variable name z. 8y (9x :P(x) _ 9u (8z Q(u, z) _ 8v R(u, y, v ))) Note that the scope of (8z) is the predicate Q(u, z), and the scope of (8v ) is the predicate R(u, y, v ). On the other hand, the scope of (8y) is the whole formula. \u000f Skolemize 8y (:P(f (y)) _ (8z Q(g(y), z) _ 8v R(g(y), y, v ))) Here f and g are Skolem functions, and their arguments are all the universally quantiﬁed variables in whose scope the existential quantiﬁer appears. In this case, 9u appears only in the scope of 8y. Note that the same variable u appears twice in the sentence, so we replace each occurrence of u with g(y ). \u000f Drop universal quantiﬁers: At this point, all remaining variables are universally quantiﬁed. Moreover, the sentence is equivalent to one in which all the universal quantiﬁers have been moved to the left: 8y, z, v (:P(f (y)) _ (Q(g(y), z) _ R(g(y), y, v ))) We can therefore drop the universal quantiﬁers: :P(f (y)) _ Q(g(y), z) _ R(g(y), y, v ) The sentence is now in CNF and it has only one conjunct (one clause) consisting of a disjunction of three literals. Question 2 Consider the following English statements: a. Anyone who passes their history exam and who wins the lottery is happy. b. Anyone who studies or is lucky can pass their exams. 2 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 c. John did not study. d. John is lucky. e. Anyone who is lucky wins the lottery. (2.1) Provide a vocabulary for the statements. Pass(p, s): Predicate. Person p passes subject s. Win(p, g): Predicate. Person p wins game g. Happy(p): Predicate. Person p is happy. Study(p): Predicate. Person p studies. Lucky(p): Predicate. Person p is lucky. History: Constant denoting a subject. Lottery: Constant denoting a game. John: Constant denoting a person. (2.2) Translate the above English sentences to FOL statements using the vocabulary you deﬁned above. a. 8p ((Pass(p, History) ^ Win(p, Lottery)) ) Happy(p)) b. 8q, r ((Study(q) _ Lucky(q)) ) Pass(q, r )) c. :Study (John) d. Lucky(John) e. 8s (Lucky (s) ) Win(s, Lottery)) It is important to standardize the variables (to use different variable names) to avoid confusion when dropping the universal quantiﬁers. (2.3) Convert the FOL statements obtained in 2.2 into clause form. a. 8p ((Pass(p, History) ^ Win(p, Lottery)) ) Happy(p)) \u0011 8p (:(Pass(p, History) ^ Win(p, Lottery)) _ Happy(p)) \u0011 8p (:Pass(p, History ) _ :Win(p, Lottery) _ Happy(p)) b. 8q, r ((Study(q) _ Lucky(q)) ) Pass(q, r )) \u0011 8q, r (:(Study (q) _ Lucky(q)) _ Pass(q, r )) \u0011 8q, r ((:Study (q) ^ :Lucky(q)) _ Pass(q, r )) \u0011 (:Study (q) ^ :Lucky (q)) _ Pass(q, r ) But we have to use the distributivity of disjunction, otherwise it is not in clause form! \u0011 (:Study (q) _ Pass(q, r )) ^ (:Lucky(q) _ Pass(q, r )) So this sentence is represented by two clauses. c. No conversion required. d. No conversion required. 3 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace e. 8s (Lucky (s) ) Win(s, Lottery)) \u0011 :Lucky (s) _ Win(s, Lottery) We thus end up with the following clauses: 1. :Pass(p, History ) _ :Win(p, Lottery) _ Happy(p) 2. :Study (q) _ Pass(q, r ) 3. :Lucky(q) _ Pass(q, r ) 4. :Study (John) 5. Lucky(John) 6. :Lucky(s) _ Win(s, Lottery) Note that universal quantiﬁers have been dropped because all variables were uni- versally quantiﬁed. Skolem functions are only introduced only to remove existential quantiﬁers. (See section 9.5 of R&N.) (2.4) Use resolution refutation to prove that John is happy. In order to use resolution refutation, we negate the goal, convert the negated goal to clause form (if necessary), and add the resulting clause(s) to the set of premises. Make sure you understand why this approach works by reviewing the ground resolution theorom. Also review section 7.5: remember that \u000b j= \f iff (\u000b ^ :\f) is unsatisﬁable. In this case, the goal is Happy(John). So the negation of the goal is :Happy(John). We can now resolve the premises (clauses 1 to 6 in Question 2.3 above) together with the negated goal until the empty clause (Nil) is generated. 1. :Pass(p, History ) _ :Win(p, Lottery) _ Happy (p) assumption 2. :Study (q) _ Pass(q, r ) assumption 3. :Lucky(q) _ Pass(q, r ) assumption 4. :Study (John) assumption 5. Lucky(John) assumption 6. :Lucky(s) _ Win(s, Lottery) assumption 7. :Happy(John) negation of goal 8. :Win(p, Lottery) _ Happy(p) _ :Lucky(p) 1&3, fp/qg, fHistory/rg 9. :Win(John, Lottery) _ Happy(John) 5&8, fJohn/pg 10. :Win(John, Lottery) 9&7 11. Win(John, Lottery) 5&6, fJohn/wg 12. ; 10&11 4 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 We have shown that the negation of the goal together with the premises (all in clause form) produce a contradiction (empty clause). Therefore the goal Happy(John), which translates to ‘John is happy’, is a logical consequence of the other sentences. It is important to show which clauses form part of the resolution to produce the resol- vent. You must also always show the substitutions. Remember: Given a fact with a constant, one cannot simply replace the constant with a variable to derive a new (general) statement. For example, suppose we add Carol to the list of persons in the vocabulary for the above problem. We cannot derive Lucky(x) fx=Johng, and then Lucky(Carol) fCarol=xg Question 3 (3.1) Convert the Boolean function in Table 1 into a decision tree: x1 x2 x3 f(x1, x2, x3) 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 Table 1: Boolean function table No information gain values were given, so it becomes a matter of picking the sequence in which the variables are to be evaluated. The next step would be to simplify the decision tree by consolidating equivalent leaf nodes. Variable order x1, x2, x3: x1 x2 x3 1 0 0 1 0 x3 1 0 1 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 This can be simpliﬁed to: 5 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace x1 x2 x3 1 0 0 1 0 1 1 0 x2 x3 1 0 0 1 0 x3 0 0 1 1 1 1 Variable order x1, x3, x2: x1 x3 1 0 x2 0 0 1 1 1 0 x3 x2 1 0 0 1 0 x2 0 0 1 1 1 1 Variable order x2, x1, x3: x2 x3 x2 1 0 0 1 0 x2 1 0 0 1 1 0 x3 1 00 x2 0 0 1 1 1 1 Variable order x2, x3, x1: 6 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 x2 x3 1 0 0 1 0 x3 x1 1 0 0 1 0 1 1 1 Variable order x3, x2, x1: x3 x2 1 0 x1 1 0 0 1 1 0 x2 0 0 1 1 1 Variable order x3, x1, x2: x3 x1 1 0 x2 1 0 0 1 1 0 x1 x2 0 0 1 1 0 x2 0 0 1 1 1 1 7 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace (3.2) When we construct a decision tree without the beneﬁt of gain values, the order in which we evaluate the variables is important. Why? It may be possible to consolidate leaf nodes with similar values to produce a smaller, more compact tree. Question 4 The National Credit Act introduced in South Africa in 2007 places more responsibility on a bank to determine whether the loan applicant will be able to afford it. Blue Bank has a table of information on 14 loan applications they have received in the past. Use the information in this table to construct a decision tree that will assist the bank in determining the risk associated with a new loan application. No. Credit history Debt Collateral Income Risk 1 Bad High No < R15k High 2 unknown High No R15k - R35k High 3 unknown Low No R15k - R35k Medium 4 unknown Low No < R15k High 5 unknown Low No > R35k Low 6 unknown Low Yes > R35k Low 7 Bad Low No < R15k High 8 Bad Low Yes > R35k Medium 9 Good Low No > R35k Low 10 Good High Yes > R35k Low 11 Good High No < R15k High 12 Good High No R15k - R35k Medium 13 Good High No > R35k Low 14 Bad High No R15k - R35k High Table 2: Risk information table In order to determine the information gain of any different attributes of a certain collection of data, the calculation of entropy is important the notion of information gain is deﬁned in terms of entropy. Entropy can be described as a measure of impurity of an arbitrary collection of examples. Russell & Norvig describe entropy as a measure of the uncertainty of a random variable, and mention that the acquisition of information corresponds to a reduction in entropy. Namely a random variable with only one value has no uncertainty and thus its entropy is deﬁned as zero; thus we gain no information by observing its value. For any attribute A, if no information can be gained regarding the decision from attribute A, then the entropy of attribute A is equal to 0. If all the members of a class are split equally by any attribute A, then the entropy of A is 1. For any collection S the maximum entropy value is 1. Formally, the entropy of a random variable V with value vk , each with probability P(vk ) is deﬁned as: H(V ) = nX k=1 \u0000P(vk )log2 1 P(vk ) = \u0000 nX k=1 P(vk )log2 1 P(vk ) (1) 8 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 Maybe a more comprehensible way of deﬁning the entropy of any collection S is as follows: Entropy(S) = \u0000 cX i=1 pilog2(pi) (2) This corresponds to what Russell & Norvig refer to as information content. If the possible answers vi have probabilities P(vi) then the information content I of the actual answer is given by: I(P(v1), ... , P(vn)) = nX i=1 \u0000P(vi)log2P(vi) (3) You may see the negative as a way of making the values of pilog2(pi) positive because all pi < 1, i.e. each represents a probability of the sample set. In what follows we will use the ID3 algorithm to develop our decision tree. Our collection of 14 examples S, has four meaningful attributes (Credit History, Debt, Collateral, Income), and a 3-wise classiﬁcation (Low, Medium, High). Since there are no repeat values in the No. attribute it plays no role in the classiﬁcation and can be ignored (although we will show the No. attribute in further tables so that we know which examples we are working with). For purposes of clarity in the formulae, we will shorten the attribute labels and values as follows: \u000f Credit History = CH \u000f Debt = D \u000f Collateral = C \u000f Income = I \u000f Bad = B \u000f Unknown = U \u000f Good = G \u000f High = H \u000f Low = L \u000f <R15K = 15K \u000f R15K-R35K = 15K-35K \u000f >R35K = 35K \u000f Medium = M We will also not be repeating calculations at every step: we show the full set of calculations for the ﬁrst level of the tree, after that we will only show the ﬁnal result of the calculation. Summarise the example set, S = f1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14g, as: S = [5L, 3M, 6H] We start by calculating the Entropy for our set of examples: 9 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Entropy(S) = 3X i=1 \u0000pilog2pi = \u0000( 5 14)log2( 5 14 ) \u0000 ( 3 14 )log2( 3 14) \u0000 ( 6 14)log2( 6 14 ) = \u0000( 5 14)(log25 \u0000 log214) \u0000 ( 3 14 )(log23 \u0000 log214) \u0000 ( 6 14 )(log26 \u0000 log214) = \u0000( 5 14) \u0012 log5 log2 \u0000 log14 log2 \u0013 \u0000 ( 3 14) \u0012 log3 log2 \u0000 log14 log2 \u0013 \u0000 ( 6 14) \u0012 log6 log2 \u0000 log14 log2 \u0013 = 0.531 + 0.476 + 0.524 = 1.531(max = 1.585) We have to determine the information gain (IG) of the different attributes in order to select the best choice for the root node. The information gain measures the expected reduction of entropy – the higher the IG, the higher the expectation of reduction of entropy. In what follows we calculate the information gain for each of the four attributes. Credit History: Values (CH ) = B, G, U S = [5L, 3M, 6H] SB [0L, 1M, 3H] SG [3L, 1M, 1H] SU [2L, 1M, 2H] Entropy(SB) = \u0000(0 4 )log2( 0 4) \u0000 ( 1 4)log2(1 4 ) \u0000 (3 4 )log2( 3 4) = 0.811 Entropy(SG) = \u0000( 3 5)log2(3 5 ) \u0000 (1 5 )log2( 1 5) \u0000 ( 1 5)log2(1 5 ) = 1.371 Entropy(SU) = \u0000( 2 5 )log2( 2 5) \u0000 (1 5 )log2( 1 5) \u0000 ( 2 5)log2(2 5 ) = 1.522 Gain(S, CH) = Entropy(S) \u0000 X v 2Values(A) jSv j jSj Entropy(Sv ) = Entropy(S) \u0000 ( 4 14 )Entropy(SB) \u0000 ( 5 14 )Entropy(SG) \u0000 ( 5 14 )Entropy(SU) = 1.531 \u0000 ( 4 14 )0.811 \u0000 ( 5 14 )1.371 \u0000 ( 5 14)1.522 = 0.266 10 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 Debt: Values(D) = L, H S = [5L, 3M, 6H] SL [3L, 2M, 2H] SH [2L, 1M, 4H] Entropy(SL) = \u0000( 3 7)log2(3 7 ) \u0000 ( 2 7 )log2( 2 7) \u0000 (2 7 )log2( 2 7 ) = 1.557 Entropy(SH) = \u0000( 2 7)log2(2 7 ) \u0000 (1 7 )log2( 1 7) \u0000 ( 4 7)log2(4 7 ) = 1.379 Gain(S, D) = Entropy(S) \u0000 ( 7 14)Entropy(SL) \u0000 ( 7 14 )Entropy(SH) = 1.531 \u0000 ( 7 14 )1.557 \u0000 ( 7 14)1.379 = 0.063 Collateral: Values (C) = Y,N S = [5L, 3M, 6H] SY [2L, 1M, 0H] SN [3L, 2M, 6H] Entropy(SY ) = \u0000( 2 3)log2(2 3 ) \u0000 (1 3 )log2( 1 3) \u0000 ( 0 3)log2(0 3 ) = 0.918 Entropy(SN) = \u0000( 3 11)log2( 3 11 ) \u0000 ( 2 11 )log2( 2 11) \u0000 ( 6 11)log2( 6 11 ) = 1.435 Gain(S, C) = Entropy(S) \u0000 ( 3 14 )Entropy(SY ) \u0000 ( 11 14)Entropy(SN) = 1.531 \u0000 ( 3 14)0.918 \u0000 ( 11 14)1.435 = 0.207 Income: Values (I ) = 15 , 15-35, 35 S = [5L, 3M, 6H] 11 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace S15 [0L, 0M, 4H] S15\u000035 [0L, 2M, 2H] S35 [5L, 1M, 0H] Entropy(S15) = \u0000(0 4 )log2( 0 4) \u0000 ( 0 4)log2(0 4 ) \u0000 (4 4 )log2( 4 4) = 0 Entropy(S15\u000035) = \u0000( 0 4)log2(0 4 ) \u0000 (2 4 )log2( 2 4) \u0000 ( 2 4)log2(2 4 ) = 1 Entropy(S35) = (5 6 )log2( 5 6) \u0000 (1 6 )log2( 1 6 ) \u0000 ( 0 6)log2(0 6 ) = 0.650 Gain(S, I) = Entropy(S) \u0000 ( 4 14)Entropy(S15) \u0000 ( 4 14 )Entropy(S15\u000035) \u0000 ( 6 14 )Entropy(S35) = 1.531 \u0000 ( 4 14 )0 \u0000 ( 4 14 )1 \u0000 ( 6 14)0.650 = 0.967 Attribute Income provides the highest information gain (0.967), i.e. the best prediction for our target attribute, Risk. Income becomes the root node of our decision tree. Income < 15K 15K \u0000 35K > 35K The ID3 algorithm now performs a recursion with the three subsets of our examples, based on the three possible values of the Income attribute (<R15K, R15K-R35K, >R35K). The ﬁrst subset, corresponding to Income = f< R15K g, is: No. Credit History Debt Collateral Income Risk 1 Bad High No < R15k High 4 Unknown Low No < R15k High 7 Bad Low No < R15k High 11 Good High No < R15k High We notice that the target attribute is the same for all four of our examples, i.e. all four examples produce the same target value, High. We have our ﬁrst leaf node, labelled High. 12 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 Income High < 15K 15K \u0000 35K > 35K The second subset, corresponding to Income = fR15K \u0000 R35K g, is: No. Credit History Debt Collateral Income Risk 2 Unknown High No R15K-R35K High 3 Unknown Low No R15K-R35K Medium 12 Good High No R15K-R35K Medium 14 Bad High No R15K-R35K High Our subset collection of 4 examples S, has three meaningful attributes (Credit History, Debt, Col- lateral), and a binary classiﬁcation (Medium, High): S15K \u000035K = f2, 3, 12, 14g = [2M, 2H]. We start by calculating the Entropy for this subset: Entropy(S15K \u000035K ) = 2X i=1 \u0000pilog2pi = \u0000(2 4 )log2( 2 4) \u0000 ( 2 4)log2(2 4 ) = 0.5 + 0.5 = 1 Calculate the information gain for the attributes of the subset (entropy for each attribute is calculated in the same fashion as above). Credit History: Gain(S15K \u000035K , CH) = Entropy(S15K \u000035K ) \u0000 ( 1 4 )Entropy(SB) \u0000 (1 4 )Entropy(SG) \u0000 (2 4 )Entropy(SU) = 1 \u0000 (1 4 )0 \u0000 ( 1 4)0 \u0000 ( 2 4)1 = 0.5 Debt: Gain(S15K \u000035K , D) = Entropy(S15K \u000035K ) \u0000 (1 4 )Entropy(SL) \u0000 ( 3 4)Entropy(SH) = 1 \u0000 ( 1 4)0 \u0000 ( 3 4)0.918 = 0.312 13 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Collateral: Gain(S15K \u000035K , C) = Entropy(S15K \u000035K ) \u0000 ( 0 4)Entropy(SY ) \u0000 (4 4 )Entropy(SN) = 1 \u0000 (0 4 )0 \u0000 (4 4 )1 = 0 Attribute Credit History provides the highest Information Gain in this subset (0.5). Thus it becomes our next decision node. Income High < 15K Credit History Bad Good Unknown 15K \u0000 35K > 35K The third subset, corresponding to Income = f> R35kg, is then used. No. Credit History Debt Collateral Income Risk 5 Unknown Low No >R35K Low 6 Unknown Low Yes >R35K Low 8 Bad Low Yes >R35K Medium 9 Good Low No >R35K Low 10 Good High Yes >R35K Low 13 Good High No >R35K Low Our subset collection of 6 examples S, has three meaningful attributes (Credit History, Debt, Col- lateral), and a binary classiﬁcation (Low, Medium): S35K = f5, 6, 8, 9, 10, 13g = [5L, 1M] Start by calculating the Entropy for this subset: Entropy(S35K ) = 2X i=1 \u0000pi log2pi = \u0000( 5 6) log2 (5 6 ) \u0000 (1 6 ) log2 ( 1 6) = 0.65 14 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 We now proceed to calculate the information gain for each of the three attributes in the subset: Credit History: Values(CH) = B, G, U S35K = [5L, 1M] SB [0L, 1M] SG [3L, 0M] SU [2L, 0M] Entropy(SB) = \u0000( 0 1)log2(0 1 ) \u0000 (1 1 )log2( 1 1) = 0 Entropy(SG) = \u0000( 3 3)log2(3 3 ) \u0000 (0 3 )log2( 0 3) = 0 Entropy(SU) = \u0000( 2 2)log2(2 2 ) \u0000 (0 2 )log2( 0 2) = = 0 Gain(S35K , CH) = Entropy(S35K ) \u0000 ( 1 6)Entropy(SB) \u0000 (3 6 )Entropy(SG) \u0000 (2 6 )Entropy(SH) = 0.65 \u0000 ( 1 6)0 \u0000 (3 6 )0 \u0000 (2 6 )0 = 0.65 Debt: Values(D) = L, H S35K = [5L, 1M] SL [5L, 1M] SH [2L, 0M] 15 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Entropy(SL) = \u0000( 3 4)log2( 3 4 ) \u0000 ( 1 4)log2(1 4 ) = 0.811 Entropy(SG) = \u0000(2 2)log2( 2 2 ) \u0000 ( 0 2)log2(0 2 ) = 0 Gain(S35K , D) = Entropy(S35K ) \u0000 (4 6 )Entropy(SL) \u0000 ( 2 6)Entropy(SH) = 0.65 \u0000 (4 6 )0.811 \u0000 ( 2 6)0 = 0.109 Collateral: Values(D) = Y , N S35K = [5L, 1M] SY [2L, 1M] SN [3L, 0M] Entropy(SL) = \u0000(2 3 )log2( 2 3) \u0000 ( 1 3)log2(1 3 ) = 0.918 Entropy(SG) = \u0000(3 3 )log2( 3 3) \u0000 ( 0 3)log2(0 3 ) = 0 Gain(S35K , D) = Entropy(S35K ) \u0000 (3 6 )Entropy(SY ) \u0000 ( 3 6)Entropy(SN) = 0.65 \u0000 ( 3 6 )0.918 \u0000 (3 6 )0 = 0.191 In summary: Gain(S35K , CH) = 0.65 Gain(S35K , D) = 0.109 Gain(S35K , Collateral) = 0.191 Attribute Credit History provides the highest Information Gain in this subset and becomes the decision node on this branch of the decision tree. 16 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 Income High < 15K Credit History Bad Good Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K The algorithm continues with recursion to the next level. The subset of Credit History that corre- sponds to the Income = R15K-R35K and Credit History = Bad provides a single example (14). No. Credit History Debt Collateral Income Risk 14 Bad High No R15K-R35K High We have a single example, hence another leaf node: High. Income High < 15K Credit History High Bad Good Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = Good is also a single example (12). No. Credit History Debt Collateral Income Risk 14 Bad High No R15K-R35K High We have a single example, hence another leaf node: Medium. 17 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income High < 15K Credit History High Bad Medium Good Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K The subset of Credit History that corresponds to the Income = R15K-R35K and Credit History = Unknown has two examples (2,3). No. Credit History Debt Collateral Income Risk 2 Unknown High No R15K-R35K High 3 Unknown Low No R15K-R35K Medium Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a bi- nary classiﬁcation (Medium, High shortened for clarity to M,H): SUnknown = f2, 3g = [1M, 1H]. We again calculate the entropy for the subset: Entropy(S) = \u0000( 1 2)log2( 1 2 ) \u0000 ( 1 2)log2(1 2 ) = 1 Debt Values(D) = L, H SUnknown = [1L, 1M] SL [2L, 1M] SH [3L, 0M] 18 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 Entropy(SL) = \u0000( 1 1)log2( 1 1 ) \u0000 ( 0 1)log2(0 1 ) = 0 Entropy(SH) = \u0000(0 1)log2( 0 1 ) \u0000 ( 1 1)log2(1 1 ) = 0 Gain(SUnknown, D) = Entropy(SUnknown) \u0000 (1 2 )Entropy(SL) \u0000 ( 1 2 )Entropy(SH) = 1 \u0000 ( 1 2)0.918 \u0000 (1 2 )0 = 1 Collateral Values(D) = N SUnknown = [1M, 1H] SN [1M, 1H] Entropy(SN) = \u0000( 1 2)log2(1 2 ) \u0000 (1 2 )log2( 1 2) = 1 Gain(SUnknown, C) = Entropy(SUnknown) \u0000 (2 2 )Entropy(SN) = 1 \u0000 (2 2 )1 = 0 In summary: Gain(SUnknown, D) = 1 Gain(SUnknown, Collateral) = 0 Debt gives us perfect information gain, and thus becomes the next decision node. 19 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income High < 15K Credit History High Bad Medium Good Debt High Low Unknown 15K \u0000 35K Credit History Bad Good Unknown > 35K We return to credit history (we ﬁrst ﬁnish all the nodes on the same level). The subset of Credit History that corresponds to the Income = ¿R35K and Credit History = Bad contains only 1 example (8). No. Credit History Debt Collateral Income Risk 8 Bad Low Yes >R35K Medium We thus have another leaf node: Medium. Income High < 15K Credit History High Bad Medium Good Debt High Low Unknown 15K \u0000 35K Credit History Medium Bad Good Unknown > 35K 20 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 The subset of Credit History that corresponds to Income = >R35K and Credit History = Good provides three examples (9,10,13): No. Credit History Debt Collateral Income Risk 9 Good Low No >R35K Low 10 Good High Yes >R35K Low 13 Good High No >R35K Low Our subset collection of 3 examples S, has two meaningful attributes (Debt, Collateral), and a sin- gle classiﬁcation (Low). Hence we again have a leaf node Low. Income High < 15K Credit History High Bad Medium Good Debt High Low Unknown 15K \u0000 35K Credit History Medium Bad Low Good Unknown > 35K The subset of Credit History that corresponds to the Income = >R35K and Credit History = Un- known is provides 2 examples (5,6). No. Credit History Debt Collateral Income Risk 5 Unknown Low No >R35K Low 6 Unknown Low Yes >R35K Low Our subset collection of 2 examples S, has two meaningful attributes (Debt, Collateral), and a sin- gle classiﬁcation (Low). Hence we again have a leaf node Low. 21 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace Income High < 15K Credit History High Bad Medium Good Debt High Low Unknown 15K \u0000 35K Credit History Medium Bad Low Good Low Unknown > 35K We can now do the last set of calculations. With Debt = High we have only one example left (2), which makes this a leaf node. No. Credit History Debt Collateral Income Risk 2 Unknown High No R15K-R35K High Similarly, when Debt = Low we have one example left (3). This creates the ﬁnal leaf node. No. Credit History Debt Collateral Income Risk 3 Unknown Low No R15K-R35K Medium These last two steps complete our decision tree (note that Collateral plays no role in the decision based on this decision tree). 22 Stuvia.com - The study-notes marketplace Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year? Stuvia.com - The study-notes marketplace COS3751/203/2/2018 Income High < 15K Credit History High Bad Medium Good Debt High High Medium Low Unknown 15K \u0000 35K Credit History Medium Bad Low Good Low Unknown > 35K Copyright c\rUNISA 2018 (v2018.2.1) 23 Powered by TCPDF (www.tcpdf.org) Downloaded by: stuvia7feva | stuvia.7feva@simplelogin.com Distribution of this document is illegal Want to earn R13,625 per year?","libVersion":"0.2.3","langs":""}