{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Telegram Notes/Materials/notes QA.pdf","text":"Adversarial SearchesHow should we express the minimaxvalue of a node when using alpha-beta pruning? W VAN STADEN, 2013-09-20 10:40, Views: 48, Answers: 1, Question Id: 117693 You can use the value that would be returned by that node once the algorithm finishes with it. That is, the value that a node will return to it's parent. (This basically means the alpha value for max nodes, and the beta value for min nodes.) Also, please keep in mind that the questions may ask you to ignore alpha/beta and simply write down the minimax values -- you then a simply apply the minimax for each node as per the classic minimax search and provide that. • 2013-09-02 11:04 The alpha-beta pruning algorithm in our textbook and the one in the video is not the same. Which one should I use? W VAN STADEN, 2013-09-20 10:40, Views: 37, Answers: 1, Question Id: 117695 You may use either. The marking schemes accept the answers from either algorithm's calculations. 2013-09-02 11:03 Why is the backed up value of node X (1, 2, 6). From the way I understand it, node X is a maximizer and the backed up values would be (4, 2, 6). (Page 166, Figure 5) W VAN STADEN, 2013-09-20 10:40, Views: 46, Answers: 1, Question Id: 117697 The Node marked X is a maximizer for player C -- thus player C has to choose the move that maximizes its utility value for the game based on the vector of utility values associated with each state. C can make one of two moves, the first has a utility value of (1,2,6) and the other has a utility value of (4,2,3). C chooses the maximum utility for itself (the state where the 3rd component of the vector is 6 is preferred over the state where the 3rd component is 3). 2013-08-28 12:44 Could you please give an example of: Write down the order in which the nodes are expanded (and not generated)? S BINDHA, 2013-09-20 10:40, Views: 32, Answers: 1, Question Id: 117699 To answer a question such as this, one has to understand what the difference between expanding and generating is. Expansion: when you take a node from the frontier and do something with it. Generating: when you generate new nodes to put on the frontier (typically when 'doing something' with a node, you will generate nodes to place on the frontier. You may also be testing for goal nodes, depending on the type of search you are doing...) So, let's think breadth first search as an example. Suppose you are a binary tree (and you're working from left to right): A / \\ B C / \\ / \\ D E F G Order of expansion (order in which nodes are taken from the frontier): A, B, C, D, E, F, G (breadth first will examine all the nodes on a level and then move to the next level). Order of generation: A, B, C, D, E, F, G So, A is generated, then A is expanded (which generates B and C; then B is expanded which generates D and E, then C is expanded which generates F and G, then D is expanded which generates nothing, then E, then F, then G are expanded -- none of them generate anything Let's do a depth-frist: Expansion: A, B, D, E, C, F, G Generation: A, B, C, D, E, F, G So, A is generated. Then A is expanded, which generates B and C, then B is expanded which generates D and E, then D is expanded, which generates nothing, then E is expanded; now C is expanded, which generates F and G, then F and G are expanded in that order, both of which generate no nodes. • 2013-09-20 10:39 On page 161 of the textbook, it says that games, like chess, are deterministic. I would have said that a game like chess is stochastic, because you don't know what move your opponent is going to make, so you don't know what state the world is going to be in after you've made your move. Is this dilemma dissolved on the very next page, or did I miss something? D PIENAAR, 2013-09-20 10:40, Views: 48, Answers: 1, Question Id: 117701 An environment is deterministic if the next state can be determined completely (with certainty of 100%) when aplying an action to the current state. For chess, if it is my turn to move, and I decide on a move, I can determine exactly what the next state will be (the state in which the board reflects the move I just made). Stochastic means we are uncertain about the outcome of my move (my action), if we modify chess to have cranky rooks (which are sullen and may, with some probability, refuse to move), and we move a rook (my action), then the rook *may* move where we intended. It may also run to the corner and sulk. Meaning there is some element of chance that we end up in a particular state, but there is also a chance that we end up in another state. 2013-08-28 15:03","libVersion":"0.2.3","langs":""}