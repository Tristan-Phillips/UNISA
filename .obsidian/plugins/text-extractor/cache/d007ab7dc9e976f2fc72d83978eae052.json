{"path":"UNISA/98906 - BSc Science in Computing/COS1511 - Introduction to Programming I/Unsorted/COS1511-Exam-pack.pdf","text":"SECTION A 20 MARKS (10 MULTIPLE CHOICE QUESTIONS, 2 marks each) Please answer this section on the mark-reading sheet that you received (not in your answer book). Choose one option for every question. QUESTION 1 Suppose the following declarations appear in a C++ program: float amount, forWaiter; char service; If the following function header is given: float tip(float amountP, char serviceP) which of the options below is a correct calling statement of the function tip? 1. forWaiter = tip(float amount, char service); 2. tip(amountP, serviceP); 3. forWaiter = tip(123.66, 'A'); 4. forWaiter = tip(amountP, serviceP); 5. None of the above options is a correct calling statement. QUESTION 2 Suppose the following declarations appear in a C++ program: float afford, amount; int number; string name; If the following function header is given: void supplyInfo(float affordP, int nrP, string & nameP, float & amountP) which of the options below is a correct calling statement of the function supplyInfo? 1. supplyInfo(800, 4, \"Beach Hotel\", 789); 2. supplyInfo(800, 4, name, amount); 3. supplyInfo(affordP, nrP, nameP, amountP); 4. supplyInfo(afford, number, \"Beach Hotel\", 789); 5. None of the above options is a correct calling statement. COS111U May 2009 [TURN OVER] 2 QUESTION 3 Suppose the following declarations appear in a C++ program: int age, days; char grade; float salary; Suppose the following calling statement appears in the program: inputInfo(35, 'B', salary, days); Which of the options below is a correct function header of the function inputInfo? 1. void inputInfo(int ageP, char gradeP, float & salaryP, int & daysP) 2. void inputInfo(35, 'B', float salaryP, int daysP) 3. void inputInfo(int & age, char & grade, float & salary, int & days) 4. void inputInfo(35, 'B', salary, days) 5. All of the above options are correct function headers. Questions 4 and 5 are based on the following C++ program. #include <iostream> #include <string> using namespace std; int main( ) { string favour; int tvHours, favourHours; cout << \"How many hours per week do you watch sport on TV, \" << endl << \"what is your favourite sport, how many hours for that? \"; cin >> tvHours >> favour >> favourHours; if (tvHours > 10) if (favour == \"soccer\") { if (favourHours > tvHours / 2) cout << \"Group A\" << endl; } else if (favourHours > tvHours / 4) cout << \"Group B\" << endl; else cout << \"Group C\" << endl; else if (favour != \"rugby\") cout << \"Group D\" << endl; return 0; COS111U May 2009 [TURN OVER] 3 } QUESTION 4 Suppose the program above is executed with the following input: 11 soccer 5 Which of the options below gives the output of the program? 1. Group A 2. Group B 3. Group C 4. Group D 5. No output QUESTION 5 Suppose the following input is given to the program above: 6 soccer 6 Which of the options below gives the output of the program? 1. Group A 2. Group B 3. Group C 4. Group D 5. No output QUESTION 6 Suppose in a C++ program values are assigned to a string variable name and to a float variable amount. Then a while loop is entered. The loop has to be executed as long as • name is not equal to \"NOBODY\" and • amount is not less than 10.00. Which of the options below gives a correct condition for the loop? 1. ((name != \"NOBODY\") && (amount >= 10.00)) 2. ((name != \"NOBODY\") || (amount >= 10.00)) 3. (!(name == \"NOBODY\") && (amount < 10.00)) 4. (!((name != \"NOBODY\") && (amount >= 10.00))) 5. None of the options above is a correct condition. QUESTION 7 Suppose we want to assign the value true to a bool variable success if • the value of the int variable grade is 10 or higher and COS111U May 2009 [TURN OVER] 4 • the value of the char variable sym is 'A' or 'B' or 'C'. Which of the options below gives a correct assignment statement? 1. success = (grade >= 10) || sym == 'A' || sym == 'B' || sym == 'C'; 2. success = (grade >= 10) || (sym == 'A' || 'B' || 'C'); 3. success = (grade >= 10) && (sym == 'A' || sym == 'B' || sym == 'C'); 4. success = (grade >= 10) && sym == 'A' && sym == 'B' && sym == 'C'; 5. None of the options above is a correct assignment statement. Questions 8, 9 and 10 are based on the following C++ program. Note that the conventions as explained in the Study Guide are used in the variable diagrams. 1 #include <iostream> 2 #include <string> 3 using namespace std; 4 void supplyInfo(string destP, float & feeP, string & timeP) 5 { 6 if (destP != \"Cape Town\" && feeP != 40) 7 feeP *= 3; 8 else if (destP != \"Johannesburg\") 9 { 10 destP = \"Funny\"; 11 feeP = 1; 12 } 13 timeP = \"17:15\"; 14 if (destP != \"Funny\") 15 timeP = \"10:23\"; 16 else 17 timeP = \"Fun\"; 18 } 19 float amountDue(int nrA, int nrC, float feeP) 20 { 21 float total; 22 total = nrA * feeP; 23 feeP *= 0.80; 24 total += nrC * feeP; 25 return total; 26 } 27 int main( ) 28 { 29 string destination, time; 30 int nrAdult, nrChild; 31 float fee, amount; 32 destination = \"P.E.\"; COS111U May 2009 [TURN OVER] 5 33 fee = 40; 34 supplyInfo(destination, fee, time); 34 nrAdult = 4; 35 nrChild = 5; 36 amount = amountDue(nrAdult, nrChild, fee); 37 cout << \"Time: \" << time << \" Due: R\" << amount << endl; 38 return 0; 39 } QUESTION 8 Which of the options below correctly reflects the situation after Line 33 has been executed? Option 1 Line 33 destination fee time \"P.E.\" 40 ? destP feeP timeP \"P.E.\" 40 ? nrAdult nrChild amount ? ? ? Option 2 Line 33 destination | [destP] fee | [feeP] time | [timeP] \"P.E.\" 40 ? [nrAdult] [nrChild] [amount] ? ? ? Option 3 Line 33 [destination] | destP [fee] | feeP [time] | timeP \"P.E.\" 40 ? [nrAdult] [nrChild] [amount] ? ? ? Option 4 Line 33 destination fee time \"P.E.\" 40 ? nrAdult nrChild amount ? ? ? Option 5 Line 33 None of the above options is correct. COS111U May 2009 [TURN OVER] 6 QUESTION 9 Which of the options below correctly reflects the situation after Line 24 has been executed? Option 1 Line 24 [destination] [fee] | feeP [time] \"Funny\" 0.8 \"Fun\" [nrAdult] | nrA [nrChild] | nrC [amount] | total 4 5 8 Option 2 Line 24 [destination] [fee] [time] \"P.E.\" 1 \"Fun\" [nrAdult] [nrChild] [amount] 4 5 ? nrA nrC feeP total 4 5 0.8 8 Option 3 Line 24 [destination] [fee] | feeP [time] \"P.E.\" 96 \"10:23\" [nrAdult] | nrA [nrChild] | nrC [amount] | total 4 5 960 Option 4 Line 24 [destination] [fee] [time] \"P.E.\" 120 \"10:23\" [nrAdult] [nrChild] [amount] 4 5 ? nrA nrC feeP total 4 5 96 960 Option 5 Line 24 None of the above options is correct. COS111U May 2009 [TURN OVER] 7 QUESTION 10 Which of the options below correctly reflects the situation after Line 37 has been executed? Option 1 Line 37 destination fee time \"P.E.\" 40 \"10:23\" nrAdult nrChild amount 4 5 960 Option 2 Line 37 destination fee time \"P.E.\" 96 \"10:23\" nrAdult nrChild amount 4 5 960 Option 3 Line 37 destination fee time \"Funny\" 1 \"Fun\" nrAdult nrChild amount 4 5 8 Option 4 Line 37 destination fee time \"Funny\" 0.8 \"Fun\" nrAdult nrChild amount 4 5 8 Option 5 Line 37 None of the above options is correct. COS111U May 2009 [TURN OVER] 8 SECTION B (80 MARKS) Please answer this section in your answer book. QUESTION 1 [12] A bookshop gives discount to customers as follows: • Students get 10% discount, • book dealers get 12% discount and • pensioners get 15% discount. • All other customers get 10% discount only if their total purchases are more than R200. Write down ONLY the necessary C++ statements to calculate and display the final amount that is due, after discount. Do NOT write a complete program. Use the following variables: float amount; // the amount due before discount char customerType; // the type of customer: 'S' (student) or // 'D' (dealer) or 'P' (pensioner) or 'O'(other) Assume that values have been assigned to amount and customerType already. You may also need the following variables: float discount, finalAmount; QUESTION 2 [10] A bank offers a fixed composite interest rate of 12% per year on money that is invested. Thus if you invest R100, it will be worth R112 at the end of the first year; and then R112 + (12% of R112) at the end of the second year, etc. Complete the C++ program below to determine the number of years needed for an initial investment of R1000 to become worth more than R3000. Use an appropriate loop structure. Do not introduce any additional variables. Write down ONLY the missing statements. COS111U May 2009 [TURN OVER] 9 #include <iostream> using namespace std; int main( ) { const float START = 1000; // the amount that is invested const float PERC = 0.12; // the interest rate float amount; // worth of investment int years; // number of years // YOUR STATEMENTS SHOULD COME IN HERE cout << \"After \" << years << \" years the investment \" << \"is worth more than R3000\" << endl; return 0; QUESTION 3 [12] In this question you have to write a complete function. Suppose marks have been given to 30 students and that the marks are stored in an int array called marks. You have to write a void function, called findFailAndDistinct to determine the number of students who failed (thus got a mark of less than 50) and the number of students who got a distinction (thus a mark of at least 75). These two values should be returned to the main function. Assume the following: • a declaration of a global constant: const int NUM_MARKS = 30; // number of marks • two declaration statements in the main function: int marks[NUM_MARKS]; // list of marks int nrFail, nrDistinct; • values have been assigned already to all the elements of the array • the function is called in the main function as follows: findFailAndDistinct(marks, nrFail, nrDistinct); Write down ONLY the complete function findFailAndDistinct. QUESTION 4 [16] (a) Declare an integer constant DIM1 equal to 3 and an integer constant DIM2 equal to 5. (2) (b) Declare two int two-dimensional arrays, namely • arrayA with DIM1 rows and DIM2 columns, and • arrayB with DIM2 rows and DIM1 columns. (4) COS111U May 2009 [TURN OVER] 10 (c) Assume that values have been assigned to all the elements of arrayA and arrayB. Also assume that an int variable funnySum has been declared and intialised to 0. Use nested for loops and write down the necessary C++ instructions to calculate funnySum as follows: each row of arrayA is compared element by element to the corresponding column of arrayB and the value -1, 0, or 1 is added to funnySum according to whether the element of arrayA is less than, equal to, or greater than the element of arrayB. For example, if the given arrays arrayA and arrayB are: 8 12 5 10 3 6 6 5 6 7 4 9 16 and 6 7 9 3 2 20 22 15 20 4 4 3 3 6 22 4 5 respectively, then funnySum should be equal to 1+1-1+1-1 +0+0+0+1+1 -1-1+1+1+1 = 4. Display the value of funnySum. Do NOT write a complete program or any functions. Write down ONLY the required statements. (10) QUESTION 5 [14] The Post Office keeps record of all parcels handled by them. They keep the following information for each parcel: • sender (a string, for example \"Anna Every\") • receiver (a string, for example \"Johnny Allbody\") • weight (a floating point number, for example 2.25) • postage (a floating point number, for example 23.50) (a) Write down the declarations for a struct for storing the information of one parcel. Give the name Parcel to the struct. (5) (b) Assume that an array Parcel todaysParcels[50] has been declared and that the information for 50 parcels has been stored in the array. The program fragment below determines and displays the average weight and the highest postage of all the parcels handled by the Post Office that day. Now write down ONLY the necessary C++ instructions for line numbers 4, 6, 7 and 9 to complete this program fragment. Write down only the line number and the instruction that should appear next to the line number. (9) 1. float totalWeight, averageWeight, maxPostage; 2. totalWeight = 0; 3. maxPostage = 0; 4. for ( ) //examine all parcels 5. { 6. // determine total weight of today’s parcels 7. // determine maximum postage of today’s parcels 8. } 9. // determine average weight of today’s parcels; COS111U May 2009 [TURN OVER] 11 10. cout.setf(ios::fixed); 11. cout.precision(2); cout << \"The average weight of today's parcels is \" << averageWeight << endl; cout << \"The maximum postage for a parcel handled today is \" << maxPostage << endl; Do NOT write a complete program. Write down ONLY the required statements. QUESTION 6 [16] In both parts of this question you have to write the body of a function. In both cases the function header looks as follows: string changedSentence(string senP) Hint: Below the question we list a number of string member functions that you may need. (a) The function receives a string of characters, indicated by senP in the function header. The function has to replace all occurrences of the string he with Theo and return the changed string to the main function. Example: If the string When he saw the hen, then and there he heard the noise. is given, the string WTheon Theo saw tTheo Theon, tTheon and tTheore Theo Theoard tTheo noise. should be returned to the main function. You should write the body of the function ONLY. (8) (b) The function receives a string of characters, indicated by senP in the function header. The function has to replace all occurrences of the stand-alone string he with Theo and return the changed string to the main function. You may assume that senP will not start or end with he. Example: If the string When he saw the hen, then and there he heard the noise. is given, the string When Theo saw the hen, then and there Theo heard the noise. should be returned to the main function. You should write the body of the function ONLY. (8) TURN OVER FOR SOME STRING MEMBER FUNCTIONS COS111U May 2009 [TURN OVER] 12 A number of string member functions to help you StringObject.size( ) StringObject.substr(startPos, length) StringObject.find(substring) StringObject.find(substring, startPos) StringObject.insert(insertPos, substring); StringObject.erase(startPos, length); StringObject.replace(startPos, length, substring); where startPos, length and insertPos are of type int, and substring is of type string. © UNISA 2009 COS111U memorandum May 2009 1 COS111U MEMORANDUM MAY 2009 SECTION A Question 1: 3 Question 2: 2 Question 3: 1 Question 4: 5 Question 5: 4 Question 6: 1 Question 7: 3 Question 8: 4 Question 9: 2 Question 10: 5 COS111U memorandum May 2009 2 SECTION B QUESTION 1 12 marks // switch: switch(customerType) 1 { case 'S': discount = 0.10; break; 2 case 'D': discount = 0.12; break; 2 case 'P': discount = 0.15; break; 2 case 'O': if (amount > 200) discount = 0.10; else discount = 0; 3 } finalAmount = amount * (1.0 - discount); // many other ways 1 cout << finalAmount << endl; 1 OR // nested if: if (customerType == 'S') discount = 0.10; 2 else if (customerType == 'D') discount = 0.12; 2 else if (customerType == 'P') discount = 0.15; 2 else if (amount > 200) //if (customerType == 'O') redundant discount = 0.10; 2 else discount = 0.0; 2 finalAmount = amount * (1.0 - discount); // many other ways 1 cout << finalAmount << endl; 1 COS111U memorandum May 2009 3 QUESTION 2 10 marks (other loop structures may be used) amount = START; 1 years = 0; 1 while (amount <= 3000) 3 { amount += PERC * amount; 3 years++; 2 } QUESTION 3 12 MARKS void findFailAndDistinct(int marksP[], int & nrFailP, int & nrDistinctP) 4 { nrFailP = 0; 1 nrDistinctP = 0; 1 for (int i = 0; i < NUM_MARKS; i++) 2 if (marksP[i] < 50) nrFailP++; 2 else if (marksP[i] >= 75) nrDistinctP++; 2 } QUESTION 4: 2 + 4 + 10 = 16 MARKS QUESTION 4(a) 2 marks const int DIM1 = 3; 1 const int DIM2 = 5; 1 QUESTION 4(b) 4 marks int arrayA[DIM1][DIM2]; 2 int arrayB[DIM2][DIM1]; 2 QUESTION 4(c) 10 marks for (int i = 0; i < DIM1; i++) 2 for (int j = 0; j < DIM2; j++) 2 { if (arrayA[i][j] < arrayB[j][i]) 2 funnySum--; else if (arrayA[i][j] > arrayB[j][i]) 2 funnySum++; 1 (together with --) } cout << endl << endl << funnySum << endl; 1 COS111U memorandum May 2009 4 QUESTION 5: 5 + 9 = 14 MARKS QUESTION 5(a) 5 marks struct Parcel 1 { string sender; 1 string receiver; 1 float weight; 1 float postage; 1 }; QUESTION 5(b) 9 marks 4 for (int i = 0; i < 50; i++) 2 6 totalWeight = totalWeight + todaysParcels[i].weight; 2 7 if (todaysParcels[i].postage > maxPostage) maxPostage = todaysParcels[i].postage; 3 9 averageWeight = totalWeight/50; 2 QUESTION 6: 8 + 8 = 16 MARKS QUESTION 6(a) 8 marks { int pos; pos = senP.find(\"he\"); 1 while (pos > -1) 1 { senP.replace(pos, 2, \"Theo\"); 2 pos = senP.find(\"he\", pos + 4); // or pos+2 or pos+3 // NOT pos or pos+1 3 } return senP; 1 } QUESTION 6(b) 8 marks { int pos; pos = senP.find(\" he \"); 2 while (pos > -1) 1 { senP.replace(pos, 4, \" Theo \"); 2 pos = senP.find(\" he \", pos + 7); // or pos, or pos+1, … 2 } return senP; 1 } SECTION A 20 MARKS (10 MULTIPLE CHOICE QUESTIONS, 2 marks each) Please answer this section on the mark-reading sheet that you received (not in your answer book). Choose one option for every question. QUESTION 1 Suppose the following declarations appear in a C++ program: int afford, nr; bool selfCater; string whereToStay; If the following function header is given: string accommodation(int affordP, int nrP, bool selfCaterP) which of the options below is a correct calling statement of the function accommodation? 1. whereToStay = accommodation(650, 5, true); 2. whereToStay = accommodation(int affordP, int nrP, bool selfCaterP); 3. accommodation(affordP, nrP, selfCaterP); 4. whereToStay = accommodation(600, 6, \"false\"); 5. None of the above options is a correct calling statement. QUESTION 2 Suppose the following declarations appear in a C++ program: string destination, timeLeave; float amount; If the following function header is given: void supplyTrainInfo(string & destP, string & timeLeaveP, float & amountP) which of the options below is a correct calling statement of the function supplyTrainInfo? 1. supplyTrainInfo(destP, timeLeaveP, amountP); 2. supplyTrainInfo(string destP, string timeLeaveP, float amountP); 3. supplyTrainInfo(\"Durban\", \"12:25\", 527.95); 4. supplyTrainInfo(destination, '13:30', amount); 5. None of the above options is a correct calling statement. COS111U November 2009 [TURN OVER] 2 QUESTION 3 Suppose the following declarations appear in a C++ program: string name, birthday, telNr; int age; Suppose the following calling statement appears in the program: findInfo(\"Frank\", 13, birthday, telNr); Which of the options below is a correct function header of the function findInfo? 1. void findInfo(string & nameP, int & ageP, string & birth, string & nr) 2. void findInfo(\"Frank\", 13, string & birthP, string & nrP) 3. void findInfo(string nameP, int ageP, string & birth, string & nr) 4. void findInfo(\"Frank\", 13, birthday, telNr) 5. All of the above options are correct function headers. Questions 4 and 5 are based on the following C++ program. #include <iostream> using namespace std; int main( ) { int nrCoffee, timeFirst, timeLast; cout << \"Number of cups of coffee that you drink per day, \" << endl << \"time of first cup and time of last cup (hours 0 to 24): \"; cin >> nrCoffee >> timeFirst >> timeLast; if (nrCoffee < 8) { if (timeFirst < 7) { if (timeLast > 21) cout << \"Group A\" << endl; } else if ((timeFirst < 10) and (timeLast > 20)) cout << \"Group B\" << endl; } else if (timeFirst > 5) cout << \"Group C\" << endl; else if ((timeLast - timeFirst) < 10) cout << \"Group D\" << endl; return 0; COS111U November 2009 [TURN OVER] 3 } QUESTION 4 Suppose the program above is executed with the following input: 12 5 14 Which of the options below gives the output of the program? 1. Group A 2. Group B 3. Group C 4. Group D 5. No output QUESTION 5 Suppose the program above is executed with the following input: 6 10 22 Which of the options below gives the output of the program? 1. Group A 2. Group B 3. Group C 4. Group D 5. No output QUESTION 6 Suppose in a C++ program values are assigned to an int variable total and to a string variable name. Then a while loop is entered. The loop has to be executed as long as • name is not equal to \"Patience\" and • total is less than 14. Which of the options below gives a correct condition for the loop? 1. ((total < 14) || !(name == \"Patience\")) 2. (!(total > 14) && (name != \"Patience\")) 3. ((total < 14) || (name != \"Patience\")) 4. ((total < 14) && (name != \"Patience\")) 5. None of the options above is a correct condition. . QUESTION 7 Suppose we want to assign the value true to a bool variable safe if COS111U November 2009 [TURN OVER] 4 • either the value of the int variable dogs is greater than 0 and the value of the char variable lock is 'y', or • the value of the char variable alarm is 'A' or 'B'. Which of the options below gives a correct assignment statement? 1. safe = (dogs > 0 || lock == 'y') && (alarm == 'A' || alarm == 'B'); 2. safe = (dogs > 0 && lock == 'y') || (alarm == 'A' || 'B'); 3. safe = (dogs > 0 && lock == 'y') || (alarm == 'A' || alarm == 'B'); 4. safe = (dogs > 0 && lock == 'y') && (alarm == 'A' || alarm == 'B'); 5. None of the options above is a correct assignment statement. Questions 8, 9 and 10 are based on the following C++ program and the input that is given below. Note that the conventions as explained in the Study Guide are used in the variable diagrams. 1 #include <iostream> 2 using namespace std; 3 void supplyTravelInfo(int & nrPasP, int & distP) 4 { 5 char dest; 6 cout << endl << \"Destination and nr of passengers: \"; 7 cin >> dest >> nrPasP; 8 switch (dest) 9 { 10 case 'A': distP = 20; break; 11 case 'B': distP = 8; break; 12 default: distP = 10; 13 } 14 cout << endl; 15 } 16 float amountDue(int nrPasP, int distP, float feeP) 17 { 18 if (nrPasP > 6) 19 if (nrPasP > 10) 20 feeP *= 0.5; 21 else 22 feeP *= 0.6; 23 if (distP < 10) 24 feeP *= 1.5; 25 cout << \"New fee has been calculated\" << endl; 26 return (feeP * nrPasP); 27 } 28 int main( ) 29 { 30 int nrPas, dist; 31 float basicFee, amount; 32 supplyTravelInfo(nrPas, dist); COS111U November 2009 [TURN OVER] 5 33 basicFee = 10; 34 amount = amountDue(nrPas, dist, basicFee); 35 cout << \"Amount due: R\" << amount << endl; 36 return 0; 37 } Suppose the program is executed with the following input: b 11 QUESTION 8 Which of the options below correctly reflects the situation after Line 14 has been executed? Option 1 Line 14 [nrPas] | nrPasP [dist] | distP [basicFee] 11 10 ? [amount] dest ? 'b' Option 2 Line 14 [nrPas] | nrPasP [dist] | distP [basicFee] 11 8 ? [amount] dest ? 'b' Option 3 Line 14 [nrPas] [dist] [basicFee] ? ? ? amount nrPasP distP dest ? 11 10 'b' Option 4 Line 14 [nrPas] [dist] [basicFee] ? ? ? amount nrPasP distP dest ? 11 8 'B' Option 5 Line 14 None of the above options is correct. COS111U November 2009 [TURN OVER] 6 QUESTION 9 Which of the options below correctly reflects the situation after Line 25 has been executed? Option 1 Line 25 [nrPas] | nrPasP [dist] | distP [basicFee] | feeP 11 10 10 [amount] ? Option 2 Line 25 [nrPas] [dist] [basicFee] 11 8 10 amount nrPasP distP feeP ? 11 8 7.5 Option 3 Line 25 [nrPas] [dist] [basicFee] 11 10 10 amount nrPasP distP feeP ? 11 10 5 Option 4 Line 25 [nrPas] [dist] [basicFee] 11 8 7.5 amount nrPasP distP feeP ? 11 8 7.5 Option 5 Line 25 None of the above options is correct. QUESTION 10 Which of the options below correctly reflects the situation after Line 35 has been executed? Option 1 Line 35 nrPas dist basicFee amount 11 8 10 60 COS111U November 2009 [TURN OVER] 7 Option 2 Line 35 nrPas dist basicFee amount 11 10 10 55 Option 3 Line 35 nrPas dist basicFee amount 11 8 5 60 Option 4 Line 35 nrPas dist basicFee amount 11 10 5 55 Option 5 Line 35 None of the above options is correct. SECTION B (80 MARKS) Please answer this section in your answer book. QUESTION 1 [12] A cell phone company offers its customers a choice of three pricing options: Regular, Premium or Ultra. Calls are charged under these options as follows: • Regular: R10 for the first 3 (or less) minutes of a call, and then R1 per minute. • Premium: R20 for the first 10 (or less) minutes of a call, and then R1.50 per minute. • Ultra: R45 flat rate per call for all calls not longer than 30 minutes. If a call is longer than 30 minutes, the rate is R2 per minute for the full duration of the call. Write down ONLY the necessary C++ statements to calculate the cost and then display the cost and duration of a specific phone call. Do NOT write a complete program. Use the following variables: char option; // 'R' (regular) or 'P'(premium) or 'U' (ultra) int minutes; // duration of the specific call Assume that values have been assigned to option and minutes already. You may also need the following variable: float cost; QUESTION 2 [10] In an effort to encourage his son to stop smoking, Peter offers to give him R1 on the first day without smoking, then (an additional) R2 on the second day, R3 on the third day, and so on. Thus on the third day, the boy will have R1+R2+R3 = R6. Complete the C++ program below to determine the number of smoke-free days before the boy has at least R1000. Use an appropriate loop structure. COS111U November 2009 [TURN OVER] 8 Do not introduce any additional variables. Write down ONLY the missing statements. #include <iostream> using namespace std; int main( ) { float amount; int days; // number of smoke-free days // YOUR STATEMENTS SHOULD COME IN HERE cout << \"After \" << days << \" days he has at least R1000\" << endl; return 0; } QUESTION 3 [10] In this question you have to write a complete function. Suppose the rainfall figures for the twelve months of 2008 are stored in a float array called rain. You have to write a function called highestMonth to determine the month (as an integer) which has the highest rainfall. If, for example, the highest rainfall occurred during March, the function has to return the number 3 to the main function. Assume the following: • a declaration of a global constant: const int NUM_MONTHS = 12; // number of months • two declaration statements in the main function: float rain[NUM_MONTHS]; // rainfall figures int month; • values have been assigned already to all the elements of the array and the values are distinct (i.e. no value occurs more than once) • the function is called in the main function as follows: month = highestMonth(rain); Write down ONLY the complete function highestMonth. QUESTION 4 [18] Professor Knowal uses a two-dimensional array marks to store the test results of his first-year Computer Science students. There are 30 students in the class and the students write 5 tests during the course of the year. (a) Declare an integer constant NR_STUD for the number of students and an integer constant NR_TESTS for the number of tests. (4) (b) Declare a two-dimensional array marks with NR_STUD rows and NR_TESTS columns. (2) COS111U November 2009 [TURN OVER] 9 (c) Assume that the following declarations are given: int total, highest; float average; Further assume that values have been given to all the elements of the array marks. Use nested for loops and write down the necessary C++ instructions to determine and display the highest mark for each test as well as the average for each test. Do NOT write a complete program or any functions. Write down ONLY the required statements. (12) QUESTION 5 [13] Cash registers use barcode readers to determine the price of an item. The following information is associated with each barcode: • barcode itself (a string to store 9 digits, for example 123456789) • price (a floating point number, for example 23.50) • description (a string, for example \"Magazine Fair Lady\") (a) Write down the declarations for a struct for storing the information associated with one barcode. Give the name Barcode to the struct. (4) (b) Assume that an array Barcode barcodeInfo[50] has been declared and that the information for 50 barcodes has been stored in the array. The program fragment below does the following: • Enter the barcode of an item that a customer wants to purchase and the number of these items that the customer wants to buy, • search through the array barcodeInfo to find the price and description of the item with this barcode, and • display the description, number of items and the amount due. Now write down ONLY the necessary C++ instructions for line numbers 10, 12, 16 and 17 to complete the program fragment . Write down only the line number and the instruction that should appear next to the line number. (9) 1. float totalDue; 2. int nrOfItems; 3. string barcodeForItem; 4. int b; 5. cout << \"Enter barcode: \"; 6. cin >> barcodeForItem; 7. cout << \"Enter number of items: \"; 8. cin >> nrOfItems; 9. b = 0; // examine all barcodes in barcodeInfo and compare with // barcodeForItem 10. while ((b < 50) && ( ______ )) 11. b++; //test if barcodeForItem has been found COS111U November 2009 [TURN OVER] 10 12. if ( ____ ) 13. { 14. cout.setf(ios::fixed); 15. cout.precision(2); 16. // determine amount due 17. // display description, number of items and amount due 18. } 19. else 20. cout << \"error\"; Do NOT write a complete program. Write down ONLY the required statements. QUESTION 6 [17] In this question you have to write the body of a function. The function header is given. Hint: Below the question we list a number of string member functions that you may need. The function header looks as follows: string changedSentence(string senP) The function receives a string of characters, indicated by senP in the function header. The function has to • mark all occurrences of s in the given string, senP, by inserting the character * in front of s, • replace all occurrences of z by s, and • return the changed string to the main function. Example: If the string Susan realized that the organization's size was small. is given, the string Su*san realised that the organisation'*s *sise wa*s *small. should be returned to the main function. You should write the body of the function ONLY. TURN OVER FOR SOME STRING MEMBER FUNCTIONS COS111U November 2009 [TURN OVER] 11 A number of string member functions to help you StringObject.size( ) StringObject.substr(startPos, length) StringObject.find(substring) StringObject.find(substring, startPos) StringObject.insert(insertPos, substring); StringObject.erase(startPos, length); StringObject.replace(startPos, length, substring); where startPos, length and insertPos are of type int, and substring is of type string. © UNISA 2009 COS111U memorandum November 2009 1 COS111U MEMORANDUM NOVEMBER 2009 SECTION A Question 1: 1 Question 2: 5 Question 3: 3 Question 4: 4 Question 5: 5 Question 6: 4 Question 7: 3 Question 8: 1 Question 9: 3 Question 10: 2 COS111U memorandum November 2009 2 SECTION B QUESTION 1 12 marks // switch: switch(option) 1 { case 'R': cost = 10; if (minutes > 3) cost += (minutes - 3); break; 3 case 'P': cost = 20; if (minutes > 10) cost += (minutes - 10) * 1.50; break; 3 case 'U': cost = 45; if (minutes > 30) cost = minutes * 2; break; 3 } cout << \"Duration: \" << minutes << \" minutes\" << endl << \"Cost: R\" << cost << endl; 2 OR // nested if: if (option == 'R') { cost = 10; if (minutes > 3) cost += (minutes - 3); } 3 else if (option == 'P') { cost = 20; if (minutes > 10) cost += (minutes - 10) * 1.50; } 4 else // if (option == 'U') redundant { cost = 45; if (minutes > 30) cost = minutes * 2; } 3 cout << \"Duration: \" << minutes << \" minutes\" << endl << \"Cost: R\" << cost << endl; 2 COS111U memorandum November 2009 3 QUESTION 2 10 marks (other loop structures may be used) amount = 0; 1 days = 0; 1 while (amount < 1000) 3 { days++; 2 amount += days; 3 ) QUESTION 3 10 marks int highestMonth(float rainP[]) 3 { int m; m = 0; 1 for (int i = 1; i < NUM_MONTHS; i++) 2 if (rainP[i] > rainP[m]) m = i; 2 return m + 1; 2 } QUESTION 4: 4 + 2 + 12 = 18 MARKS QUESTION 4(a) 4 marks const int NR_STUD = 30; 2 const int NR_TESTS = 5; 2 QUESTION 4(b) 2 marks int marks[NR_STUD][NR_TESTS]; 2 QUESTION 4(c) 12 marks for (int i = 0; i < NR_TESTS; i++) 2 { total = 0; 1 highest = 0; 1 for (int j = 0; j < NR_STUD; j++) 2 { total += marks[j][i]; 1 if (marks[j][i] > highest) highest = marks[j][i]; 2 } average = float(total) / NR_STUD; 1 cout << \"Average mark and highest mark for test \" << i+1 << \" are \" << average << \" and \" << highest << endl; 2 } COS111U memorandum November 2009 4 QUESTION 5: 4 + 9 = 13 MARKS QUESTION 5(a) 4 marks struct Barcode 1 { string code; 1 float price; 1 string description; 1 }; QUESTION 5(b) 9 marks 10 while ((b < 50) && (barcodeForItem != barcodeInfo[b].code)) 2 12 if (b < 50) 2 16 totalDue = nrOfItems * barcodeInfo[b].price; 2 17 cout << barcodeInfo[b].description << \" \" << nrOfItems << \" R\" << totalDue << endl; 3 QUESTION 6 17 marks { int pos; pos = senP.find(\"s\"); 2 while (pos > -1) 1 { senP.insert(pos, \"*\"); 2 pos = senP.find(\"s\", pos + 2); // NOTE +2 3 } pos = senP.find(\"z\"); 2 while (pos > -1) 1 { senP.replace(pos, 1, \"s\"); 2 pos = senP.find(\"z\", pos + 1); // or pos 3 } return senP; 1 } COS1511/COS111U memorandum May 2011 1 COS1511/COS111U MEMORANDUM MAY 2011 NB: Please make a tick for each mark – it is required by the new assessment procedure, i.e. if the student obtains 7/10 for a question, there should be 7 √’s These answers are guidelines. Please give marks for correct logic, even if answered different to the solutions. If needed, write a note to the moderator of how marks were given in this case. Do not subtract marks for the same error twice in the same question. (especially question 3) SECTION A 20 marks Question 1: 5 Question 2: 4 Question 3: 3 Question 4: 1 Each question 2 marks Question 5: 3 Question 6: 2 Question 7: 2 Question 8: 1 Question 9: 2 Question 10: 2 SECTION B 70 marks QUESTION 1 4 marks (a) Swaps b and c’s values. 2 If student gives a line by line explanation, e.g. “assigns b’s value to a, c’s value to b, etc”, only 1 mark. (b) Calculate the average of the elements in array a 2 If student gives a line by line explanation, only 1 mark. QUESTION 2 6 marks Note to markers: For questions 2(a) and (b) the mark is given for the highlighted field. For questions 2(c) – (e), if the student left out the single and double quotes, but the value is correct, please give the mark. (a) line 20 \"PROGRAMMING\" \"PROGRAMMING\" \"COS1512\" 'n' 'n' 800 line 21 \"PROGRAMMING\" \"PROGRAMMING 2\" \"COS1512\" 'n' 'n' 800 [2] (b) line 28 \"PROGRAMMING\" \"PROGRAMMING 2\" \"COS1512\" 'n' 'y' 800 [1] (c) “PROGRAMMING” [1] (d) “COS1512” [1] COS1511/COS111U memorandum May 2011 2 (e) ‘n’ [1] QUESTION 3 13 marks Note to markers: Student must use a nested if loop, as it is stated in the question. Students may have put the cout statement within each if or else in which case they will have 5 cout statements for the colour and one for the error message. Make sure { } pairs have been used in this case. If no { } pairs have been used, subtract 1 mark for incorrect logic. Only one mark for cout for fee and one mark for error message cout. if (number > 10 && number < 21) is also correct. Same for other if’s if (number >= 11 && number <= 20) [1] colour = \"green\"; [1] else if (number >= 21 && number <= 30) [1] colour = \"red\"; [1] else if (number >= 31 && number <= 40) [1] if (gender == 'm') [1] colour = \"blue\"; [1] else if (gender == 'f') [1] colour = \"pink\"; [1] else colour = \"white\"; [1] if (number < 11 || number > 40) [1] cout << \"Class will not participate\" << endl; [1] else cout << \"The colour is \" << colour << endl; [1] QUESTION 4: 8 MARKS Give marks for any correct cout statement asking the user to guess a number. The student could also have tested userCorrect inside the while loop instead of testing it as one of the conditions – give marks if logic is correct. (Many students answered this question without using userCorrect. We gave marks for correct logic). #include <iostream> using namespace std; int main() { int num1, num2; int sum; //sum of num1 and num2; int userGuess; // the number guessed by the user const int MAXGUESSES = 5;//maximum number of guesses allowed int noOfGuesses ; // the number of guesses by the user bool userCorrect; //user has guessed correctly or not noOfGuesses = 0; COS1511/COS111U memorandum May 2011 3 userCorrect = false; cout << \"Enter two large integer values:\" << endl; cin >> num1 >> num2; sum = num1 + num2; while (!userCorrect !&& noOfGuesses < MAXGUESSES!) 2 (OR while (!userCorrect !&& noOfGuesses < 5!) { cout << \"Guess the sum of \" << num1 <<\" + \" << num2 << \" = ?\" << endl; ! 1 cin >> userGuess; ! 1 if(userGuess == sum) !{ 1 cout<<\"You Guessed Correctly\" << endl; ! 1 userCorrect=true; ! 1 } noOfGuesses++;! 1 } if (!userCorrect) { cout<<\"Sorry better luck next time!\" <<endl; cout<<\"The sum was \"<<sum; } return 0; } QUESTION 5: 12 MARKS Note to markers: The first two parameters must be const variables – deduct ½ mark for each one that does not have the const. const string monthP[12] and const float rainfallP[12] is also correct. void findLowest (const string monthP[], const float rainfallP[], float & lowestP, int & countP) [4] { lowestP = 1000.00; //(or any high value) [1] //(or lowest = rainfall[0];) //We gave marks here for any initialisation for (int i = 0; i < NUM; i++) [1] { if (rainfallP[i] < lowestP) [1] lowestP = rainfallP[i]; [1] if (rainfallP[i] == 0.00) [1] countP ++; [1] cout << \"Month: \" << monthP[i] << \"Rainfall: \" << rainfallP[i] << endl; [2] } } QUESTION 6 15 marks COS1511/COS111U memorandum May 2011 4 Note to markers: Give 1 marks for int inStaff[4][3]. We did not specify whether the array had to read row-wise or column-wise. Give marks for both. (a) int inStaff[DEPARTMENT][STORE]; !!!!!!!! 2 (b) int lowest = inStaff[0][0]; ! //or any high value 1 int highest = inStaff[0][0]; ! //or any low value 1 //we gave marks here for any initialisation of lowest and highest int range; 1 for(int i = 0; i < DEPARTMENT;i++){!! 2 for (int j = 0; j < STORE; j++)!! 2 //we gave marks here if 4 and 3 were used i.s.o. DEPARTMENT and STORE { if (inStaff[i][j] > highest) ! 1 { highest = inStaff[i][j]; ! 1 } if (inStaff[i][j] < lowest) ! 1 { lowest=inStaff[i][j]; ! 1 } } } range = highest - lowest; ! 1 cout<<\" The range of employee is \" << range; ! 1 QUESTION 7 6 marks Note to markers: Do not deduct marks if “...” is not included in the cout statement (a) struct MenuItemType! 1 { string menuItem; ! 1 float menuPrice; ! 1 }; (b) for ( int i = 0; i < 3; i++) { cout <<customerOrder[i].menuItem! 1 <<\" ... R \"<<customerOrder[i].menuPrice<<endl; !1 amountDue = amountDue + customerOrder[i].menuPrice; ! 1 } cout<<\"Amount Due .....R \" << amountDue <<endl; QUESTION 8 6 marks COS1511/COS111U memorandum May 2011 5 string removeChar(string inStringP) { int pos; 1 // Find 'p' and erase it from the string pos = inStringP.find(\"p\"); 1 while (pos > -1) 1 { inStringP.erase(pos, 1); 1 pos = inStringP.find(\"p\", pos); //NOT pos+1 1 } return inString; 1 } COS1511 memorandum May 2012 1 COS1511 MEMORANDUM MAY 2012 NB: Please make a tick for each mark – it is required by the new assessment procedure, i.e. if the student obtains 7/10 for a question, there should be 7 ’s These answers are guidelines. Please give marks for correct logic, even if answered different to the solutions. If needed, write a note to the moderator of how marks were given in this case. Do not subtract marks for the same error twice in the same question. SECTION A 20 marks Question 1: 3 Question 2: 4 Question 3: 2 Question 4: 3 Each question 2 marks Question 5: 1 Question 6: 3 Question 7: 4 Question 8: 1 Question 9: 2 Question 10: 3 SECTION B 70 marks QUESTION 1 4 marks (a) It reads in 3 integer values and display them in reverse order. If student gives a line by line explanation, e.g. “reads in a value for value3, then for value2 and then for value1 and then displays value1, value 2 and value3”, only 1 mark. (b) It counts the number of time the string “red” appears in a string array with 5 elements. If student gives a line by line explanation, only 1 mark. QUESTION 2 11 marks QUESTION 2a 5 marks Note to markers: For question 2a(i) the mark is given for the highlighted field. If students missed the fact that there is no break statement after case 9, at most 3 marks are given for the question, and only if answers are correct according to the error. (i) age times gender amount Line 25 9 1 'm' 30 age times gender amount Line 29 9 1 'm' 70 age times gender amount Line 30 9 3 'm' 70 COS1511 memorandum May 2012 2 If students missed the fact that there is no break statement after case 9, the following answer would be given: age times gender amount Line 25 9 1 'm' 30 age times gender amount Line 35 9 1 'm' 40 ½ age times gender amount Line 36 9 2 ½ 'm' 40 If lines 35 and 36 are correct according to the error, only 1 mark must be given, otherwise none. (ii) amount: 80 times: 4 gender: m If students missed the fact that there is no break statement after case 9, the following answer would be given: amount: 40 times: 2 gender: m Only 1 mark in this case If students only show the variable diagrams with the values at this stage, 1 mark QUESTION 2b 6 marks Note to markers: For questions 2(a) and (b) the mark is given for the highlighted field. For questions 2(c) – (e), if the student left out the double quotes, but the value is correct, please give the mark. (i) [prod] prodP [life]|lifeP [code] codeP Line 13 \"Yoghurt\" \"Yoghurt\" 14 658 678 [prod] prodP [life]|lifeP [code] codeP Line 14 \"Yoghurt\" \"Yoghurt\" 8 658 678 (ii) [prod] prodP [life]|lifeP [code] codeP Line 21 \"Yoghurt\" \"Butter\" 8 658 678 (iii) “Yoghurt” (iv) 658 (v) 8 QUESTION 3 8 marks COS1511 memorandum May 2012 3 Note to markers: Students must use a nested if else statement as specified in the question. If the student has a cout statement in stead of an assignment statement for prize, no mark. If student did not use array subscripts, subtract 1 mark for first omission, thereafter half a mark. If student structured answer with nested if, in such a way that ‘&&’ can be omitted, make sure that he receives all the marks he deserves (i.e. the two marks for the &&’s should be shown somewhere. if (age[k] >= 14 && age[k] <= 25) prize = \"cell phone\"; ½ else if (age[k] >= 26 && age[k] <= 40) prize = \"coffee machine\"; ½ else if (age[k] >= 41) prize = \"voucher\"; ½ else prize = “no prize”; ½ QUESTION 4: 8 MARKS Question 4a [5] // Loop to enter each of expenses. Note that first expense // was read before the loop while (expense >= 0) // alternative (expense > -1) /!(expense <0) { // Add the expense to the totalExpenses. totalExpenses = totalExpenses + expense; //Alternatively: totalexpenses += expense // Get an expense amount. cout << \"Enter an expense, or a negative number to quit: \"; cin >> expense; } Question 4b - Give marks for any correct logic to determine if in, over or under budget [3] // Display the amount on, over or under. if (diff < 0) ½ { // diff is negative, so make it positive for // display purposes and then display the status. diff = -(diff); //don’t deduct marks if this statement //not present. cout << \"You are OVER budget by R\" << diff << endl; ½ } else if (diff > 0) ½ { cout << \"You are UNDER budget by R\" << diff << endl; ½ } else ½ COS1511 memorandum May 2012 4 { cout << \"You spent the budget amount exactly.\\n\"; ½ } QUESTION 5: 10 MARKS Question 5a [5] (i) The void function returns double the amount of valueP via the reference parameter. The int function returns double the amount of valueP through a return statement (ii) Function doubleNum1 makes use of a reference parameter and is called as follows: doubleNum1(value); (iii) Function doubleNum2 makes use of a value parameter and is called as follows: result = doubleNum2(value2) Question 5b [5] (i) int cube (int x) { return x*x*x; } OR int cube (int x) { int value; value = x*x*x; ½ return value; ½ } OR int cube (int x) { int value; value = pow(x,3); ½ return value; ½ } (ii) answer = cube(n); QUESTION 6 17 marks 14] (a) [2] int food[MONKEYS][DAYS]; (b) [7] //The getFoodEaten function gets the amount of food eaten for each //monkey on each day. The values are stored in the food array. // COS1511 memorandum May 2012 5 void getFoodEaten(int food[][DAYS]) //or (int food[MONKEYS][DAYS]) { for (int monkey = 0; monkey < MONKEYS; monkey++) { for (int day = 0; day < DAYS; day++) { // Get the amount eaten by this monkey on this day. cout << \"Enter the kilograms food eaten by monkey \" << \"number \" << (monkey + 1) << endl << \" on day \" << (day + 1) << \": \"; cin >> food[monkey][day]; // Validate the input. while (food[monkey][day] < 0) //OR if (food[monkey][day] <0) { cout << \"Enter a non-negative amount: \"; cin >> food[monkey][day]; } } } } (c) [8] void displayAverageDaily(const int food[][DAYS]) // or const int food[MONKEYS][DAYS]) { int total; ½ // Accumulator float average; ½ // Average eaten //We test here if the student realises that the array must be read //column-wise. Subtract one mark if array is read row by row for (int day = 0; day < DAYS; day++) { // Initialize the accumulator. total = 0; // Get the total eaten by the monkeys on this day. for (int monkey = 0; monkey < MONKEYS; monkey++) total += food[monkey][day]; // Calculate the average eaten. //Only one mark if they did not realise that average is float and //total and MONKEYS are integers ½ ½ ½ average = (float)total / (float)MONKEYS; // Display the average. cout.setf(ios::fixed); cout.precision(2); // As long as the average is displayed, give the mark cout << \"The average amount eaten on day \" << (day + 1) << \" is \" << average ½ << \" kilograms.\" <<endl; } } QUESTION 7 6 marks (a) COS1511 memorandum May 2012 6 struct ShoeType { char shoeStyle; ½ float shoePrice; ½ }; (b) ShoeType shoes[5]; (c) for (int i = 0; i < 5; i++) { if (shoes[i].shoeStyle == 'B') totalPrice += shoes[i].shoePrice; } QUESTION 8 6 marks (a) pos = senP.find(findP, pos + 3); (b) pos = senP.find(deleteP, 0); (c) The statement makes sure that we do not read beyond the end of the string. (d) senP.erase(pos, 3); (e) It finds the next occurrence of deleteP in sentence senP (f) getline(cin, sentence, '\\n'); COS111U memorandum November 2012 1 COS1511 MEMORANDUM NOVEMBER 2012 NB: Please make a tick for each mark – it is required by the new assessment procedure. SECTION A 20 marks Question 1: 3 Question 2: 2 Question 3: 4 Question 4: 2 Every question 2 marks Question 5: 1 Question 6: 1 Question 7: 4 Question 8: 3 Question 9: 3 Question 10: 1 SECTION B 70 marks QUESTION 1 4 marks (a) It displays a message according to the mark 2 If student gives a line by line explanation, only 1 mark. (b) Adds all the elements in an array with a value >= 50 2 If student gives a line by line explanation, only 1 mark. QUESTION 2 11 marks QUESTION 2a 5 marks Note to markers: For question 2a(i) the mark is given for the highlighted fields. If students missed the fact that there is no break statement after case 9, at most 1 mark is given for (ii) if correct according tot the error. (i) number check colour special Line 24 0 'b' \"blue\" 15 number check colour special Line 28 30 'b' \"blue\" 15 number check colour special Line 30 30 'b' \"green\" 15 [3] COS111U memorandum November 2012 2 If students missed the fact that there is no break statement after case ‘b’, the following answer would be given: number check colour special Line 24 0 'b' \"blue\" 15 number check colour special Line 28 30 'b' \"blue\" 15 number check colour special Line 30 20 'b' \"blue\" 15 No mark for line 36, but 1 mark can be given in (ii) below if correct according to this error (ii) number: 35 colour: green If students missed the fact that there is no break statement after case 9, the following answer would be given: number: 20 colour: blue Only 1 mark in this case Question2(b) Note to markers: For questions 2(a) and (b) the mark is given for the highlighted field. For questions 2(c) , if the student left out the double quotes, but the value is correct, please give the mark. (a) [prize]|prizeP [ticket] ticketP [age]|ageP Line 6 \"pencil\" 200 200 15 [1] (b) [prize]|prizeP [ticket] ticketP [age]|ageP Line 19 \"skateboard\" 200 200 15 [prize]|prizeP [ticket] ticketP [age]|ageP Line 20 \"skateboard\" 200 1 15 [2] COS111U memorandum November 2012 3 (c) skateboard 200 20 [3] QUESTION 3 8 marks Note to markers: Students must use a nested if…else statement. No marks if cout was used instead of assignment statements if (number[k] >= 0 && number[k] <= 49) number[k] *= 2; ½ else if (number[k] >= 50 && number[k] <= 99) number[k] *= 10; ½ else if (number[k] >= 100) number[k] -= 100; ½ else number[k] = 0; ½ Students could also have put the cout statement within each case statement. One mark overall for the cout. QUESTION 4 8 marks while (guess != number && count < 50) { if (guess < number) { cout << \"No, that's too low.\" << endl; ½ } else if (guess > number) { cout << \"Sorry, that's too high.\" << endl; ½ } // Get another guess. cout << \"Guess again: \"; cin >> guess; count += 1; } QUESTION 5: 10 MARKS (a) [5] (i) void increase2(int & value) { value *= 3; } COS111U memorandum November 2012 4 (ii) result = increase1(increaseMe); increase2(increaseMe); (b) [5] (i) void update(int number, int & value) { value *= number; } (ii) number should be a value parameter because the function should not change it. value should be a reference parameter, because the function changes its value. QUESTION 6 18 marks 14] (a) [2] float sales[TEAM][DAYS] (b) [7] // The sales function reads in the total sales amount for each team for each day of the week // void getSales(float sales[][DAYS]) //or int sales[TEAM][DAYS] { for (int row = 0; row < TEAM; row++) { for (int col = 0; col < DAYS; col++) { // Get the sales amount for this team cout << \"Enter the sales amount for team \" << (row + 1) << \" on day \" << (col + 1) << \": R\"; cin >> sales[row][col]; // Validate the input. while (sales[row][col] < 0) { cout << \"Enter a non-negative amount: \"; cin >> sales[row][col]; } } } } (c) [9] void displayTotalDaily(const float sales[TEAM][DAYS]) { float total; // total sales per day ½ float weekTotal = 0.00; // total sales for the whole week ½ //Only 1 mark for the nested if, if read row by row in stead of //column by column for (int col = 0; col < DAYS; col++) { // Initialize the total. total = 0.0; COS111U memorandum November 2012 5 // Get the total sales for this day. for (int row = 0; row < TEAM; row++) total += sales[row][col]; weekTotal += total; // Display the total. cout.setf(ios::fixed); cout.precision(2); cout << \"The total sales amount for day \" << (col + 1) << \" is R\" << total << endl; ½ } // //display total sales for the week ½ cout << \"The total sales for the week is R\" << weekTotal << endl; } QUESTION 7 6 marks (a) 6 struct Balloon ½ 7 { 8 char size; ½ 9 string colour; ½ 10 bool prize; ½ 11 }; (b) Balloon bazaarBalloon[200]; (c) if (bazaarBalloon[i].prize && bazaarBalloon[i].size == 'm') OR if (bazaarBalloon[i].prize == true && bazaarBalloon[i].size == 'm') (d) cout << bazaarBalloon[i].colour << endl; QUESTION 8 6 marks (a) part1 = senP.substr(0 , len/2); (b) It makes sure that we do not read past the end of the sentence (c) part1.replace(pos, 1, \"z\"); (d) pos = part2.find(\" \", 0); (e) newstring = part2 + part1; (f) newSentence = updString(sentence);","libVersion":"0.2.3","langs":""}