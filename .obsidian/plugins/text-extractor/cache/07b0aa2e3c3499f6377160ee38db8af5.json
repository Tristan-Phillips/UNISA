{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Tutorial Letters/102-2020-1-b-assignment-2.pdf","text":"Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 BAR CODE Deﬁne Tomorrow. university of south africa Tutorial Letter 102/1/2020 Techniques of Artiﬁcial Intelligence Semester 1 Computer Science School of Computing CONTENTS Assignments 01 and 02, and the self-assessment assignment for semester 1 COS3751/102/1/2020 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 We remind you that the purpose of these assignments are for you to have a genuine attempt at solving some sample problems. It is thus a matter of personal learning, and growth. Please don’t leave them to the last minute, and above all: please put in honest, own eﬀort when completing them. ASSIGNMENT 1 Due Date: 2 March 2020 Unique Assignment Number: 757471 ONLY FOR SEMESTER 1 Study material: Chapters 1 through 4. You may skip sections 4.2 and 4.5. Important: When we use the phrase ‘deﬁne’ (particularly in Question 2), we are looking for a formal deﬁnition using some form of formal notation, and not simply an English description or deﬁnition. For example: ‘Deﬁne the initial state for an agent in Johannesburg’. Answer: In(Johannesburg). ‘Deﬁne the actions available to this agent given that the agent simply moves between major metropolitan areas’. Answer: Actions(In(Johannesburg)) = {Go(Bloemontein), Go(Durban), . . . }. When we want an English deﬁnition we will explicitly ask for it. Question 1 (1.1) Consider an agent that is designed to deliver emergency supplies to miners that are trapped in a mine. The agent is small enough to navigate through most small openings, but can burrow through soft rock when necessary, because there is a lot of sand and dirt in the shafts, the agent may slip occasionally when attempting to move. Once the agent detects that it has delivered medical supplies to a survivor, it returns to the rescue services team. These agents are typically only deployed once it has been determined that no more shifts in the earth is possible, and the survivors’ location has been pinned down (survivors won’t move around). Choose from among the following environmental descriptions, and justify your choices in each case. Answer the following questions. Justify your answer in each case. (a) Is the environment deterministic, or stochastic? (b) Is the environment discrete, or continuous? (c) Is the environment static, or dynamic? (1.2) Is this an example of a model-based, or reﬂex-based agent? Justify your answer. 2 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 COS3751/102/1/2020 Question 2 Four soccer teams have to take part in a round-robin tournament. The problem is to determine a schedule of matches so that each team plays each other team once in the minimum number of rounds. Matches can take place in parallel. There are many ways to solve this problem, one of which is to specify it as a state space and search for the goal state. Say we number the teams 1, 2, 3 and 4. For each team, we can keep track of which other teams it has played so far by means of a set. So for team 1, the set {2, 4} means it has played against teams 2 and 4 so far. The entire state of which teams have played which other teams can then be represented by an ordered 4-tuple, where each element is a set of the teams that a team has played. The start/initial state is therefore sI = ({}, {}, {}, {}) because initially, team 1 has not played any other teams, team 2 hasn’t played any other teams, etc. (2.1) What is the goal state of the state space? (2.2) Deﬁne an action called Schedule which can be applied to a state to get to a successor state. Hint: it helps to consider how you want the action to transform a state into a successor state. Explain what an applicable action means (the rules for transforming a state into another state) for your Schedule action. (2.3) What are the successor states of the start state? (2.4) What are the applicable actions to the state S1,1 = ({2}, {1}, {4}, {3})? (2.5) Specify the transition model for the applicable actions you speciﬁed for state S1,1 above. (2.6) Calculate the size of the search space (include the initial state in your calculation). Justify your answer. Question 3 (3.1) Explain how a Depth First Search (DFS) ensures that it always expands the deepest node ﬁrst. Provide an example to aid your discussion. (3.2) Explain when one might want to choose DFS over Breadth First Search (BFS). (Hint: In which version of the algorithm does one have an advantage over the other?) Question 4 Consider the search tree in Figure 1. Show the order in which the nodes will be expanded at each level (start with level 0 and continue until the goal test is successful), given that IDS is used. Assume the goal node is B, and that nodes are expanded from left to right (M is expanded before E and so 3 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 O M D K I C J H E L F G B N A Figure 1: Search Tree (Iterative Deepening Search (IDS)) on). (Hint: make sure you understand the diﬀerence between expansion and generation, and also that you understand when goal checks occur.) Question 5 Consider the graph provided in Figure 2, and answer the questions that follow. The step cost between nodes is provided next to the edges. O B G H A E M DK J FL N C I 227 248 197 471 143 170156 262 142 280 112 241 257 388302 35 241 Figure 2: Search 4 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 COS3751/102/1/2020 (5.1) Provide an example to show that a straight line distance used as a heuristic in a greedy best-ﬁrst search may not provide an optimal solution. (5.2) Perform a Uniform Cost Search (UCS) on the graph. The start node is N and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the ﬁnal path from the start to the goal. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 N(ˆg = 0) . . . . . . . . . Remember: the ﬁrst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ˆg value. (5.3) Perform an A ∗ search on the graph in Figure 2. The start node is N and the goal node is F . Provide a step-wise explanation of the search as it progresses. At each step, provide the frontier, and show which node is selected for expansion. Provide the ﬁnal path from the start to the goal. Use table 1 for the ˆh values for each node in the graph. Use the following format for your answer (step 1 has been completed below): Step Node expanded Frontier 1 N(ˆg = 0, ˆh = 20, ˆf = 20) . . . . . . . . . Remember: the ﬁrst step of a well-written search algorithm is always to generate the start node (i.e. place the start node in the frontier). Step two should begin with expanding the node in the frontier with the smallest ˆf value. Question 6 A magic square is a square of n × n cells, and which has some very interesting properties: all the rows, columns, and diagonals, when summed, adds up to the magic constant. The magic constant is calculated as follows: M = n(n2 + 1) 2 Thus, for n = 3, M = 3(32+1) 2 = 15. The entries in the square are limited to the integers between 1 and n2. For example, a solution for n = 3 is: It is easy to verify that every row, column, and diagonal in the above example adds up to 15. Using local search algorithms, we can perform a search as follows: • Initialise a board with queens placed randomly, 5 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 Node Estimated COST to goal A 550 B 660 C 280 D 550 E 420 F 0 G 570 H 510 I 570 J 270 K 760 L 30 M 450 N 800 O 600 Table 1: Estimated Distance to Goal for A ∗ search. 4 3 8 9 5 1 2 7 6 Figure 3: Magic Square for n = 3 • Deﬁne an objective function to aid the local search, • Generate a successor state from the current state by randomly swapping two values • An optimum (minimum/maximum) is considered a goal. Consider the following random start state (we represent the state graphically to aid your eﬀort, and you are welcome to provide graphical representations of successor states if asked): 5 3 8 9 4 6 1 7 2 Figure 4: Magic Square for n = 3 (6.1) Provide a good objective function that can be used as a minimizer (i.e. a global minimum, a loss function) for the problem. 6 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 COS3751/102/1/2020 Hint: 1. An objective function (also called either a loss, or reward function) is a function that maps the current state to some linear value which can be used to judge the ﬁtness or goodness of the state. When we want to avoid loss, we deﬁne an objective function with respect to loss, and we try to minimize loss by minimising the evaluation of the state using the objective function (i.e. we look for a state that results in the smallest value when evaluated using the objective function). When we want reward, we deﬁne an objective function with respect to reward and we try to maximize the objective function. 2. First write down the function in plain English, and then provide the mathematical equation for it. 3. Use the rows, columns, and diagonals in the state as part of your equation. (6.2) Now that you have deﬁned your objective function, use it to evaluate the start state as provided in Figure 4. Show your calculations. (6.3) A hill-climb/hill-descent local search generates a series of successors, and takes the best one from among them (using the objective function). Beginning from the initial state in Figure 4, provide two successors, one that is worse, and one that is an improvement. Show why the successor is better, or worse by using the objective function to evaluate it. Remember: generate all possible successors, and choose the better/worse from among them. Remember, a successor state is generated by moving one queen, one row up or down. (6.4) Suppose we use simulated annealing to solve the puzzle. Use a starting value of T = 100, and a discounting value of 0.9. Provide the new T and ∆E values for the better state. Also provide the T , ∆E and probability for accepting the worse state. 7 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 ASSIGNMENT 2 Due Date: 30 March 2020 Unique Assignment Number: 879267 ONLY FOR SEMESTER 1 Study material: Chapters 5, 6, 7, and 8. You may skip sections 5.5, 5.6, and 5.7, 7.6, and 8.4. Question 1 (1.1) Clearly explain what an evaluation function is, and why it is used during adversarial searches. (1.2) Is the ideal strategy only available if we have perfect information? Explain your answer. (1.3) Explain how forward pruning works. Provide at least one approach to forward pruning in your explanation, as well as a problem that may be encountered with forward pruning. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Question 2 Consider Figure 5 and answer the questions that follow. (The utility value of the leaf nodes are provided below the in brackets in the leaf node.) (2.1) Provide the minimax values for all the nodes. (2.2) Which move should MAX make? Explain your answer. (2.3) Write down the α/β values for all the nodes (except the leaf nodes) if alpha/beta pruning is applied to the tree. (2.4) Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). Question 3 Answer the following questions on Constraint Satisfaction Problems (CSPs). (3.1) Deﬁne the Least Constraining Value (LCV) heuristic. (3.2) Explain why establishing strong k-consistency is a problem. (3.3) Deﬁne the degree heuristic. 8 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 COS3751/102/1/2020 A B D 7 E I 9 J -2 F 9 C G K -3 L 6 H 17 M 9 Figure 5: Minimax, alpha/beta (3.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to ﬁnd a solution by simply backtracking? Explain your answer. (3.5) Explain what forward checking for a CSP is. Question 4 Consider the crossword puzzle provided in Figure 6. It is possible to represent the problem of generating puzzles as a CSP. Suppose you are given the puzzle grid as above, as well as a dictionary W of words to use for generating the puzzle. The variables for this problem is easily represented as the collection of vertical or horizontal cells. Such a collection is called a box. A horizontal box is identiﬁed as Ai with i being the number of the box, and a vertical box is Dj with j being the number of the box. Boxes consisting of only one cell is not allowed. Suppose you are given the following functions: 9 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 1 2 3 4 5 6 7 Figure 6: Crossword Puzzle 1. BLen(v): returns the number of cells that a box contains, for example BLen(A1) = 4 2. W Len(w): returns the length of a word w, for example W Len(′hi ′) = 2 3. Cell(v, n): returns the letter in cell n of variable v. For example, if A1 = ‘Ahoy’, then Cell(A1, 2) = ‘h’. Answer the following questions. (4.1) Provide the variables for this problem. Make sure to use the correct notation. (4.2) Deﬁne the domain for the variables, make sure to use the correct notation, and to use all the information provided. (Hint: Remember that the number of cells in a box and the number of letters in a word must match.) (4.3) Deﬁne the constraints for this problem. (4.4) You are given the following list of words as your dictionary. W = { GAB, WIN, VAN, VET, GET, GIVE, GRAB, GROW, DRUM, BEND, BARE, DRAB, DRAG, EYES, FEEL, FOOL, EELS, ERRS, TARDY, BARES, EARLY, DUMPS, FEELS, DRUMS }. Use the Minimum Remaining Values (MRV) heuristic to generate the crossword, apply arc-consistency when you’ve made an assignment to a variable. Question 5 Consider the following English sentences: 1. Anyone who passes their history exam, and wins the lottery is happy. 2. Anyone who studies, or who is lucky will pass their exam. 3. John did not study. 4. John is lucky. 5. Anybody who is lucky will win the lottery. 10 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 COS3751/102/1/2020 a (5.1) Provide a First-order Logic (FOL) vocabulary for the sentences. (5.2) Using your vocabulary, translate the sentences in FOL. (5.3) Convert the statements obtained in (5.2) into clausal form. Variables must be standard- ised. (5.4) Use resolution refutation to prove that John is happy. Question 6 Do excercise 8.9 b, d, f, g in the textbook. 11 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 SELF ASSESSMENT ASSIGNMENT ALL STUDENTS Study material: Chapters 9, and 18. You may skip sections 9.3, and 9.4. You only need to study 18.1, 18.2, and 18.3 Question 1 Convert the following FOL sentence to Conjunctive Normal Form (CNF): ∀y(∀xP (x) ⇒ ∃x(∀zQ(x, z) ∨ ∀zR(x, y, z))) Question 2 Consider the following English statements: 1. Anyone who passes their history exam and who wins the lottery is happy. 2. Anyone who studies or is lucky, passes their exams. 3. John did not study. 4. John is lucky. 5. Anyone who is lucky wins the lottery. (2.1) Provide a vocabulary for the statements. (2.2) Translate the above English sentences to FOL statements using the vocabulary you de- ﬁned above. (2.3) Convert the FOL statements obtained in 2.2 into CNF. (2.4) Use resolution refutation to prove that John is happy. Question 3 (3.1) Convert the Boolean function in Table 2 to a decision tree: (3.2) When we construct a decision tree without the beneﬁt of gain values, the order in which we evaluate the variables is important. Why? 12 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588 COS3751/102/1/2020 x1 x2 x3 f(x1, x2, x3) 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 Table 2: Boolean function table Question 4 The National Credit Act introduced in South Africa in 2007 places more responsibility on a bank to determine whether the loan applicant will be able to aﬀord it. Blue Bank has a table of information on 14 loan applications they have received in the past: No. Credit history Debt Collateral Income Risk 1 BAD HIGH NO < R15k HIGH 2 UNKNOWN HIGH NO R15k - R35k HIGH 3 UNKNOWN LOW NO R15k - R35k MEDIUM 4 UNKNOWN LOW NO < R15k HIGH 5 UNKNOWN LOW NO > R35k LOW 6 UNKNOWN LOW YES > R35k LOW 7 BAD LOW NO < R15k HIGH 8 BAD LOW YES > R35k MEDIUM 9 GOOD LOW NO > R35k LOW 10 GOOD HIGH YES > R35k LOW 11 GOOD HIGH NO < R15k HIGH 12 GOOD HIGH NO R15k - R35k MEDIUM 13 GOOD HIGH NO > R35k LOW 14 BAD HIGH NO R15k - R35k HIGH Table 3: Risk information table Use the information in Table 3 to construct a decision tree that will assist the bank in determining the risk associated with a new loan application. c⃝ UNISA 2020 (v2020.1.0) 13 Downloaded by Tristan Walker (t-promotional@pm.me) lOMoARcPSD|4157588","libVersion":"0.2.3","langs":""}