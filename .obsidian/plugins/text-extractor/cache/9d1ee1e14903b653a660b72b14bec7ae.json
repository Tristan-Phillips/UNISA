{"path":"Subjects/COS3711 - Advanced Programming/Unsorted/Notes/COS3711 2022 Assignment 1.pdf","text":"COS3711/Assignment 1/2022 1 Assignment Tutorial Letter 2022 Advanced Programming COS3711 Year module Computer Science Department Assignment 1 - Questions BARCODE COS3711/Assignment 1/2022 2 Assignment 1 1. Introduction There are two parts to this assignment.  Part A is to be submitted for marking.  Part B is for extra practice of examinable concepts and should not be submitted. Please note that Qt Designer should not be used, and you are expected to manually set up GUIs to ensure that you properly handle memory using Qt’s parent-child functionality. Marks will also be awarded for following good programming practice, for example, naming conventions, code layout, using initialiser lists in constructors, and GUI handling like setting focus, tabbing and clearing input widgets (like text input fields being cleared and spin boxes being returned to some default value), and providing appropriate user feedback. Your code should build and run without any warnings. 2. Part A (To be submitted) Question 1 Consider the following incomplete UML class diagram. The Film class takes on too much responsibility. 1. obtainFilmData(), which is used to get user input on film details (title, length, director and release date) via a Graphical User Interface (GUI), and 2. saveFilm(), which is used to save the state of a Film instance to a file. COS3711/Assignment 1/2022 3 Redesign the Film class so that the functionality currently included in it can be achieved using three different classes. 1. The Film class to represent a film with the necessary functions (as given in the above UML class diagram). 2. A FilmWriter class which saves the state of a Film instance (values of the data members of that instance) to a file (you may save it in any sensible format that is human-readable). 3. A Graphical User Interface (GUI) class FilmInput, which allows users to enter film information to create Film instances as well as to save Film instances to file (using the FilmWriter). Note: You can decide when Film instance(s) should be saved. Question 2 Make necessary changes in the Film class so that you can access the data members of Film instances using QMetaObject. Rewrite the FilmWriter class so that the state of a Film instance is accessed using the generated QMetaObject. Question 3 Use Qt’s model/view framework to store and display music CD information. The following information should be stored in the model (a QStandardItemModel):  composer,  album name,  cost, and  a rating (out of 100). The information should be displayed in a table. The following functionality should be included.  There should be a header row.  The user should be able to add rows of data to the model.  The user should be able to edit data in the view.  The replacement value should always display the cents (even as .00), even after editing.  The user should be able to sort the data by clicking on the column header on which the sorting should be implemented.  Where the replacement value is greater than or equal to R250, the row should be made a different colour. Note that this colour should also change if the user edits a replacement value (and it should return to the normal colour if the value drops below R250).  The user should be able to delete a row of data. Here is an example of the interface. COS3711/Assignment 1/2022 4 3. PART B (For self-assessment; not to be submitted) Question 4 Make necessary changes in the Film, FilmWriter, and FilmInput classes (used in Question 2) to meet the following criteria:  When a Film instance is created, the dynamic property genre is added with the value Unknown.  When the object state is saved to file, both the QMetaObject and dynamic properties are saved. Question 5 Modify Question 3 by displaying the rating using a delegate (where the rating is shown as a coloured bar and not a number). Use the following diagram as an example. © Unisa 2022","libVersion":"0.2.3","langs":""}