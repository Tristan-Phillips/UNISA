{"path":"UNISA/98906 - BSc Science in Computing/COS3751 - Techniques of Artificial Intelligence/Tutorial Letters/103_2018_1_b.pdf","text":"BAR CODE Deﬁne Tomorrow. university of south africa Tutorial Letter 103/1/2018 Techniques of Artiﬁcial Intelligence COS3751 Semester 1 School of Computing IMPORTANT INFORMATION This tutorial letter contains assignment 02 COS3751/103/1/2018 ASSIGNMENT 01 Due Date: 3 April 2018 UNIQUE ASSIGNMENT NUMBER: 868331 ONLY FOR SEMESTER 1 Study material: Chapters 5, 6, 7, 8. You may skip sections 5.5, 5.6, and 5.7. Question 1 (1.1) Clearly explain what a utility function is, and why it is used during adversarial searches. (1.2) Is the ideal strategy only available if we have perfect information? Explain your an- swer. (1.3) Explain how forward pruning works. Provide at least one approach to forward prun- ing in your explanation, as well as a problem that may be encountered with forward pruning. (1.4) Does the order in which nodes are examined in minimax matter? Explain your answer. Question 2 Consider Figure 1 and answer the questions that follow. (The utility value of the leaf nodes are provided below the in brackets in the leaf node.) (2.1) Provide the minimax values for all the non-leaf nodes. (2.2) Which move should MAX make? Explain your answer. (2.3) Write down the α/β values for all the nodes (except the leaf nodes) if alpha/beta prun- ing is applied to the tree. (2.4) Write down which nodes were cut and what type of cut was made in each case (alpha, or beta). Question 3 Consider the subtraction game: two players (A and B) take turns removing items from a heap (just one heap). Each player may remove either one, two, or three items from the heap. The heap starts off with 21 items, and player A moves ﬁrst. The objective of the game is to be the last player to remove items from the heap. That is, if it is your turn to move, and the heap is empty, you’ve lost the game 1. 1visit https://youtu.be/aonCsvi0LKc to see how the game is played. 2 COS3751/103/1/2018 A B D 5 E I 8 J -1 F 10 C G K -5 L 3 H 20 Figure 1: Minimax, alpha/beta The Initial state for the game is (A, 21) indicating that it is A’s turn to move and there are 21 items on the heap. In general then, a state is represented as (P, n) where P ∈ {A, B}, and 0 ≤ n ≤ 21. The evaluation function for non-terminal nodes is a simple threshold function deﬁned as: eval(S) = { −1 if S.n mod (k + 1) = 0, 1 otherwise S.n refers to the number of items left in the heap in state S, and mod is the integer modulo function. (3.1) Draw the entire game tree, starting from the initial state, down to depth two (the initial state is at depth 0), and provide the evaluation for each state at depth 2. (3.2) Using the minimax algorithm, provide the backed-up values for states at depth 1 and 0. (Hint: Since you don’t have the entire game tree, and thus no terminal states, you cannot use a utility value to calculate the backed up values. However, you do have an evaluation function.) 3 (3.3) Which node(s) would not have been evaluated at depth 2 if alpha/beta pruning was employed? Question 4 Answer the following questions on Constraint Satisfaction Problems (CSPs). (4.1) Deﬁne the Least Constraining Value (LCV) heuristic. (4.2) Explain why establishing strong k-consistency is a problem. (4.3) Deﬁne the degree heuristic. (4.4) If no legal assignments for a variable remain during a solution to a CSP, does it mean that the algorithm will be able to ﬁnd a solution by simply backtracking? Explain your answer. (4.5) Explain what forward checking for a CSP is. Question 5 CSPs are especially usefull when trying to solve scheduling problems. Consider the problem of determining how to assign aircraft in a ﬂeet to particular ﬂights. A ﬂight (or a leg) is simply a scheduled transference of passengers from a departing airport to a desti- nation airport (with no stops inbetween). In order to transfer passengers between the source and destination airport a ﬂight needs an aircraft. Additionally, aircraft have a minimum turn-around time of 30 minutes. That is, an aircraft cannot arrive, and then simply take of again. It has to taxi to the gate, passangers should debark, the aircraft should be cleaned, and the new passangers should embark. Only then can the aircraft taxi to the assigned runway and then take-off. The airline in question operates a small ﬂeet of short-haul aircraft, and all ﬂights are only for 9 or fewer passangers. Consider the following ﬂight schedule: Flight Departs Lands QQ144 9:15 10:45 QQ144 14:00 14:45 QQ169 12:15 13:15 QQ108 10:45 11:45 QQ256 09:30 10:15 QQ254 11:15 13:30 QQ099 11:15 13:30 QQ512 13:15 14:15 QQ056 11:15 11:45 QQ134 10:00 10:45 QQ134 14:00 14:45 4 COS3751/103/1/2018 You can assume that departure happens from the same airport (you don’t have to worry about the location of the aircraft). The airline owns several Cessna 208 Grand Caravans (208B), which are: 1. XAX-143, 2. XAX-884, 3. XAX-547, 4. XAX-344, 5. XAX-254, 6. XAX-983, 7. XAX-124 (5.1) The ﬁrst step when representing a problem as a CSP is to deﬁne the variables. The variables are those elements in the problem that get assigned something else from the problem. Read the above problem description carefully to determine which ele- ments from the problem are variables. Now provide these variables for the problem. Remember to use the correct notation! Hint: In most cases the variables are those elements from the problem which will require the use of a limited item available. (5.2) Once the variables have been deﬁned, we proceed to deﬁning the domain for each variable. That is, the ‘value’ that each variable can take. Deﬁne the domain for each variable in the CSP. (5.3) The constraints determine the ‘restrictions’ placed on variables. Deﬁne the constraints for the variables in the CSP. (5.4) Provide the constraint graph for this problem. (5.5) Provide the solution to the problem. Use the Minimum Remaining Values (MRV) heuristic, and at each step establish arc-consistency for the variables. Show how the solution is calculated in a step by step fashion. Provide the variables and their associated values as your ﬁnal answer! Question 6 (6.1) Show that the sentence: A ⇔ (B ∨ C) |= A. Proceed by ﬁrst converting the sentence to CNF! (CNF!) form, and then showing that A ⇔ (B ∨ C) |= A using resolution. 5 Question 7 Do excercise 8.9 a, c, e, f in the textbook. c⃝UNISA 2018 (v2018.1.0) 6","libVersion":"0.2.3","langs":""}