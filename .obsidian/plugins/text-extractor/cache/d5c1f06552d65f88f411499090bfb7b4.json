{"path":"UNISA/98906 - BSc Science in Computing/COS3761 - Formal Logic III/Unsorted/COS3761/COS3761_-_notes.pdf","text":"Formal Logic 1 - Metavariables and WFFs Definitions- Rules for generating WFFs- PL: Propositional logic Sentence Letters- A, B, C, D … Z- A1, A2, A3, … An- ~, ∧, V, , ≡, (, )- Formula: any string of the above symbols Atomic formula: only one sentence letter. -> A Example: John is happy Happy Jon is (Not well formed sentence)- WFF (Well-formed Formula): Conforms to the rules of PL. A, B, C, D … ~A, ~B, ~C, ~D (Not A) (A ^ B), (A ^ C) 1. Metavariables: (Not a part of PL) - Can be used to talk about PL. Φ - phi- Ψ - psi- WFF Rules: For any Φ, if Φ is an atomic formula then Φ is a WFF.1. For any Φ, and any Ψ, if Φ and Ψ are WFFs, then all of the below are WFFs: ~Φa. (Φ ^ Ψ)b. (Φ V Ψ)c. (Φ Ψ)d. (Φ ≡ Ψ)e. 2. There are no more WFFs3. A ^ B <- no ambiguity Unambiguity Wff Formal Logic 2 - Truth tables Meaning of the Logical Constant- Truthtables for more complex formulas- Testing for equivalence and validity- ~ not (Negation) Φ ~Φ T F F T Rule: Reverses truth value ∧ - and (Conjunction) Φ Ψ | (Φ Ψ) T T T T F F F T F F F F Rule: T only when TT V - or (Disjunction) Φ Ψ (Φ V Ψ) T T T T F T F T T F F F Rule: Only F when FF Study Sunday, 29 August 2021 11:56 COS3761 Page 1 - if then (Implies) Φ Ψ (Φ Ψ) T T T T F F F T T F F T Material Conditional Rule: only F when TF ≡ - if and only if (Biconditional) Φ Ψ (Φ Ψ) T T T T F F F T F F F T Rule: only T when match Tautology: When the entire statement is always true Contradiction: When the entire statement is always false Contingency: Truth of the overall formula is contingent in some way of the truth and falsity of the formula Deductive Validity: An argument is deductively valid if the truth of its premises would guarantee the truth of its inclusion - Semantic turnstyle - Not a part of PL A, (A B) B - Sequent ~ (A ∧ ~ A) Φ - Read: It is a logical truth that Φ- Formal Logic 3 - Intro to Proof Rules of inference: ∧I (Introduction)○ VI○ ∧E (Elimination)○ ~E○ E○ ≡E○ - 4 basic proofs- ∧I 1 Φ 2 Ψ 3 Φ ∧ Ψ 1,2 ∧I 4 Ψ ∧ Φ 1,2 ∧I ∧E 1 Φ ∧ Ψ 2 Φ 1, ∧E 3 Ψ 1, ∧E ~E 1 ~~Φ 2 Φ 1, ~E VI 1 Φ 2 Φ V Ψ 1, VI 3 Ψ V Φ 1, VI E 1 Φ Ψ 2 Φ 3 Ψ 1, 2, E Rule: If you have the antecedent then you can derive the consequent ≡E 1 Φ ≡ Ψ 2 Φ 3 Ψ 1, 2, ≡E 4 Φ 1, 3, ≡E Rule: If you have either sides you can derive the other Antecedent: The antecedent implies the consequent (1) Consequent: The consequent can be derived (3) if we have the antecedent (2) Formal Logic 4 - Proof Continued COS3761 Page 2 Assumptions and Reiterations- Conditional Introduction- Biconditional Introduction- I 1 Φ A 2 Ψ 3 Φ Ψ 1-2 I ≡I 1 Φ A 2 Ψ 3 Ψ A 4 Φ 5 Φ ≡ Ψ 1-2, 3-4, ≡I Formal Logic 5 - Completing Proofs in PL Negation introduction- Disjunction elimination- Principle of explosion (using indirect proofs)- ~E 1 Φ 2 Ψ 3 ~Ψ 4 ~Φ 1, 2, 3, ~I VE 1 Φ V Ψ 2 Φ A 3 X 4 Ψ A 5 X 6 X 1, 2-3, 4-5, VE Principle of explosion You can prove anything from a contradiction 1 A ∧ ~ A P 2 ~Z A 3 A ∧ ~A 1R 4 A 3, ∧E 5 ~A 3, ∧E 6 ~~Z 2, 4, 5 ~I 7 Z 6, ~E Summary Conjunction ∧ (Introduction m Φ n Ψ o Φ ∧ Ψ m, n, ∧I Conjunction ∧ (Elimination) m Φ ∧ Ψ n Φ m, ∧E o Ψ m, ∧E Disjunction V (Introduction) m Φ n Φ V Ψ m, VI Disjunction V (Elimination) m Φ V Ψ n Φ A o X COS3761 Page 3 n Φ V Ψ m, VI n Φ A o X p Ψ A q X r X m, n-o, p-q, VE Negation ~ (Introduction) m Φ A n Ψ o ~Ψ p ~Φ m, n, o ~I Negation ~ (Elimination) m ~~Φ n Φ m, ~E Conditional (Introduction) m Φ A n Ψ o Φ Ψ m-n, I Conditional (Elimination) m Φ Ψ n Φ o Ψ m, n E Biconditional ≡ (Introduction) m Φ A n Ψ o Ψ A p Φ q Φ ≡ Ψ m-n, o-p, ≡I Biconditional ≡ (Elimination) m Φ ≡ Ψ n Φ o Ψ m, n ≡E Formal Logic 6 - Useful Sub-Proofs Useful Sub-Proofs: A v B, ~A B- A ≡ B, ~A ~B- A B, ~B ~A- ~(A v B) ~A ∧ ~B- COS3761 Page 4 COS3761 Page 5 Formal Logic 7 - Translation into QL Subjects & Predicates- Quantifiers & Variables- Identity restriction- Domain restriction- John is happy j H H = is happy j = John Subject - lowercase letters (j, k , l) Predicate - Uppercase letters (A, B, C, A1, A2, A3) Hj - Happy (John) Quantifiers - Existential - Universal Variables need to fill the space of quantifiers Variables: x, y, z, x1, x2, x3… x) - Some x, there exists an x… Something… an… a… x) - Nothing… there is no x such that x) - All, every, every x is such that x) - Not all, Not everything is… COS3761 Page 6 x) - Not all, Not everything is… Something is tall and happy H…1 : …1 is happy T…1 : …1 is Tall ( x)( Hx ∧ Tx ) Something is tall and Something is happy ( x)Hx ∧ ( x)Ty COS3761 Page 7 Identity Restriction QL atomic formulas Ab Cde Ax Cxy Bxyz X = Y a = b ~x = y Domain Restriction COS3761 Page 8 Formal Logic 8 - Intro to proof in QL 2 new rules of inference: I & E- Existential Introduction COS3761 Page 9 COS3761 Page 10 DON’T NEED TO SWAP OUT EVER INSTANCE OF THE CONSTANT Universal Elimination COS3761 Page 11 COS3761 Page 12 COS3761 Page 13 Formal Logic 9 - Proofs in QL Completed Identity introduction and elimination- Existential elimination- Universal Introduction- COS3761 Page 14 Identity Introduction and Elimination Existential Elimination COS3761 Page 15 COS3761 Page 16 COS3761 Page 17 Universal Introduction COS3761 Page 18 COS3761 Page 19 COS3761 Page 20 COS3761 Page 21 Rules COS3761 Page 22 5 step program for proofs Look down - What are you trying to derive!1. What is the main operator? (M.O)2. Try to introduce via M.O intro rule3. Try to eliminate from previous formula4. Try indirect proof5. Quick Introduction to Modal Logic What is a modal? A modal is anything that qualifies the truth of a sentence. - COS3761 Page 23 The Basic Modal Language Semantics for Propositional Modal Logic COS3761 Page 24 Kripke Structures Truth of Modal Formulas = true when all worlds are true = true when at least one world is true Parse Tree COS3761 Page 25 COS3761 Page 26","libVersion":"0.2.3","langs":""}