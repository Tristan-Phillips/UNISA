{"path":"UNISA/98906 - BSc Science in Computing/COS3711 - Advanced Programming/Unsorted/Notes/COS3711_Questions_and_answers.pdf","text":"COS3711 questions and answers exercise 1 1 The #include pre-processor directive uses two different types of enclosures, as below - # include \"class name\" # include <class name > What is the difference between using <> or “ “ ? Answer #include “myClass” - Compiler/pre-processor first looks for a file of the given name in the same directory as the file that contains the directive. If that fails, then follows the search path used for <> . Defined as a SOURCE file, but is usually a .h file. #include < myClass > - Compiler/pre-processor searches for files in an implementation dependent manner - normally in directories designated by the implementation. Normally used for a standard library HEADER, which does not necessarily have to be a file, but is usually a .h file. 2 Where is inheritance implemented in your application ? Write the appropriate line/s of code. Answer class Hello : public QWidget 3 The following code snippet could be used to implement the functionality for the ’Process’ button. connect (btnProcess , & QPushButton :: clicked , this , &Hello :: processInput ); What Design Pattern is implemented in this code ? Answer Observer Pattern. 4 Describe the purpose of the Design Pattern. (Refers to question 3) Answer Used for inter-object communication. The Observer Pattern defines a one-to-many relationship between objects, so that when the state of one object changes (Subject), all of the linked objects (Observers) are immediately notified of the change of state. 1 5 What is this implementation known as in the Qt Framework ? (Refers to question 3) Answer Signals and Slots 6 QWidget does not have a connect() method, but it is still possible to implement the method in your code. Explain why this is possible. Answer connect() is a method of the QObject class. QWidget inherits QObject, and so has access to all the methods and properties of QObject. 7 The following code snippet contains an error, although the code still compiles and runs successfully. QVBoxLayout * layout (new QVBoxLayout (this)); layout -> addWidget ( txtInput ); layout -> addWidget ( btnProcess ); layout -> addWidget ( btnQuit ); setLayout ( layout ); Identify the error, explain why it is incorrect, and describe how it should be corrected. Answer QVBoxLayout * layout (new QVBoxLayout (this)); The this pointer in the constructor of QVBoxLayout sets the top level QWidget as the parent of the QVBoxLayout object. setLayout ( layout ); The setLayout() method of QWidget also sets the QWidget as the parent of the layout object. This is a duplication, and is not required. Either remove the setLayout() method, or remove the this pointer from the QVBoxLayout constructor. 8 What Design Pattern is implemented in the above code ? (Refers to question 7) Answer Composite Pattern 9 What is this implementation known as in the Qt Framework ? (Refers to question 8) Answer Qt parent-child relationship. 2 10 The Hello Class implements three members as pointers, but there is no Destructor implemented to delete the pointers and release the heap memory. QTextEdit * txtInput ; QPushButton * btnProcess ; QPushButton * btnQuit ; Is this an error, and does it cause a memory leak? Explain / justify your answer. Answer No, it is not an error, and it does not cause a memory leak. The pointers have been added to the layout using the addWidget() method. This makes the layout the parent of the pointers, and the QWidget is the parent of the layout. The QWidget is therefore responsible of the destruction of all of its children, and will delete the pointers when required. This is an implementation of the Composite Pattern / Qt parent-child relationship. 3 exercise 2 1 Is this valid code for the prototype of the setPostCode() method of the Customer class? void setPostCode ( QString ); Answer Yes, the prototype of a method / function requires • return type; • name; • parameter list i.e type; – parameter names are optional 2 What is the difference between a function and a method in C++ ? Answer Function and method are essentially the same thing. A ’function’ is usually referred to as a ’method’ when it is included (encapsulated) into a Class – ie: method is the OOP name for a function. 3 What is the difference between a Class and a Struct ? Answer A Class is PRIVATE by default, and a Struct is PUBLIC by default. There is no other difference. They can be used interchangeably if access to all members is explicitly defined using access specifiers. 4 What is the difference between the prototype and the signature of a function / method ? Answer • Prototype must include - Function / method return type, name, and parameter list; • Signature must include - Function / method name, and parameter list – NOT return type. 5 What is an overloaded function / method ? Answer A function / method is overloaded if two or more functions / methods in the same scope have the same name, but different signatures ie: different parameter lists. Note that functions / methods cannot have the same signature, but different return types. 6 Explain the effect of the use of access specifiers within a Class – public, protected, and private. 4 Answer • Public – Class member can be accessed anywhere in a program, using an object of the Class, or from a method of its own Class. Static member can be accessed without an object of the Class. • Protected – Class member can be accessed from a method of its own Class, or a method of a derived Class. • Private – Class member can only be accessed from a method of its own Class, or by a friend of the Class. Classes are private by default. 7 Explain the meaning / use of the following terms – virtual, pure virtual. Show an example of the use of each one. Answer • Virtual – Method / function declared virtual can be overridden in a derived class, to enable polymorphism. (Any method / function can be overridden in derived classes). Virtual methods / functions overridden in derived classes are accessed using a pointer to the base class object. This enables run-time binding – polymorphism. The prototypes of the methods must be the same in the base and derived classes. Virtual methods / functions must be implemented in the base class. virtual void myMethod (); • Pure Virtual – A ’pure virtual’ method / function must be overridden in a derived class (otherwise the derived class will also be abstract), and does not need to be implemented in the base class. A virtual method / function is made ’pure virtual’ by assigning the value 0 to the method / function. A class that has one, or more, virtual methods / functions is an ’abstract class’ and objects cannot be instantiated from it. virtual void myMethod () = 0; 8 What is an ’Abstract Class’ ? Answer An abstract class contains one, or more, methods that have been declared to be ’pure virtual’. Objects cannot be instantiated using an abstract class. 9 explicit MyClass (int number ); void processInput (); Customer getCustomer () const; Explain the use of the following keywords within a Class declaration - explicit void const 5 Answer • explicit – A constructor that can be called with one argument is a ’conversion constructor’ because it changes the argument type to the constructor’s class type. Use of the keyword ’explicit’ before a conversion constructor prevents the compiler from making any implicit type conversions. MyClass myObject (1); // Legal MyClass myObject (’1’); // Error if constructor is ’explicit ’ prevents implied conversion from Char to int , otherwise legal. • void - means ’no type’. C++ requires method / function prototypes to have a return type. Void is used to indicate that there is no return type. • const – A method / function declared as const cannot modify the object on which it is called. This prevents accidental / unwanted changes to objects. 10 int *thing; thing = new int (10); int otherThing ; otherThing = *thing; 1. Explain the difference in the use of the * operator in the above code. 2. What is the value of thing, after the code has executed ? 3. What is the value of otherThing, after the code has executed ? Answer 1. int *thing; // Type modifier declares pointer to int type. otherThing = *thing; // Dereference operator returns the value of the object that the pointer is pointing to. 2. Some memory address eg: 0xed1350 – ’thing’ is a pointer, stores a memory address. 3. 10 6 exercise 4 1 What is ’reflection’ ? Answer The self-examination of an object’s members. 2 What is a ’meta-object’ ? Answer An object that describes the structure of another object. 3 Describe ’QVariant’. Answer QVariant – is a Union for most Qt data types. Union can hold only one of its non-static data members at a time. 4 List three differences between fixed and dynamic properties. Answer Fixed properties • Defined at compile time • Stored in QMetaObject • All objects of Class have the same meta-object (Same properties, not values) Dynamic properties • Handled at run time • Added to QObject, not QMetaObject • Are specific to each object 5 How would you determine how many fixed properties an object has ? Answer const QMetaObject * metaObj = obj -> metaObject (); int numProp = metaObj -> propertyCount (); 7 6 How would you determine how many methods an object has ? Answer const QMetaObject * metaObj = obj -> metaObject (); int numMethods = metaObj -> methodCount (); 7 How would you determine the class name of an object ? Answer const QMetaObject * metaObj = obj -> metaObject (); const char* class = metaObj -> className (); 8 How can a dynamic property be removed from an object ? Answer A dynamic property can be removed from an object by setting the property value to an invalid QVariant, using the setProperty() method. The default constructor for QVariant constructs an invalid QVariant. 9 List three Qt classes that can be used to determine a class’s properties at run-time. Answer • QObject • QMetaObject • QMetaProperty 10 Given the following statement in a class header - Q_PROPERTY ( QString id READ getId WRITE setId) Describe what the following statements will do - obj. setProperty (id , \"A357\"); obj. setProperty (ID , \"A357\"); Answer • Set a fixed property named id, with the value “A357” • Set a dynamic property named ID, with the value “A357” Property names are case-sensitive. 8 exercise 5 1 Model / View / Controller has been described as a “triad of classes”. Which three design patterns are used in MVC ? Answer Observer Pattern, Composite Pattern, Strategy Pattern. 2 What is the base class for all views in Qt? Answer QAbstractItemView 3 What is the base class for all models in Qt ? Answer QAbstractItemModel 4 What is the role of a ’delegate’ in Qt Model / View ? Answer Delegates control the rendering and editing of individual items in views. 5 Which methods MUST be implemented when sub-classing QAbstractTableModel – ie: they are pure virtual in the base class ? Answer rowCount(), columnCount(), and data() are pure virtual methods that provide access to model data. 6 What is the purpose / function of each of the following methods in QAbstractTableModel class ? - • data(); • setData(); • flags(); Answer • data() - Returns data from the model to display in the view, depends on role; • setData() - Sets data in the model; • flags() - Returns flags for a given index. 9 Answer What is the purpose / function of each of the following methods in QStyledItemDelegate class ? - • createEditor(); • setEditorData(); • setModelData(); Answer • createEditor() - Creates an editor object and returns it to the view; • setEditorData() - Reads data from the model, and sets the data in the editor; • setModelData() - Reads data from the editor, and sets the data in the model. 8 How do you make a table model ’editable’ ? Answer Override the flags() method to return Qt::ItemIsEditable. Override the setData() method to write edited data back to the model – Qt::EditRole. 9 How do you provide headings to the columns in a view ? Answer Use the headerData() method of the model. 10 What is the advantage of using smart pointers, such as QSharedPointer ? Answer QSharedPointer keeps a reference count of objects that it is pointing to (Allows copies), and only deletes the shared heap object when the last shared pointer is destroyed. Automatically handles deleting objects, without having to specifically call delete on an object. 10 exercise 6 1 Provide a regular expression to validate a year in the range 1900 to 2099. Answer \"(19 | 20) \\\\d \\\\d\" (Spaces added for clarity) 2 Is this a valid declaration for a regular expression ? Justify your answer. QRegularExpression re(\"\\d\\d\\d\\-\\d\\d-[A-Z][a-z]{2}\"); Answer No. All backslashes within a string must be escaped, ”\\\\d”, or they will be treated as literal backslashes. 3 Provide a declaration for a QRegularExpression that complies with the following - • First three characters – digits in the range 100 to 199; • An optional gender character m or f; • Three to ten alphabetic characters, first one must be a capital letter. Answer QRegularExpression re(\"1\\\\d\\\\d(m|f)?[A-Z]([A-Z][a-z]) {2 ,9}\"); 4 Assuming that the regular expression in question 6.4.3 has been set as a validator on a QLineEdit, can the following be entered into the QLineEdit ? - • 200mJoe • 150fA • 176Sim Answer • No, QLineEdit will not accept 2 as first digit – must be 1. • Yes, text is valid up to that point. Note: Question is whether text can be entered into the QLineEdit, not if text is valid. • Yes, text is valid. 5 What is the difference between using 0 or 9 in an Input Mask ? 11 Answer 0 – Digit permitted, but not required. ( 0 – 9 ) 9 – Digit required. 6 What is the difference between using d or D in an input mask ? Answer d – Non-zero digit permitted, but not required. ( 1 – 9 ) D – Non-zero digit required. 7 What is the difference between the following quantifiers, when used in a regular expression ? + ? * Answer + One, or more occurrences; ? Zero, or one occurrence; * Zero, or more occurrences. 8 Explain what this would match if used in a regular expression - [ˆ ABC] Answer Matches any character, except A, B, or C. 9 Explain what this would match if used in a regular expression ˆHELP Answer Matches the word HELP, only if it occurs at the beginning of the string being matched. (Provided that the carat is the first character in the regular expression, otherwise matches the sub-string ˆHELP). 10 What would the validate() method of QValidator return in each of the following cases, when validating the regular expression - \"\\\\d\\\\d[A-Z][a-z]{2}\" • 45A • 45zz • 99Bax 12 Answer • Intermediate • Invalid • Acceptable exercise 7 1 If XML data is written to file using DOM, can the same file be read using SAX ? Justify your answer. Answer Yes, XML is a STANDARD format. Any method that complies with the XML standard can be used to read and write XML files. 2 What does XML stand for ? Answer eXtensible Markup Language. 3 Is this a ’well-formed’ XML document ? <?xml version =\"1.0\"?> <person > <name >Joe Bloggs </name > <id >12345 </id > </person > Answer Yes 4 Is this a ’well-formed’ XML document ? <person > <name gender =male >Joe Bloggs </name > <id >12345 </id > </person > Answer No, attributes must be enclosed in quotes. 13 5 Can XML elements be empty ? Answer Yes. <person ></ person > <person /> 6 Is this an acceptable name for an XML element ? <first name >Tom </ first name > Answer No, spaces are not allowed in element names. 7 Give an example of a comment in XML. Answer <!-- This is a comment --> 8 Is this XML element valid ? <name >Joe Bloggs </Name > Answer No, XML is case-sensitive. 9 What is the primary use of XML ? Answer Store and communicate data. 10 Does XML preserve white space ? Answer yes 14 exercise 9 1 What is a thread ? Answer A thread is a functionality within a process. 2 What is multi-threading ? Answer Multi-threading occurs when multiple threads are executing within a process concurrently. Each thread shares the same resources and memory space, but they operate independently of each other. 3 What is the difference between a thread and a process ? Answer A process is a single instance of a program with its own resources and memory space. A thread is a sub-set of a process, and shares resources and memory space. A process can contain multiple threads, all of which share the same resources. 4 Why may thread behaviour be unpredictable ? Answer Thread behaviour may be unpredictable because thread execution is determined by the CPU, and different CPUs may give different priorities to different threads. Different CPUs may therefore run threads in a different order, or with different execution times – leading to unpredictability in code execution. 5 Can a thread be started more than once ? Answer No, the same thread cannot be started more than once. Once a thread has completed execution it is ’dead’. 6 List three Qt classes that can be used to synchronize threads when multiple threads attempt to access the same resource simultaneously. Answer • QMutex • QSemaphore • QReadWriteLock 15 7 Is the following code a valid implementation of a QThread ? QThread * thread (new QThread (this)); Worker * myWorker (new Worker (this)); myWorker -> moveToThread ( thread ); // Connect signals and slots thread ->start (); Answer No, an object moved to a thread cannot have a parent. 8 Is an object of QThread a thread ? Answer No, QThread is not a thread itself. It is a ’wrapper’ around a thread object that provides functionality such as signals and slots, and methods to manage a thread object. 9 How can a worker object running in a thread communicate its output to the client program ? Answer Signals and Slots. Implement a Signal in the worker class that has a parameter of an appropriate type to communicate data to a Slot in the client program. 10 Can Signals and Slots be connected across different threads ? Answer Yes, it is safe to connect Signals and Slots across different threads. Qt implements a mechanism known as ’queued connections’ to handle communication between different threads. 16","libVersion":"0.2.3","langs":""}