{"path":"UNISA/98906 - BSc Science in Computing/COS3711 - Advanced Programming/Unsorted/SORT/Prev Sem/COS3711/Doc/3711+Nov+2016+answers.pdf","text":"No v \t 2 0 1 6 \t \t Qu e s t i o n \t 2 \t \t class Book : pu blic QObject { Q_OBJECT Q_PROPERTY(QString title, READ getTitle, WRITE setTitle); public: Book(); private: QString title; QString getTitle() const; void setTitle(QString t); }; \t \t \t \t \t 2. 2 \t wr i t e r . wr i t e S t a r t E l e m e n t ( “ book l is t ” ) ;\t \t \t co n st \t Q M e t a O b j e ct \t *m e t a\t =\t b o o k . s t at i c M e t aO b j e c t ( ) ; \t \t QS t r i n g \t c l a s s N a m e \t = \t m e t a - >c l as s N am e ( ) ; \t \t QS t r i n g \t t i t l e ; \t \t \t fo r(i n t\t i \t = \t 0 ; \t i \t < \t m e ta - >p r o p e r t y C o u n t ( ) ; \t i ++) \t { \t \t QM e t a P r o p e r t y \t p r o p \t = \t m e t a - >p r o p e r t y ( i ) ; \t \t \t co n st \t ch a r * \t n a m e \t = \t p r o p . p r o p e r t yN a m e ( ) ; \t \t \t \t \t QS t r i n g \t v a l u e \t = \t b o o k . p r o p e r t y( n a m e ) . t o S t r i n g( ) ; \t \t \t \t \t if ( n a m e \t= = \t” t it le ” ) \t \t \t ti tl e \t = \t v a l u e ; \t \t } \t \t wr i t e r . wr i t e S t a r t E l e m e n t ( “ b o o k ” ) ; \t \t wr i t e r . wr i t e A t t r i b u t e ( “ t y p e ” , \t c l a s s N a m e ) ; \t \t wr i t e r . wr i t e T e x t E l e m e n t ( “ t i t l e ” , \t t i t l e ) ; \t \t wr i t e r . wr i t e E n d E l e m e n t ( ) ; \t //t i t l e \t wr i t e r . wr i t e E n d E l e m e n t ( ) ; \t //b o o k \t \t wr i t e r . wr i t e E n d E l e m e n t ( ) ; \t \t //b o o k l i st \t \t 2. 4 \t \t cl a ss\t B o o kF a ct o r y \t { \t \t publ i c : \t \t \t Book \t c r e a t e Book ( Q S t r i ng \t t y pe ) ; \t \t } \t \t Book \t Book F a c t or y : : c r e a t e Book ( Q S t r i ng \t t y pe ) \t { \t \t if ( t y p e \t= = \t“ F ic t io n ” ) \t \t \t re tu rn \t n e w \t F i c ti o n (); \t \t \t if ( t y p e \t= = \t“ N o n F ic t io n ” ) \t \t \t re tu rn \t n e w \t N o n F i c ti o n (); \t \t \t re tu rn \t N U L L ; \t \t } \t \t \t \t \t \t class BookList { public: static BookList * getInstance(); void addBook(Book b); QList<Book> getList() const; void restore(Backup b); Backup saveBackup(); private: BookList(); static BookList * instance; QList<Book> booklist; }; \t \t Book L i s t . c pp \t Book L i s t * \t Book L i s t : : i ns t a nc e \t = \t N U L L ; \t \t \t Book L i s t * \t Book L i s t : : g e t I ns t a nc e ( ) \t { \t \t if ( in s t a n c e \t= = \tN U L L ) \t \t \t \t in s t a n c e \t= \tn e w \tB o o k L is t ( ) ;\t \t \t \t re tu rn \t i n s ta n c e ; \t \t } \t \t Ba c k up\t Book L i s t : : s a v e Ba c k up( ) \t { \t \t Ba c k up\t b; \t \t \t b. s e t S t a t e ( book l i s t ) ; \t \t \t \t re tu rn \t b ; \t \t } \t \t vo i d \t Book L i s t : : r e s t or e ( Ba c k up\t b) \t { \t \t book l i s t \t = \t b. g e t S t a t e ( ) ; \t \t } \t \t Qu e s t i o n \t 4 \t class Search : public QObject { Q_OBJECT public: Search(QList<Book> list, QString title); public slots: Book find(); signals: void finished(); void found( Book ); private: QList<Book> books; }; \t QList<Book> b = l :: getInstance() - >getList(); search - >moveToThread(thread); connect(thread, SIGNAL(started()), search, SLOT(find())); connect(search, SIGNAL(found(Book)), client, SLOT(handleFound(Book))); connect(search, SIGNAL(fi nished()), client, SLOT(handleFound(Book))); //sl o t s\t t o \t h a n d l e \t t h r e a d \t q u i t t i n g \t p r o p e r l y . \t \t \t thread - >start(); \t \t search - >setProperty(“staff”, “…”); QTableView v; v.setModel(model);","libVersion":"0.2.3","langs":""}