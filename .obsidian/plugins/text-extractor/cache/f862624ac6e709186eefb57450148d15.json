{"path":"UNISA/98906 - BSc Science in Computing/COS3711 - Advanced Programming/Unsorted/SORT/Prev Sem/COS3711/drive-download-20200416T190041Z-001/Exam Papers/Memo/2013_Jun_E.pdf","text":"UNIVERSITY EXAMINATIONS UNIVERS1TEITSEKSAMENS UN1SAI~ Duration 2 Hours EXAMINERS COS3711 ADVANCED PROGRAMMING FIRST MR CL PILKINGTON MS A THOMAS SECOND MR KJ HALLAND Closed book exammat1on May/June 2013 100 Marks This exammat1on question paper remains the property of the University of South Africa and may not be removed from the exammahon venue Instructions 1 Answer all questions 2 All rough work must be done m your answer book 3 The mark for each question 1s given ,n brackets next to each question 4 Please answer questions in order of appearance This exam1nat1on paper consists of 7 pages Good luckl [TURN OVER] 2 Question 1 Given the following three files, answer the questions below timer.h class Timer { Q_OBJECT public Timer ( int m), void beginCountdown(); signals : II initialises minutes tom II starts the countdown COS3711 May/June 2013 [13 marks] void timeUp(int m), II returns value of minutes data member private int minutes; }, display.h class Display { Q_OBJECT public. Display (); public slots: public QObJect void display(int m), } ; II displays the value m to the console main.cpp int main(int argc, char *argv[]) { } QCoreApplication a(argc, argv); Display d; II add your code here return a exec(); Assume that the function begincountdown () 1n Timer performs a countdown until the time spec1f1ed 1n minutes has lapsed, which results 1n the signal timeup () being emitted by this function 1 1 Rewrite the Timer class def1nit1on so that 1t can be implemented as a thread You do not need to include any pre-processor directives in your answer [2] 1 2 Provide the code 1n the main () function that will [TURN OVER) 3 COS3711 May/June 2013 • create a hst (using an appropriate Qt container) of pointers to Timer obJects (threads), and add 5 Timer obJects to 1t (setting times to 5, 10, 15, 20, and 25 minutes), • allow the output from each thread (indicating that 1t has run its time) to be sent to be displayed by the Display obJect d, and • start each thread Note that you do not need to rewnte the whole main function, but only your code to achieve the above requirements [9] 1 3 Write code that can be used once all the threads have completed running to clean up the thread 11st and clear 1t of all data [21 Question 2 Consider the following class and xml file <temps> <record place= 11 Spr1ngbok\" temp=\"33 9\" /> <record place=\"Robertson\" temp=\"25 3\" /> <record place=\"Ceres\" temp=\"25 0\" /> <record place=\"Calv1n1a 11 temp=\"28 7\" /> <record place=\"KommetJ1e\" temp=\"23 1\" /> <record place= 11 Darl1ng 11 temp=\"28 4\" /> </temps> [8 marks] Record - place QStn ng - temperature float + Record() + getPlace()· 0Stnng + setPlace(QStnng) + getTemp()· float + setTemp(float) 2 1 Write code to read this data into a QList using DOM Use the following function from a DOMReader class as a base from which to work You need to 1nd1cate how you will access the tags in the xml hie sequentially, and access the attributes 1n each tag so that you can build up a Record obJect to add to 11st [7] QL1st<Record> DOMReader :readFile() { } QList<Record> list; QDomElement root= doc documentElement(); 1f {root tagName () == \"temps 11 ) { QDomNode node= II add code here to get the first record tag wh1le(!node isNull()) { } QDomElement element= II add code here if(element tagName{) == \"record\") { } Record record; II add code here l1st.append(record); node= II add code here to move to the next node return list; [TURN OVER] 4 COS3711 May/June 2013 22 Using DOM 1s only one way of parsmg an xml file could have used? Name one other option that you [1 J Question 3 [24 marks] 3 1 The Memento pattern 1s used for capturing and externahs1ng the internal state of an object Why, or where, would this ab1hty to hold the internal state of an object be useful? {2] 3 2 Draw a UML diagram to show an 1mplementat1on of the Memento pattern, and describe the main roles of the classes that make up this pattern f 12] 3 3 Assuming that a StockList obJect can store its state 1n a QStr1ngL1st named state, and a StockListMemento needs to be created to hold this state, write code for the follow1ng You do not need to include any pre-processor d1rectrves 1n your code 3 3 1 Write code for a stockListMemento class def1mt1on that would allow only a stockList object access to 1t Do not write 1mplementat1ons for any functions that you include [6] 3 3 2 Write code for a tunctron of the stockList class that will be used to create the StockListMemento [4] Question 4 Consider the following def1rnt1on of a Transaction class #include <QDate> #include <QString> class Transaction public void setDate(QDate d), //set the date void setDescription(QString d) , // set the descripti o n QString toString() canst, // return a string representation of the //state of an obJect void inputTransactioninfo(), //o btain date and description from // user void val1dateinput ( ) , / /validate user input void displayTransaction(), // display transaction to the console void saveTransaction ( ) , // save transaction to a file private } , 41 42 QDate m_date, // date o f transaction QString rn_description, / /de s cription of transaction Name and explain the Ant1Pattern in Transaction Describe two Object-orrented design problems wrth Tran sa ction [25 marks] [2] [2] [TURN OVERJ 5 COS3711 May/June 2013 4 3 Redesign the code above so that the Anti Pattern 1s ehmmated from Transact ion Represent the resulting design using the UML notation Indicate classes with at least the given data members and member functions, and relat1onsh1ps between classes [5) 4 4 The toString ( l function in Transaction above 1s meant to return the string representation of the current state of an object However, 1t 1s not a generic solution because every class has to provide its own 1mplementat1on of toString ( l, 1f the state of an obJect needs to be accessed in an easily accessible format On the other hand, Qt provides a generic way of accessing the state of any object 1rrespect1ve of the class structure Explain the generic solution offered by Qt to replace the tostring ( l function m a cl~ ~ 4 5 Make the necessary changes m the Transaction class defm1t1on (using that given above or the mod1f1ed Transaction m 4 3) so that the toString () function 1s removed but yet the state of a Transaction object can be accessed via the generic solution offered by Qt (as answered 1n 4 4) Include the necessary pre-processor directives [1 O] 4 6 List two Qt classes that are essential to accessing the state of an object 1f the respective class has implemented the generic solution as answered 1n 4 4 [2] 4 7 Explain the role of the QVariant class 1n accessing the state of an obJect using the generic solution answered m 4 4 [2] Question 5 5 1 Explain the main components of the MVC pattern 5 2 Explain two design benefits of applying the MVC pattern 5 3 List three d1ff erent views offered by the model view framework of Qt [13 marks] [3) [2] [3] 5 4 Write the missing Imes of code (1nd1cated by the Imes) so that the strings m names are added to an appropriate data model, which 1s then displayed m alphabetic order using a concrete view obJect (5] [TURN OVER] #include <QApplication> #include <QListView> int main(1nt argc, char *argv{]) { QAppl1cation a(argc, argv), 6 COS3711 May/June 2013 QStringList names= QStringList() << \"Aeta\" <<\"Beta\"<< \"Zeta\"<< \"Geta\", model setStringL1st(names), QListView view, return a exec(), Question 6 (7 marks] 6 1 List three ways m which the Qt framework supports validation of user input using validators [3] 6 2 List and explain any two regular expression meta-characters 6 3 Consider the following two regular expressions (a) [0-9) {3, 6} (b) [A-Za-z] [2] Provide any two strings (one per regular expression) which satisfy the expressions [2] Question 7 (10 marks] Answer either 7 A OR 7B Do not answer both questions as then only the first one you attempt will be marked 7 A: Using the Visitor pattern 7 1 Describe the general programming scenario 1n which you would apply the classic V1s1tor pattern. [2] 7 2 Implementing the classic V1s1tor pattern mtroduces coupling between the v1s1tor class hierarchy and the ongmal class hierarchy Explain the relat1onsh1p between these two class h1erarch1es that introduces the coupling [2] 7 3 Explain the effect of adding a new concrete subclass in the ongmal class hierarchy on the visitor class hierarchy [2] [TURN OVER] 7 7 4 When 1s a new subclass added to the v1s1tor class hierarchy? COS3711 May/June 2013 [2] 7 5 Explain the effect of adding a new concrete subclass in the visitor class hierarchy on the ongmal class hierarchy [2) 78: Networking 7 1 Qt supports accessing TCP and UDP directly at socket level Give 3 differences between TCP and UDP that you need to keep 1n mind when choosing which one to ~ ~ 7 2 Given the following two Imes of code, wnte the code that 1s needed to read a UDP datagram into a buffer and then mto the QString (so that the data can be displayed m a user interface) QUdpSocket* socket= new QUpdSocket(), QString line, r] EXTERNAL EXAMINER: MS L MARSHALL (PRETORIA - UP) C UNISA 2013","libVersion":"0.2.3","langs":""}